[
  {
    "id": 0,
    "type": {
      "path": [
        "sp_core",
        "crypto",
        "AccountId32"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 1,
              "typeName": "[u8; 32]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 1,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 32,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 2,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U8"
      },
      "docs": []
    }
  },
  {
    "id": 3,
    "type": {
      "path": [
        "frame_system",
        "AccountInfo"
      ],
      "params": [
        {
          "name": "Nonce",
          "type": 4
        },
        {
          "name": "AccountData",
          "type": 5
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "nonce",
              "type": 4,
              "typeName": "Nonce",
              "docs": []
            },
            {
              "name": "consumers",
              "type": 4,
              "typeName": "RefCount",
              "docs": []
            },
            {
              "name": "providers",
              "type": 4,
              "typeName": "RefCount",
              "docs": []
            },
            {
              "name": "sufficients",
              "type": 4,
              "typeName": "RefCount",
              "docs": []
            },
            {
              "name": "data",
              "type": 5,
              "typeName": "AccountData",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 4,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U32"
      },
      "docs": []
    }
  },
  {
    "id": 5,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "AccountData"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "free",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "reserved",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "frozen",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "flags",
              "type": 7,
              "typeName": "ExtraFlags",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 6,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U128"
      },
      "docs": []
    }
  },
  {
    "id": 7,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "ExtraFlags"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 6,
              "typeName": "u128",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 8,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "PerDispatchClass"
      ],
      "params": [
        {
          "name": "T",
          "type": 9
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "normal",
              "type": 9,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "operational",
              "type": 9,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "mandatory",
              "type": 9,
              "typeName": "T",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 9,
    "type": {
      "path": [
        "sp_weights",
        "weight_v2",
        "Weight"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "ref_time",
              "type": 10,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "proof_size",
              "type": 10,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 10,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 11
        }
      },
      "docs": []
    }
  },
  {
    "id": 11,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U64"
      },
      "docs": []
    }
  },
  {
    "id": 12,
    "type": {
      "path": [
        "primitive_types",
        "H256"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 1,
              "typeName": "[u8; 32]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 13,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 14,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "digest",
        "Digest"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "logs",
              "type": 15,
              "typeName": "Vec<DigestItem>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 15,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 16
        }
      },
      "docs": []
    }
  },
  {
    "id": 16,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "digest",
        "DigestItem"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PreRuntime",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": "ConsensusEngineId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "Consensus",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": "ConsensusEngineId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Seal",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": "ConsensusEngineId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Other",
              "fields": [
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "RuntimeEnvironmentUpdated",
              "fields": [],
              "index": 8,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 17,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 4,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 18,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 19
        }
      },
      "docs": []
    }
  },
  {
    "id": 19,
    "type": {
      "path": [
        "frame_system",
        "EventRecord"
      ],
      "params": [
        {
          "name": "E",
          "type": 20
        },
        {
          "name": "T",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "phase",
              "type": 454,
              "typeName": "Phase",
              "docs": []
            },
            {
              "name": "event",
              "type": 20,
              "typeName": "E",
              "docs": []
            },
            {
              "name": "topics",
              "type": 455,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 20,
    "type": {
      "path": [
        "kitchensink_runtime",
        "RuntimeEvent"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "System",
              "fields": [
                {
                  "name": null,
                  "type": 21,
                  "typeName": "frame_system::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Utility",
              "fields": [
                {
                  "name": null,
                  "type": 30,
                  "typeName": "pallet_utility::Event",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Indices",
              "fields": [
                {
                  "name": null,
                  "type": 33,
                  "typeName": "pallet_indices::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Balances",
              "fields": [
                {
                  "name": null,
                  "type": 34,
                  "typeName": "pallet_balances::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "TransactionPayment",
              "fields": [
                {
                  "name": null,
                  "type": 36,
                  "typeName": "pallet_transaction_payment::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "AssetTxPayment",
              "fields": [
                {
                  "name": null,
                  "type": 37,
                  "typeName": "pallet_asset_tx_payment::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "AssetConversionTxPayment",
              "fields": [
                {
                  "name": null,
                  "type": 39,
                  "typeName": "pallet_asset_conversion_tx_payment::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "ElectionProviderMultiPhase",
              "fields": [
                {
                  "name": null,
                  "type": 40,
                  "typeName": "pallet_election_provider_multi_phase::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": []
            },
            {
              "name": "Staking",
              "fields": [
                {
                  "name": null,
                  "type": 47,
                  "typeName": "pallet_staking::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "Session",
              "fields": [
                {
                  "name": null,
                  "type": 52,
                  "typeName": "pallet_session::Event",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "Democracy",
              "fields": [
                {
                  "name": null,
                  "type": 53,
                  "typeName": "pallet_democracy::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "Council",
              "fields": [
                {
                  "name": null,
                  "type": 58,
                  "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance1>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "TechnicalCommittee",
              "fields": [
                {
                  "name": null,
                  "type": 59,
                  "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance2>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "Elections",
              "fields": [
                {
                  "name": null,
                  "type": 60,
                  "typeName": "pallet_elections_phragmen::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "TechnicalMembership",
              "fields": [
                {
                  "name": null,
                  "type": 63,
                  "typeName": "pallet_membership::Event<Runtime, pallet_membership::Instance1>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "Grandpa",
              "fields": [
                {
                  "name": null,
                  "type": 64,
                  "typeName": "pallet_grandpa::Event",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "Treasury",
              "fields": [
                {
                  "name": null,
                  "type": 69,
                  "typeName": "pallet_treasury::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "AssetRate",
              "fields": [
                {
                  "name": null,
                  "type": 70,
                  "typeName": "pallet_asset_rate::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": []
            },
            {
              "name": "Contracts",
              "fields": [
                {
                  "name": null,
                  "type": 72,
                  "typeName": "pallet_contracts::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Sudo",
              "fields": [
                {
                  "name": null,
                  "type": 75,
                  "typeName": "pallet_sudo::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "ImOnline",
              "fields": [
                {
                  "name": null,
                  "type": 76,
                  "typeName": "pallet_im_online::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Offences",
              "fields": [
                {
                  "name": null,
                  "type": 85,
                  "typeName": "pallet_offences::Event",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "Identity",
              "fields": [
                {
                  "name": null,
                  "type": 87,
                  "typeName": "pallet_identity::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "Society",
              "fields": [
                {
                  "name": null,
                  "type": 88,
                  "typeName": "pallet_society::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "Recovery",
              "fields": [
                {
                  "name": null,
                  "type": 91,
                  "typeName": "pallet_recovery::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "Vesting",
              "fields": [
                {
                  "name": null,
                  "type": 92,
                  "typeName": "pallet_vesting::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": []
            },
            {
              "name": "Scheduler",
              "fields": [
                {
                  "name": null,
                  "type": 93,
                  "typeName": "pallet_scheduler::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "Glutton",
              "fields": [
                {
                  "name": null,
                  "type": 96,
                  "typeName": "pallet_glutton::Event",
                  "docs": []
                }
              ],
              "index": 33,
              "docs": []
            },
            {
              "name": "Preimage",
              "fields": [
                {
                  "name": null,
                  "type": 98,
                  "typeName": "pallet_preimage::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "Proxy",
              "fields": [
                {
                  "name": null,
                  "type": 99,
                  "typeName": "pallet_proxy::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 35,
              "docs": []
            },
            {
              "name": "Multisig",
              "fields": [
                {
                  "name": null,
                  "type": 102,
                  "typeName": "pallet_multisig::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "Bounties",
              "fields": [
                {
                  "name": null,
                  "type": 104,
                  "typeName": "pallet_bounties::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            },
            {
              "name": "Tips",
              "fields": [
                {
                  "name": null,
                  "type": 105,
                  "typeName": "pallet_tips::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 38,
              "docs": []
            },
            {
              "name": "Assets",
              "fields": [
                {
                  "name": null,
                  "type": 106,
                  "typeName": "pallet_assets::Event<Runtime, pallet_assets::Instance1>",
                  "docs": []
                }
              ],
              "index": 39,
              "docs": []
            },
            {
              "name": "PoolAssets",
              "fields": [
                {
                  "name": null,
                  "type": 107,
                  "typeName": "pallet_assets::Event<Runtime, pallet_assets::Instance2>",
                  "docs": []
                }
              ],
              "index": 40,
              "docs": []
            },
            {
              "name": "Lottery",
              "fields": [
                {
                  "name": null,
                  "type": 108,
                  "typeName": "pallet_lottery::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 42,
              "docs": []
            },
            {
              "name": "Nis",
              "fields": [
                {
                  "name": null,
                  "type": 110,
                  "typeName": "pallet_nis::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 43,
              "docs": []
            },
            {
              "name": "Uniques",
              "fields": [
                {
                  "name": null,
                  "type": 112,
                  "typeName": "pallet_uniques::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 44,
              "docs": []
            },
            {
              "name": "Nfts",
              "fields": [
                {
                  "name": null,
                  "type": 117,
                  "typeName": "pallet_nfts::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 45,
              "docs": []
            },
            {
              "name": "NftFractionalization",
              "fields": [
                {
                  "name": null,
                  "type": 124,
                  "typeName": "pallet_nft_fractionalization::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 46,
              "docs": []
            },
            {
              "name": "Salary",
              "fields": [
                {
                  "name": null,
                  "type": 125,
                  "typeName": "pallet_salary::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 47,
              "docs": []
            },
            {
              "name": "CoreFellowship",
              "fields": [
                {
                  "name": null,
                  "type": 126,
                  "typeName": "pallet_core_fellowship::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 48,
              "docs": []
            },
            {
              "name": "TransactionStorage",
              "fields": [
                {
                  "name": null,
                  "type": 133,
                  "typeName": "pallet_transaction_storage::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 49,
              "docs": []
            },
            {
              "name": "VoterList",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "pallet_bags_list::Event<Runtime, pallet_bags_list::Instance1>",
                  "docs": []
                }
              ],
              "index": 50,
              "docs": []
            },
            {
              "name": "StateTrieMigration",
              "fields": [
                {
                  "name": null,
                  "type": 135,
                  "typeName": "pallet_state_trie_migration::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 51,
              "docs": []
            },
            {
              "name": "ChildBounties",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "pallet_child_bounties::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 52,
              "docs": []
            },
            {
              "name": "Referenda",
              "fields": [
                {
                  "name": null,
                  "type": 139,
                  "typeName": "pallet_referenda::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 53,
              "docs": []
            },
            {
              "name": "Remark",
              "fields": [
                {
                  "name": null,
                  "type": 418,
                  "typeName": "pallet_remark::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 54,
              "docs": []
            },
            {
              "name": "ConvictionVoting",
              "fields": [
                {
                  "name": null,
                  "type": 419,
                  "typeName": "pallet_conviction_voting::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 56,
              "docs": []
            },
            {
              "name": "Whitelist",
              "fields": [
                {
                  "name": null,
                  "type": 420,
                  "typeName": "pallet_whitelist::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 57,
              "docs": []
            },
            {
              "name": "AllianceMotion",
              "fields": [
                {
                  "name": null,
                  "type": 425,
                  "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance3>",
                  "docs": []
                }
              ],
              "index": 58,
              "docs": []
            },
            {
              "name": "Alliance",
              "fields": [
                {
                  "name": null,
                  "type": 426,
                  "typeName": "pallet_alliance::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 59,
              "docs": []
            },
            {
              "name": "NominationPools",
              "fields": [
                {
                  "name": null,
                  "type": 427,
                  "typeName": "pallet_nomination_pools::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 60,
              "docs": []
            },
            {
              "name": "RankedPolls",
              "fields": [
                {
                  "name": null,
                  "type": 428,
                  "typeName": "pallet_referenda::Event<Runtime, pallet_referenda::Instance2>",
                  "docs": []
                }
              ],
              "index": 61,
              "docs": []
            },
            {
              "name": "RankedCollective",
              "fields": [
                {
                  "name": null,
                  "type": 430,
                  "typeName": "pallet_ranked_collective::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 62,
              "docs": []
            },
            {
              "name": "AssetConversion",
              "fields": [
                {
                  "name": null,
                  "type": 432,
                  "typeName": "pallet_asset_conversion::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 63,
              "docs": []
            },
            {
              "name": "FastUnstake",
              "fields": [
                {
                  "name": null,
                  "type": 435,
                  "typeName": "pallet_fast_unstake::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 64,
              "docs": []
            },
            {
              "name": "MessageQueue",
              "fields": [
                {
                  "name": null,
                  "type": 436,
                  "typeName": "pallet_message_queue::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 65,
              "docs": []
            },
            {
              "name": "Pov",
              "fields": [
                {
                  "name": null,
                  "type": 438,
                  "typeName": "frame_benchmarking_pallet_pov::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 66,
              "docs": []
            },
            {
              "name": "TxPause",
              "fields": [
                {
                  "name": null,
                  "type": 439,
                  "typeName": "pallet_tx_pause::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 67,
              "docs": []
            },
            {
              "name": "SafeMode",
              "fields": [
                {
                  "name": null,
                  "type": 440,
                  "typeName": "pallet_safe_mode::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 68,
              "docs": []
            },
            {
              "name": "Statement",
              "fields": [
                {
                  "name": null,
                  "type": 442,
                  "typeName": "pallet_statement::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 69,
              "docs": []
            },
            {
              "name": "Broker",
              "fields": [
                {
                  "name": null,
                  "type": 449,
                  "typeName": "pallet_broker::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 70,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 21,
    "type": {
      "path": [
        "frame_system",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ExtrinsicSuccess",
              "fields": [
                {
                  "name": "dispatch_info",
                  "type": 22,
                  "typeName": "DispatchInfo",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "An extrinsic completed successfully."
              ]
            },
            {
              "name": "ExtrinsicFailed",
              "fields": [
                {
                  "name": "dispatch_error",
                  "type": 25,
                  "typeName": "DispatchError",
                  "docs": []
                },
                {
                  "name": "dispatch_info",
                  "type": 22,
                  "typeName": "DispatchInfo",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An extrinsic failed."
              ]
            },
            {
              "name": "CodeUpdated",
              "fields": [],
              "index": 2,
              "docs": [
                "`:code` was updated."
              ]
            },
            {
              "name": "NewAccount",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A new account was created."
              ]
            },
            {
              "name": "KilledAccount",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An account was reaped."
              ]
            },
            {
              "name": "Remarked",
              "fields": [
                {
                  "name": "sender",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "On on-chain remark happened."
              ]
            }
          ]
        }
      },
      "docs": [
        "Event for the System pallet."
      ]
    }
  },
  {
    "id": 22,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "DispatchInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "weight",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "class",
              "type": 23,
              "typeName": "DispatchClass",
              "docs": []
            },
            {
              "name": "pays_fee",
              "type": 24,
              "typeName": "Pays",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 23,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "DispatchClass"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Normal",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Operational",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Mandatory",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 24,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "Pays"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Yes",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "No",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 25,
    "type": {
      "path": [
        "sp_runtime",
        "DispatchError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Other",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "CannotLookup",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "BadOrigin",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Module",
              "fields": [
                {
                  "name": null,
                  "type": 26,
                  "typeName": "ModuleError",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "ConsumerRemaining",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "NoProviders",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "TooManyConsumers",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "Token",
              "fields": [
                {
                  "name": null,
                  "type": 27,
                  "typeName": "TokenError",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "Arithmetic",
              "fields": [
                {
                  "name": null,
                  "type": 28,
                  "typeName": "ArithmeticError",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "Transactional",
              "fields": [
                {
                  "name": null,
                  "type": 29,
                  "typeName": "TransactionalError",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "Exhausted",
              "fields": [],
              "index": 10,
              "docs": []
            },
            {
              "name": "Corruption",
              "fields": [],
              "index": 11,
              "docs": []
            },
            {
              "name": "Unavailable",
              "fields": [],
              "index": 12,
              "docs": []
            },
            {
              "name": "RootNotAllowed",
              "fields": [],
              "index": 13,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 26,
    "type": {
      "path": [
        "sp_runtime",
        "ModuleError"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "index",
              "type": 2,
              "typeName": "u8",
              "docs": []
            },
            {
              "name": "error",
              "type": 17,
              "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 27,
    "type": {
      "path": [
        "sp_runtime",
        "TokenError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "FundsUnavailable",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "OnlyProvider",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "BelowMinimum",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "CannotCreate",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "UnknownAsset",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Frozen",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Unsupported",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "CannotCreateHold",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "NotExpendable",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "Blocked",
              "fields": [],
              "index": 9,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 28,
    "type": {
      "path": [
        "sp_arithmetic",
        "ArithmeticError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Underflow",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Overflow",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "DivisionByZero",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 29,
    "type": {
      "path": [
        "sp_runtime",
        "TransactionalError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "LimitReached",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NoLayer",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 30,
    "type": {
      "path": [
        "pallet_utility",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BatchInterrupted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "error",
                  "type": 25,
                  "typeName": "DispatchError",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                "well as the error."
              ]
            },
            {
              "name": "BatchCompleted",
              "fields": [],
              "index": 1,
              "docs": [
                "Batch of dispatches completed fully with no error."
              ]
            },
            {
              "name": "BatchCompletedWithErrors",
              "fields": [],
              "index": 2,
              "docs": [
                "Batch of dispatches completed but has errors."
              ]
            },
            {
              "name": "ItemCompleted",
              "fields": [],
              "index": 3,
              "docs": [
                "A single item within a Batch of dispatches has completed with no error."
              ]
            },
            {
              "name": "ItemFailed",
              "fields": [
                {
                  "name": "error",
                  "type": 25,
                  "typeName": "DispatchError",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A single item within a Batch of dispatches has completed with error."
              ]
            },
            {
              "name": "DispatchedAs",
              "fields": [
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A call was dispatched."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 31,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 32
        },
        {
          "name": "E",
          "type": 25
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 32,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 25,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 32,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": []
      },
      "docs": []
    }
  },
  {
    "id": 33,
    "type": {
      "path": [
        "pallet_indices",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "IndexAssigned",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A account index was assigned."
              ]
            },
            {
              "name": "IndexFreed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A account index has been freed up (unassigned)."
              ]
            },
            {
              "name": "IndexFrozen",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A account index has been frozen to its current account ID."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 34,
    "type": {
      "path": [
        "pallet_balances",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Endowed",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "free_balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "An account was created with some free balance."
              ]
            },
            {
              "name": "DustLost",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                "resulting in an outright loss."
              ]
            },
            {
              "name": "Transfer",
              "fields": [
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Transfer succeeded."
              ]
            },
            {
              "name": "BalanceSet",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "free",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A balance was set by root."
              ]
            },
            {
              "name": "Reserved",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "Some balance was reserved (moved from free to reserved)."
              ]
            },
            {
              "name": "Unreserved",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "Some balance was unreserved (moved from reserved to free)."
              ]
            },
            {
              "name": "ReserveRepatriated",
              "fields": [
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                },
                {
                  "name": "destination_status",
                  "type": 35,
                  "typeName": "Status",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "Some balance was moved from the reserve of the first account to the second account.",
                "Final argument indicates the destination balance type."
              ]
            },
            {
              "name": "Deposit",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "Some amount was deposited (e.g. for transaction fees)."
              ]
            },
            {
              "name": "Withdraw",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "Some amount was withdrawn from the account (e.g. for transaction fees)."
              ]
            },
            {
              "name": "Slashed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Some amount was removed from the account (e.g. for misbehavior)."
              ]
            },
            {
              "name": "Minted",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "Some amount was minted into an account."
              ]
            },
            {
              "name": "Burned",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "Some amount was burned from an account."
              ]
            },
            {
              "name": "Suspended",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "Some amount was suspended from an account (it can be restored later)."
              ]
            },
            {
              "name": "Restored",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "Some amount was restored into an account."
              ]
            },
            {
              "name": "Upgraded",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "An account was upgraded."
              ]
            },
            {
              "name": "Issued",
              "fields": [
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "Total issuance was increased by `amount`, creating a credit to be balanced."
              ]
            },
            {
              "name": "Rescinded",
              "fields": [
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "Total issuance was decreased by `amount`, creating a debt to be balanced."
              ]
            },
            {
              "name": "Locked",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "Some balance was locked."
              ]
            },
            {
              "name": "Unlocked",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "Some balance was unlocked."
              ]
            },
            {
              "name": "Frozen",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "Some balance was frozen."
              ]
            },
            {
              "name": "Thawed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "Some balance was thawed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 35,
    "type": {
      "path": [
        "frame_support",
        "traits",
        "tokens",
        "misc",
        "BalanceStatus"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Free",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Reserved",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 36,
    "type": {
      "path": [
        "pallet_transaction_payment",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TransactionFeePaid",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "actual_fee",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "tip",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                "has been paid by `who`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 37,
    "type": {
      "path": [
        "pallet_asset_tx_payment",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AssetTxFeePaid",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "actual_fee",
                  "type": 6,
                  "typeName": "AssetBalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "tip",
                  "type": 6,
                  "typeName": "AssetBalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "asset_id",
                  "type": 38,
                  "typeName": "Option<ChargeAssetIdOf<T>>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                "has been paid by `who` in an asset `asset_id`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 38,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 39,
    "type": {
      "path": [
        "pallet_asset_conversion_tx_payment",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AssetTxFeePaid",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "actual_fee",
                  "type": 6,
                  "typeName": "AssetBalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "tip",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "ChargeAssetIdOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                "has been paid by `who` in an asset `asset_id`."
              ]
            },
            {
              "name": "AssetRefundFailed",
              "fields": [
                {
                  "name": "native_amount_kept",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A swap of the refund in native currency back to asset failed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 40,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "SolutionStored",
              "fields": [
                {
                  "name": "compute",
                  "type": 41,
                  "typeName": "ElectionCompute",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "prev_ejected",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A solution was stored with the given compute.",
                "",
                "The `origin` indicates the origin of the solution. If `origin` is `Some(AccountId)`,",
                "the stored solution was submited in the signed phase by a miner with the `AccountId`.",
                "Otherwise, the solution was stored either during the unsigned phase or by",
                "`T::ForceOrigin`. The `bool` is `true` when a previous solution was ejected to make",
                "room for this one."
              ]
            },
            {
              "name": "ElectionFinalized",
              "fields": [
                {
                  "name": "compute",
                  "type": 41,
                  "typeName": "ElectionCompute",
                  "docs": []
                },
                {
                  "name": "score",
                  "type": 44,
                  "typeName": "ElectionScore",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "The election has been finalized, with the given computation and score."
              ]
            },
            {
              "name": "ElectionFailed",
              "fields": [],
              "index": 2,
              "docs": [
                "An election failed.",
                "",
                "Not much can be said about which computes failed in the process."
              ]
            },
            {
              "name": "Rewarded",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "<T as frame_system::Config>::AccountId",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "An account has been rewarded for their signed submission being finalized."
              ]
            },
            {
              "name": "Slashed",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "<T as frame_system::Config>::AccountId",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An account has been slashed for submitting an invalid signed submission."
              ]
            },
            {
              "name": "PhaseTransitioned",
              "fields": [
                {
                  "name": "from",
                  "type": 45,
                  "typeName": "Phase<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 45,
                  "typeName": "Phase<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "round",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "There was a phase transition in a given round."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 41,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "ElectionCompute"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "OnChain",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Signed",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Unsigned",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Fallback",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "Emergency",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 42,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 43,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "Bool"
      },
      "docs": []
    }
  },
  {
    "id": 44,
    "type": {
      "path": [
        "sp_npos_elections",
        "ElectionScore"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "minimal_stake",
              "type": 6,
              "typeName": "ExtendedBalance",
              "docs": []
            },
            {
              "name": "sum_stake",
              "type": 6,
              "typeName": "ExtendedBalance",
              "docs": []
            },
            {
              "name": "sum_stake_squared",
              "type": 6,
              "typeName": "ExtendedBalance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 45,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "Phase"
      ],
      "params": [
        {
          "name": "Bn",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Off",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Signed",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Unsigned",
              "fields": [
                {
                  "name": null,
                  "type": 46,
                  "typeName": "(bool, Bn)",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Emergency",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 46,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          43,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 47,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "EraPaid",
              "fields": [
                {
                  "name": "era_index",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                },
                {
                  "name": "validator_payout",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "remainder",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "The era payout has been set; the first balance is the validator-payout; the second is",
                "the remainder from the maximum amount of reward."
              ]
            },
            {
              "name": "Rewarded",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "The nominator has been rewarded by this amount."
              ]
            },
            {
              "name": "Slashed",
              "fields": [
                {
                  "name": "staker",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A staker (validator or nominator) has been slashed by the given amount."
              ]
            },
            {
              "name": "SlashReported",
              "fields": [
                {
                  "name": "validator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "fraction",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "slash_era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A slash for the given validator, for the given percentage of their stake, at the given",
                "era as been reported."
              ]
            },
            {
              "name": "OldSlashingReportDiscarded",
              "fields": [
                {
                  "name": "session_index",
                  "type": 4,
                  "typeName": "SessionIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An old slashing report from a prior era was discarded because it could",
                "not be processed."
              ]
            },
            {
              "name": "StakersElected",
              "fields": [],
              "index": 5,
              "docs": [
                "A new set of stakers was elected."
              ]
            },
            {
              "name": "Bonded",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "An account has bonded this amount. \\[stash, amount\\]",
                "",
                "NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably,",
                "it will not be emitted for staking rewards when they are added to stake."
              ]
            },
            {
              "name": "Unbonded",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "An account has unbonded this amount."
              ]
            },
            {
              "name": "Withdrawn",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance`",
                "from the unlocking queue."
              ]
            },
            {
              "name": "Kicked",
              "fields": [
                {
                  "name": "nominator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "A nominator has been kicked from a validator."
              ]
            },
            {
              "name": "StakingElectionFailed",
              "fields": [],
              "index": 10,
              "docs": [
                "The election failed. No new era is planned."
              ]
            },
            {
              "name": "Chilled",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "An account has stopped participating as either a validator or nominator."
              ]
            },
            {
              "name": "PayoutStarted",
              "fields": [
                {
                  "name": "era_index",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                },
                {
                  "name": "validator_stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "The stakers' rewards are getting paid."
              ]
            },
            {
              "name": "ValidatorPrefsSet",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "prefs",
                  "type": 49,
                  "typeName": "ValidatorPrefs",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "A validator has set their preferences."
              ]
            },
            {
              "name": "SnapshotVotersSizeExceeded",
              "fields": [
                {
                  "name": "size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "Voters size limit reached."
              ]
            },
            {
              "name": "SnapshotTargetsSizeExceeded",
              "fields": [
                {
                  "name": "size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "Targets size limit reached."
              ]
            },
            {
              "name": "ForceEra",
              "fields": [
                {
                  "name": "mode",
                  "type": 51,
                  "typeName": "Forcing",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "A new force era mode was set."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 48,
    "type": {
      "path": [
        "sp_arithmetic",
        "per_things",
        "Perbill"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 49,
    "type": {
      "path": [
        "pallet_staking",
        "ValidatorPrefs"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "commission",
              "type": 50,
              "typeName": "Perbill",
              "docs": []
            },
            {
              "name": "blocked",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 50,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 48
        }
      },
      "docs": []
    }
  },
  {
    "id": 51,
    "type": {
      "path": [
        "pallet_staking",
        "Forcing"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotForcing",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "ForceNew",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "ForceNone",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "ForceAlways",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 52,
    "type": {
      "path": [
        "pallet_session",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewSession",
              "fields": [
                {
                  "name": "session_index",
                  "type": 4,
                  "typeName": "SessionIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "New session has happened. Note that the argument is the session index, not the",
                "block number as the type might suggest."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 53,
    "type": {
      "path": [
        "pallet_democracy",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Proposed",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "PropIndex",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A motion has been proposed by a public account."
              ]
            },
            {
              "name": "Tabled",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "PropIndex",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A public proposal has been tabled for referendum vote."
              ]
            },
            {
              "name": "ExternalTabled",
              "fields": [],
              "index": 2,
              "docs": [
                "An external proposal has been tabled."
              ]
            },
            {
              "name": "Started",
              "fields": [
                {
                  "name": "ref_index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                },
                {
                  "name": "threshold",
                  "type": 54,
                  "typeName": "VoteThreshold",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A referendum has begun."
              ]
            },
            {
              "name": "Passed",
              "fields": [
                {
                  "name": "ref_index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A proposal has been approved by referendum."
              ]
            },
            {
              "name": "NotPassed",
              "fields": [
                {
                  "name": "ref_index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A proposal has been rejected by referendum."
              ]
            },
            {
              "name": "Cancelled",
              "fields": [
                {
                  "name": "ref_index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A referendum has been cancelled."
              ]
            },
            {
              "name": "Delegated",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "An account has delegated their vote to another account."
              ]
            },
            {
              "name": "Undelegated",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "An account has cancelled a previous delegation operation."
              ]
            },
            {
              "name": "Vetoed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "H256",
                  "docs": []
                },
                {
                  "name": "until",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "An external proposal has been vetoed."
              ]
            },
            {
              "name": "Blacklisted",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "H256",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "A proposal_hash has been blacklisted permanently."
              ]
            },
            {
              "name": "Voted",
              "fields": [
                {
                  "name": "voter",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "ref_index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                },
                {
                  "name": "vote",
                  "type": 55,
                  "typeName": "AccountVote<BalanceOf<T>>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "An account has voted in a referendum"
              ]
            },
            {
              "name": "Seconded",
              "fields": [
                {
                  "name": "seconder",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "prop_index",
                  "type": 4,
                  "typeName": "PropIndex",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "An account has secconded a proposal"
              ]
            },
            {
              "name": "ProposalCanceled",
              "fields": [
                {
                  "name": "prop_index",
                  "type": 4,
                  "typeName": "PropIndex",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "A proposal got canceled."
              ]
            },
            {
              "name": "MetadataSet",
              "fields": [
                {
                  "name": "owner",
                  "type": 57,
                  "typeName": "MetadataOwner",
                  "docs": [
                    "Metadata owner."
                  ]
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": [
                    "Preimage hash."
                  ]
                }
              ],
              "index": 14,
              "docs": [
                "Metadata for a proposal or a referendum has been set."
              ]
            },
            {
              "name": "MetadataCleared",
              "fields": [
                {
                  "name": "owner",
                  "type": 57,
                  "typeName": "MetadataOwner",
                  "docs": [
                    "Metadata owner."
                  ]
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": [
                    "Preimage hash."
                  ]
                }
              ],
              "index": 15,
              "docs": [
                "Metadata for a proposal or a referendum has been cleared."
              ]
            },
            {
              "name": "MetadataTransferred",
              "fields": [
                {
                  "name": "prev_owner",
                  "type": 57,
                  "typeName": "MetadataOwner",
                  "docs": [
                    "Previous metadata owner."
                  ]
                },
                {
                  "name": "owner",
                  "type": 57,
                  "typeName": "MetadataOwner",
                  "docs": [
                    "New metadata owner."
                  ]
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": [
                    "Preimage hash."
                  ]
                }
              ],
              "index": 16,
              "docs": [
                "Metadata has been transferred to new owner."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 54,
    "type": {
      "path": [
        "pallet_democracy",
        "vote_threshold",
        "VoteThreshold"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "SuperMajorityApprove",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "SuperMajorityAgainst",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "SimpleMajority",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 55,
    "type": {
      "path": [
        "pallet_democracy",
        "vote",
        "AccountVote"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Standard",
              "fields": [
                {
                  "name": "vote",
                  "type": 56,
                  "typeName": "Vote",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Split",
              "fields": [
                {
                  "name": "aye",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "nay",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 56,
    "type": {
      "path": [
        "pallet_democracy",
        "vote",
        "Vote"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 2,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 57,
    "type": {
      "path": [
        "pallet_democracy",
        "types",
        "MetadataOwner"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "External",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Proposal",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "PropIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Referendum",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 58,
    "type": {
      "path": [
        "pallet_collective",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Proposed",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "threshold",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A motion (given hash) has been proposed (by given account) with a threshold (given",
                "`MemberCount`)."
              ]
            },
            {
              "name": "Voted",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "voted",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "yes",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": "no",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A motion (given hash) has been voted on by given account, leaving",
                "a tally (yes votes and no votes given respectively as `MemberCount`)."
              ]
            },
            {
              "name": "Approved",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A motion was approved by the required threshold."
              ]
            },
            {
              "name": "Disapproved",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A motion was not approved by the required threshold."
              ]
            },
            {
              "name": "Executed",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A motion was executed; result will be `Ok` if it returned without error."
              ]
            },
            {
              "name": "MemberExecuted",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A single member did some action; result will be `Ok` if it returned without error."
              ]
            },
            {
              "name": "Closed",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "yes",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": "no",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A proposal was closed because its threshold was reached or after its duration was up."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 59,
    "type": {
      "path": [
        "pallet_collective",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Proposed",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "threshold",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A motion (given hash) has been proposed (by given account) with a threshold (given",
                "`MemberCount`)."
              ]
            },
            {
              "name": "Voted",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "voted",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "yes",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": "no",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A motion (given hash) has been voted on by given account, leaving",
                "a tally (yes votes and no votes given respectively as `MemberCount`)."
              ]
            },
            {
              "name": "Approved",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A motion was approved by the required threshold."
              ]
            },
            {
              "name": "Disapproved",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A motion was not approved by the required threshold."
              ]
            },
            {
              "name": "Executed",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A motion was executed; result will be `Ok` if it returned without error."
              ]
            },
            {
              "name": "MemberExecuted",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A single member did some action; result will be `Ok` if it returned without error."
              ]
            },
            {
              "name": "Closed",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "yes",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": "no",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A proposal was closed because its threshold was reached or after its duration was up."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 60,
    "type": {
      "path": [
        "pallet_elections_phragmen",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewTerm",
              "fields": [
                {
                  "name": "new_members",
                  "type": 61,
                  "typeName": "Vec<(<T as frame_system::Config>::AccountId, BalanceOf<T>)>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A new term with new_members. This indicates that enough candidates existed to run",
                "the election, not that enough have has been elected. The inner value must be examined",
                "for this purpose. A `NewTerm(\\[\\])` indicates that some candidates got their bond",
                "slashed and none were elected, whilst `EmptyTerm` means that no candidates existed to",
                "begin with."
              ]
            },
            {
              "name": "EmptyTerm",
              "fields": [],
              "index": 1,
              "docs": [
                "No (or not enough) candidates existed for this round. This is different from",
                "`NewTerm(\\[\\])`. See the description of `NewTerm`."
              ]
            },
            {
              "name": "ElectionError",
              "fields": [],
              "index": 2,
              "docs": [
                "Internal error happened while trying to perform election."
              ]
            },
            {
              "name": "MemberKicked",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "<T as frame_system::Config>::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A member has been removed. This should always be followed by either `NewTerm` or",
                "`EmptyTerm`."
              ]
            },
            {
              "name": "Renounced",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "<T as frame_system::Config>::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "Someone has renounced their candidacy."
              ]
            },
            {
              "name": "CandidateSlashed",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "<T as frame_system::Config>::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A candidate was slashed by amount due to failing to obtain a seat as member or",
                "runner-up.",
                "",
                "Note that old members and runners-up are also candidates."
              ]
            },
            {
              "name": "SeatHolderSlashed",
              "fields": [
                {
                  "name": "seat_holder",
                  "type": 0,
                  "typeName": "<T as frame_system::Config>::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A seat holder was slashed by amount by being forcefully removed from the set."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 61,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 62
        }
      },
      "docs": []
    }
  },
  {
    "id": 62,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 63,
    "type": {
      "path": [
        "pallet_membership",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "MemberAdded",
              "fields": [],
              "index": 0,
              "docs": [
                "The given member was added; see the transaction for who."
              ]
            },
            {
              "name": "MemberRemoved",
              "fields": [],
              "index": 1,
              "docs": [
                "The given member was removed; see the transaction for who."
              ]
            },
            {
              "name": "MembersSwapped",
              "fields": [],
              "index": 2,
              "docs": [
                "Two members were swapped; see the transaction for who."
              ]
            },
            {
              "name": "MembersReset",
              "fields": [],
              "index": 3,
              "docs": [
                "The membership was reset; see the transaction for who the new set is."
              ]
            },
            {
              "name": "KeyChanged",
              "fields": [],
              "index": 4,
              "docs": [
                "One of the members' keys changed."
              ]
            },
            {
              "name": "Dummy",
              "fields": [],
              "index": 5,
              "docs": [
                "Phantom member, never used."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 64,
    "type": {
      "path": [
        "pallet_grandpa",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewAuthorities",
              "fields": [
                {
                  "name": "authority_set",
                  "type": 65,
                  "typeName": "AuthorityList",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "New authority set has been applied."
              ]
            },
            {
              "name": "Paused",
              "fields": [],
              "index": 1,
              "docs": [
                "Current authority set has been paused."
              ]
            },
            {
              "name": "Resumed",
              "fields": [],
              "index": 2,
              "docs": [
                "Current authority set has been resumed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 65,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 66
        }
      },
      "docs": []
    }
  },
  {
    "id": 66,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          67,
          11
        ]
      },
      "docs": []
    }
  },
  {
    "id": 67,
    "type": {
      "path": [
        "sp_consensus_grandpa",
        "app",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 68,
              "typeName": "ed25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 68,
    "type": {
      "path": [
        "sp_core",
        "ed25519",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 1,
              "typeName": "[u8; 32]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 69,
    "type": {
      "path": [
        "pallet_treasury",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Proposed",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "New proposal."
              ]
            },
            {
              "name": "Spending",
              "fields": [
                {
                  "name": "budget_remaining",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "We have ended a spend period and will now allocate funds."
              ]
            },
            {
              "name": "Awarded",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "award",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Some funds have been allocated."
              ]
            },
            {
              "name": "Rejected",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "slashed",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A proposal was rejected; funds were slashed."
              ]
            },
            {
              "name": "Burnt",
              "fields": [
                {
                  "name": "burnt_funds",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "Some of our funds have been burnt."
              ]
            },
            {
              "name": "Rollover",
              "fields": [
                {
                  "name": "rollover_balance",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "Spending has finished; this is the amount that rolls over until next spend."
              ]
            },
            {
              "name": "Deposit",
              "fields": [
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "Some funds have been deposited."
              ]
            },
            {
              "name": "SpendApproved",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "A new spend proposal has been approved."
              ]
            },
            {
              "name": "UpdatedInactive",
              "fields": [
                {
                  "name": "reactivated",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "deactivated",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "The inactive funds of the pallet have been updated."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 70,
    "type": {
      "path": [
        "pallet_asset_rate",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AssetRateCreated",
              "fields": [
                {
                  "name": "asset_kind",
                  "type": 4,
                  "typeName": "T::AssetKind",
                  "docs": []
                },
                {
                  "name": "rate",
                  "type": 71,
                  "typeName": "FixedU128",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "AssetRateRemoved",
              "fields": [
                {
                  "name": "asset_kind",
                  "type": 4,
                  "typeName": "T::AssetKind",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "AssetRateUpdated",
              "fields": [
                {
                  "name": "asset_kind",
                  "type": 4,
                  "typeName": "T::AssetKind",
                  "docs": []
                },
                {
                  "name": "old",
                  "type": 71,
                  "typeName": "FixedU128",
                  "docs": []
                },
                {
                  "name": "new",
                  "type": 71,
                  "typeName": "FixedU128",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 71,
    "type": {
      "path": [
        "sp_arithmetic",
        "fixed_point",
        "FixedU128"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 6,
              "typeName": "u128",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 72,
    "type": {
      "path": [
        "pallet_contracts",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Instantiated",
              "fields": [
                {
                  "name": "deployer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "contract",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Contract deployed by address at the specified address."
              ]
            },
            {
              "name": "Terminated",
              "fields": [
                {
                  "name": "contract",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The contract that was terminated."
                  ]
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account that received the contracts remaining balance"
                  ]
                }
              ],
              "index": 1,
              "docs": [
                "Contract has been removed.",
                "",
                "# Note",
                "",
                "The only way for a contract to be removed and emitting this event is by calling",
                "`seal_terminate`."
              ]
            },
            {
              "name": "CodeStored",
              "fields": [
                {
                  "name": "code_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "deposit_held",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "uploader",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Code with the specified hash has been stored."
              ]
            },
            {
              "name": "ContractEmitted",
              "fields": [
                {
                  "name": "contract",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The contract that emitted the event."
                  ]
                },
                {
                  "name": "data",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": [
                    "Data supplied by the contract. Metadata generated during contract compilation",
                    "is needed to decode it."
                  ]
                }
              ],
              "index": 3,
              "docs": [
                "A custom event emitted by the contract."
              ]
            },
            {
              "name": "CodeRemoved",
              "fields": [
                {
                  "name": "code_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "deposit_released",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "remover",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A code with the specified hash was removed."
              ]
            },
            {
              "name": "ContractCodeUpdated",
              "fields": [
                {
                  "name": "contract",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The contract that has been updated."
                  ]
                },
                {
                  "name": "new_code_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": [
                    "New code hash that was set for the contract."
                  ]
                },
                {
                  "name": "old_code_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": [
                    "Previous code hash of the contract."
                  ]
                }
              ],
              "index": 5,
              "docs": [
                "A contract's code was updated."
              ]
            },
            {
              "name": "Called",
              "fields": [
                {
                  "name": "caller",
                  "type": 73,
                  "typeName": "Origin<T>",
                  "docs": [
                    "The caller of the `contract`."
                  ]
                },
                {
                  "name": "contract",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The contract that was called."
                  ]
                }
              ],
              "index": 6,
              "docs": [
                "A contract was called either by a plain account or another contract.",
                "",
                "# Note",
                "",
                "Please keep in mind that like all events this is only emitted for successful",
                "calls. This is because on failure all storage changes including events are",
                "rolled back."
              ]
            },
            {
              "name": "DelegateCalled",
              "fields": [
                {
                  "name": "contract",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The contract that performed the delegate call and hence in whose context",
                    "the `code_hash` is executed."
                  ]
                },
                {
                  "name": "code_hash",
                  "type": 12,
                  "typeName": "CodeHash<T>",
                  "docs": [
                    "The code hash that was delegate called."
                  ]
                }
              ],
              "index": 7,
              "docs": [
                "A contract delegate called a code hash.",
                "",
                "# Note",
                "",
                "Please keep in mind that like all events this is only emitted for successful",
                "calls. This is because on failure all storage changes including events are",
                "rolled back."
              ]
            },
            {
              "name": "StorageDepositTransferredAndHeld",
              "fields": [
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "Some funds have been transferred and held as storage deposit."
              ]
            },
            {
              "name": "StorageDepositTransferredAndReleased",
              "fields": [
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Some storage deposit funds have been transferred and released."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 73,
    "type": {
      "path": [
        "pallet_contracts",
        "Origin"
      ],
      "params": [
        {
          "name": "T",
          "type": 74
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Root",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Signed",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 74,
    "type": {
      "path": [
        "kitchensink_runtime",
        "Runtime"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 75,
    "type": {
      "path": [
        "pallet_sudo",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Sudid",
              "fields": [
                {
                  "name": "sudo_result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A sudo just took place. \\[result\\]"
              ]
            },
            {
              "name": "KeyChanged",
              "fields": [
                {
                  "name": "old_sudoer",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "The \\[sudoer\\] just switched identity; the old key is supplied if one existed."
              ]
            },
            {
              "name": "SudoAsDone",
              "fields": [
                {
                  "name": "sudo_result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A sudo just took place. \\[result\\]"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 76,
    "type": {
      "path": [
        "pallet_im_online",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "HeartbeatReceived",
              "fields": [
                {
                  "name": "authority_id",
                  "type": 77,
                  "typeName": "T::AuthorityId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A new heartbeat was received from `AuthorityId`."
              ]
            },
            {
              "name": "AllGood",
              "fields": [],
              "index": 1,
              "docs": [
                "At the end of the session, no offence was committed."
              ]
            },
            {
              "name": "SomeOffline",
              "fields": [
                {
                  "name": "offline",
                  "type": 79,
                  "typeName": "Vec<IdentificationTuple<T>>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "At the end of the session, at least one validator was found to be offline."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 77,
    "type": {
      "path": [
        "pallet_im_online",
        "sr25519",
        "app_sr25519",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 78,
              "typeName": "sr25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 78,
    "type": {
      "path": [
        "sp_core",
        "sr25519",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 1,
              "typeName": "[u8; 32]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 79,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 80
        }
      },
      "docs": []
    }
  },
  {
    "id": 80,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          81
        ]
      },
      "docs": []
    }
  },
  {
    "id": 81,
    "type": {
      "path": [
        "pallet_staking",
        "Exposure"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "total",
              "type": 82,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "own",
              "type": 82,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "others",
              "type": 83,
              "typeName": "Vec<IndividualExposure<AccountId, Balance>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 82,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 6
        }
      },
      "docs": []
    }
  },
  {
    "id": 83,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 84
        }
      },
      "docs": []
    }
  },
  {
    "id": 84,
    "type": {
      "path": [
        "pallet_staking",
        "IndividualExposure"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "value",
              "type": 82,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 85,
    "type": {
      "path": [
        "pallet_offences",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Offence",
              "fields": [
                {
                  "name": "kind",
                  "type": 86,
                  "typeName": "Kind",
                  "docs": []
                },
                {
                  "name": "timeslot",
                  "type": 13,
                  "typeName": "OpaqueTimeSlot",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "There is an offence reported of the given `kind` happened at the `session_index` and",
                "(kind-specific) time slot. This event is not deposited for duplicate slashes.",
                "\\[kind, timeslot\\]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Events type."
      ]
    }
  },
  {
    "id": 86,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 16,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 87,
    "type": {
      "path": [
        "pallet_identity",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "IdentitySet",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A name was set or reset (which will remove all judgements)."
              ]
            },
            {
              "name": "IdentityCleared",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A name was cleared, and the given balance returned."
              ]
            },
            {
              "name": "IdentityKilled",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A name was removed and the given balance slashed."
              ]
            },
            {
              "name": "JudgementRequested",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "registrar_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A judgement was asked from a registrar."
              ]
            },
            {
              "name": "JudgementUnrequested",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "registrar_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A judgement request was retracted."
              ]
            },
            {
              "name": "JudgementGiven",
              "fields": [
                {
                  "name": "target",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "registrar_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A judgement was given by a registrar."
              ]
            },
            {
              "name": "RegistrarAdded",
              "fields": [
                {
                  "name": "registrar_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A registrar was added."
              ]
            },
            {
              "name": "SubIdentityAdded",
              "fields": [
                {
                  "name": "sub",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "main",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "A sub-identity was added to an identity and the deposit paid."
              ]
            },
            {
              "name": "SubIdentityRemoved",
              "fields": [
                {
                  "name": "sub",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "main",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "A sub-identity was removed from an identity and the deposit freed."
              ]
            },
            {
              "name": "SubIdentityRevoked",
              "fields": [
                {
                  "name": "sub",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "main",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "A sub-identity was cleared, and the given deposit repatriated from the",
                "main identity account to the sub-identity account."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 88,
    "type": {
      "path": [
        "pallet_society",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Founded",
              "fields": [
                {
                  "name": "founder",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "The society is founded by the given identity."
              ]
            },
            {
              "name": "Bid",
              "fields": [
                {
                  "name": "candidate_id",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "offer",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A membership bid just happened. The given account is the candidate's ID and their offer",
                "is the second."
              ]
            },
            {
              "name": "Vouch",
              "fields": [
                {
                  "name": "candidate_id",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "offer",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "vouching",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A membership bid just happened by vouching. The given account is the candidate's ID and",
                "their offer is the second. The vouching party is the third."
              ]
            },
            {
              "name": "AutoUnbid",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A candidate was dropped (due to an excess of bids in the system)."
              ]
            },
            {
              "name": "Unbid",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A candidate was dropped (by their request)."
              ]
            },
            {
              "name": "Unvouch",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A candidate was dropped (by request of who vouched for them)."
              ]
            },
            {
              "name": "Inducted",
              "fields": [
                {
                  "name": "primary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "candidates",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A group of candidates have been inducted. The batch's primary is the first value, the",
                "batch in full is the second."
              ]
            },
            {
              "name": "SuspendedMemberJudgement",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "judged",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "A suspended member has been judged."
              ]
            },
            {
              "name": "CandidateSuspended",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "A candidate has been suspended"
              ]
            },
            {
              "name": "MemberSuspended",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "A member has been suspended"
              ]
            },
            {
              "name": "Challenged",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "A member has been challenged"
              ]
            },
            {
              "name": "Vote",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "voter",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "vote",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "A vote has been placed"
              ]
            },
            {
              "name": "DefenderVote",
              "fields": [
                {
                  "name": "voter",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "vote",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "A vote has been placed for a defending member"
              ]
            },
            {
              "name": "NewParams",
              "fields": [
                {
                  "name": "params",
                  "type": 90,
                  "typeName": "GroupParamsFor<T, I>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "A new set of \\[params\\] has been set for the group."
              ]
            },
            {
              "name": "Unfounded",
              "fields": [
                {
                  "name": "founder",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "Society is unfounded."
              ]
            },
            {
              "name": "Deposit",
              "fields": [
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "Some funds were deposited into the society account."
              ]
            },
            {
              "name": "Elevated",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "rank",
                  "type": 4,
                  "typeName": "Rank",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "A \\[member\\] got elevated to \\[rank\\]."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 89,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 0
        }
      },
      "docs": []
    }
  },
  {
    "id": 90,
    "type": {
      "path": [
        "pallet_society",
        "GroupParams"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "max_members",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_intake",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_strikes",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "candidate_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 91,
    "type": {
      "path": [
        "pallet_recovery",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "RecoveryCreated",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A recovery process has been set up for an account."
              ]
            },
            {
              "name": "RecoveryInitiated",
              "fields": [
                {
                  "name": "lost_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "rescuer_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A recovery process has been initiated for lost account by rescuer account."
              ]
            },
            {
              "name": "RecoveryVouched",
              "fields": [
                {
                  "name": "lost_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "rescuer_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "sender",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A recovery process for lost account by rescuer account has been vouched for by sender."
              ]
            },
            {
              "name": "RecoveryClosed",
              "fields": [
                {
                  "name": "lost_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "rescuer_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A recovery process for lost account by rescuer account has been closed."
              ]
            },
            {
              "name": "AccountRecovered",
              "fields": [
                {
                  "name": "lost_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "rescuer_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "Lost account has been successfully recovered by rescuer account."
              ]
            },
            {
              "name": "RecoveryRemoved",
              "fields": [
                {
                  "name": "lost_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A recovery process has been removed for an account."
              ]
            }
          ]
        }
      },
      "docs": [
        "Events type."
      ]
    }
  },
  {
    "id": 92,
    "type": {
      "path": [
        "pallet_vesting",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "VestingUpdated",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "unvested",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "The amount vested has been updated. This could indicate a change in funds available.",
                "The balance given is the amount which is left unvested (and thus locked)."
              ]
            },
            {
              "name": "VestingCompleted",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An \\[account\\] has become fully vested."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 93,
    "type": {
      "path": [
        "pallet_scheduler",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Scheduled",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Scheduled some task."
              ]
            },
            {
              "name": "Canceled",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Canceled some task."
              ]
            },
            {
              "name": "Dispatched",
              "fields": [
                {
                  "name": "task",
                  "type": 94,
                  "typeName": "TaskAddress<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 95,
                  "typeName": "Option<TaskName>",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Dispatched some task."
              ]
            },
            {
              "name": "CallUnavailable",
              "fields": [
                {
                  "name": "task",
                  "type": 94,
                  "typeName": "TaskAddress<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 95,
                  "typeName": "Option<TaskName>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "The call for the provided hash was not found so the task has been aborted."
              ]
            },
            {
              "name": "PeriodicFailed",
              "fields": [
                {
                  "name": "task",
                  "type": 94,
                  "typeName": "TaskAddress<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 95,
                  "typeName": "Option<TaskName>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "The given task was unable to be renewed since the agenda is full at that block."
              ]
            },
            {
              "name": "PermanentlyOverweight",
              "fields": [
                {
                  "name": "task",
                  "type": 94,
                  "typeName": "TaskAddress<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 95,
                  "typeName": "Option<TaskName>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "The given task can never be executed since it is overweight."
              ]
            }
          ]
        }
      },
      "docs": [
        "Events type."
      ]
    }
  },
  {
    "id": 94,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 95,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 1
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 96,
    "type": {
      "path": [
        "pallet_glutton",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PalletInitialized",
              "fields": [
                {
                  "name": "reinit",
                  "type": 43,
                  "typeName": "bool",
                  "docs": [
                    "Whether the pallet has been re-initialized."
                  ]
                }
              ],
              "index": 0,
              "docs": [
                "The pallet has been (re)initialized."
              ]
            },
            {
              "name": "ComputationLimitSet",
              "fields": [
                {
                  "name": "compute",
                  "type": 97,
                  "typeName": "FixedU64",
                  "docs": [
                    "The computation limit."
                  ]
                }
              ],
              "index": 1,
              "docs": [
                "The computation limit has been updated."
              ]
            },
            {
              "name": "StorageLimitSet",
              "fields": [
                {
                  "name": "storage",
                  "type": 97,
                  "typeName": "FixedU64",
                  "docs": [
                    "The storage limit."
                  ]
                }
              ],
              "index": 2,
              "docs": [
                "The storage limit has been updated."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 97,
    "type": {
      "path": [
        "sp_arithmetic",
        "fixed_point",
        "FixedU64"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 11,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 98,
    "type": {
      "path": [
        "pallet_preimage",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noted",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A preimage has been noted."
              ]
            },
            {
              "name": "Requested",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A preimage has been requested."
              ]
            },
            {
              "name": "Cleared",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A preimage has ben cleared."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 99,
    "type": {
      "path": [
        "pallet_proxy",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ProxyExecuted",
              "fields": [
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A proxy was executed correctly, with the given."
              ]
            },
            {
              "name": "PureCreated",
              "fields": [
                {
                  "name": "pure",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 100,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "disambiguation_index",
                  "type": 101,
                  "typeName": "u16",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A pure account has been created by new proxy with given",
                "disambiguation index and proxy type."
              ]
            },
            {
              "name": "Announced",
              "fields": [
                {
                  "name": "real",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proxy",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "CallHashOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "An announcement was placed to make a call in the future."
              ]
            },
            {
              "name": "ProxyAdded",
              "fields": [
                {
                  "name": "delegator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegatee",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 100,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A proxy was added."
              ]
            },
            {
              "name": "ProxyRemoved",
              "fields": [
                {
                  "name": "delegator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegatee",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 100,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A proxy was removed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 100,
    "type": {
      "path": [
        "kitchensink_runtime",
        "ProxyType"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Any",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NonTransfer",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Governance",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Staking",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 101,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U16"
      },
      "docs": []
    }
  },
  {
    "id": 102,
    "type": {
      "path": [
        "pallet_multisig",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewMultisig",
              "fields": [
                {
                  "name": "approving",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "multisig",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "CallHash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A new multisig operation has begun."
              ]
            },
            {
              "name": "MultisigApproval",
              "fields": [
                {
                  "name": "approving",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "timepoint",
                  "type": 103,
                  "typeName": "Timepoint<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "multisig",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "CallHash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A multisig operation has been approved by someone."
              ]
            },
            {
              "name": "MultisigExecuted",
              "fields": [
                {
                  "name": "approving",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "timepoint",
                  "type": 103,
                  "typeName": "Timepoint<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "multisig",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "CallHash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A multisig operation has been executed."
              ]
            },
            {
              "name": "MultisigCancelled",
              "fields": [
                {
                  "name": "cancelling",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "timepoint",
                  "type": 103,
                  "typeName": "Timepoint<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "multisig",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "CallHash",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A multisig operation has been cancelled."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 103,
    "type": {
      "path": [
        "pallet_multisig",
        "Timepoint"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "height",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "index",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 104,
    "type": {
      "path": [
        "pallet_bounties",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BountyProposed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "New bounty proposal."
              ]
            },
            {
              "name": "BountyRejected",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "bond",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A bounty proposal was rejected; funds were slashed."
              ]
            },
            {
              "name": "BountyBecameActive",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A bounty proposal is funded and became active."
              ]
            },
            {
              "name": "BountyAwarded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A bounty is awarded to a beneficiary."
              ]
            },
            {
              "name": "BountyClaimed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "payout",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A bounty is claimed by beneficiary."
              ]
            },
            {
              "name": "BountyCanceled",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A bounty is cancelled."
              ]
            },
            {
              "name": "BountyExtended",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A bounty expiry is extended."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 105,
    "type": {
      "path": [
        "pallet_tips",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewTip",
              "fields": [
                {
                  "name": "tip_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A new tip suggestion has been opened."
              ]
            },
            {
              "name": "TipClosing",
              "fields": [
                {
                  "name": "tip_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A tip suggestion has reached threshold and is closing."
              ]
            },
            {
              "name": "TipClosed",
              "fields": [
                {
                  "name": "tip_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "payout",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A tip suggestion has been closed."
              ]
            },
            {
              "name": "TipRetracted",
              "fields": [
                {
                  "name": "tip_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A tip suggestion has been retracted."
              ]
            },
            {
              "name": "TipSlashed",
              "fields": [
                {
                  "name": "tip_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "finder",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A tip suggestion has been slashed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 106,
    "type": {
      "path": [
        "pallet_assets",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Created",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "creator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Some asset class was created."
              ]
            },
            {
              "name": "Issued",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Some assets were issued."
              ]
            },
            {
              "name": "Transferred",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Some assets were transferred."
              ]
            },
            {
              "name": "Burned",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "Some assets were destroyed."
              ]
            },
            {
              "name": "TeamChanged",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "The management team changed."
              ]
            },
            {
              "name": "OwnerChanged",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "The owner changed."
              ]
            },
            {
              "name": "Frozen",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "Some account `who` was frozen."
              ]
            },
            {
              "name": "Thawed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "Some account `who` was thawed."
              ]
            },
            {
              "name": "AssetFrozen",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "Some asset `asset_id` was frozen."
              ]
            },
            {
              "name": "AssetThawed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Some asset `asset_id` was thawed."
              ]
            },
            {
              "name": "AccountsDestroyed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "accounts_destroyed",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "accounts_remaining",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "Accounts were destroyed for given asset."
              ]
            },
            {
              "name": "ApprovalsDestroyed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "approvals_destroyed",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "approvals_remaining",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "Approvals were destroyed for given asset."
              ]
            },
            {
              "name": "DestructionStarted",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "An asset class is in the process of being destroyed."
              ]
            },
            {
              "name": "Destroyed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "An asset class was destroyed."
              ]
            },
            {
              "name": "ForceCreated",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "Some asset class was force-created."
              ]
            },
            {
              "name": "MetadataSet",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "symbol",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "decimals",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "New metadata has been set for an asset."
              ]
            },
            {
              "name": "MetadataCleared",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "Metadata has been cleared for an asset."
              ]
            },
            {
              "name": "ApprovedTransfer",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "source",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "(Additional) funds have been approved for transfer to a destination account."
              ]
            },
            {
              "name": "ApprovalCancelled",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "An approval for account `delegate` was cancelled by `owner`."
              ]
            },
            {
              "name": "TransferredApproved",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "destination",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "An `amount` was transferred in its entirety from `owner` to `destination` by",
                "the approved `delegate`."
              ]
            },
            {
              "name": "AssetStatusChanged",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "An asset has had its attributes changed by the `Force` origin."
              ]
            },
            {
              "name": "AssetMinBalanceChanged",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "new_min_balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "The min_balance of an asset has been updated by the asset owner."
              ]
            },
            {
              "name": "Touched",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "depositor",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "Some account `who` was created with a deposit from `depositor`."
              ]
            },
            {
              "name": "Blocked",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "Some account `who` was blocked."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 107,
    "type": {
      "path": [
        "pallet_assets",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Created",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "creator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Some asset class was created."
              ]
            },
            {
              "name": "Issued",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Some assets were issued."
              ]
            },
            {
              "name": "Transferred",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Some assets were transferred."
              ]
            },
            {
              "name": "Burned",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "Some assets were destroyed."
              ]
            },
            {
              "name": "TeamChanged",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "The management team changed."
              ]
            },
            {
              "name": "OwnerChanged",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "The owner changed."
              ]
            },
            {
              "name": "Frozen",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "Some account `who` was frozen."
              ]
            },
            {
              "name": "Thawed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "Some account `who` was thawed."
              ]
            },
            {
              "name": "AssetFrozen",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "Some asset `asset_id` was frozen."
              ]
            },
            {
              "name": "AssetThawed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Some asset `asset_id` was thawed."
              ]
            },
            {
              "name": "AccountsDestroyed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "accounts_destroyed",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "accounts_remaining",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "Accounts were destroyed for given asset."
              ]
            },
            {
              "name": "ApprovalsDestroyed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "approvals_destroyed",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "approvals_remaining",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "Approvals were destroyed for given asset."
              ]
            },
            {
              "name": "DestructionStarted",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "An asset class is in the process of being destroyed."
              ]
            },
            {
              "name": "Destroyed",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "An asset class was destroyed."
              ]
            },
            {
              "name": "ForceCreated",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "Some asset class was force-created."
              ]
            },
            {
              "name": "MetadataSet",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "symbol",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "decimals",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "New metadata has been set for an asset."
              ]
            },
            {
              "name": "MetadataCleared",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "Metadata has been cleared for an asset."
              ]
            },
            {
              "name": "ApprovedTransfer",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "source",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "(Additional) funds have been approved for transfer to a destination account."
              ]
            },
            {
              "name": "ApprovalCancelled",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "An approval for account `delegate` was cancelled by `owner`."
              ]
            },
            {
              "name": "TransferredApproved",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "destination",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "An `amount` was transferred in its entirety from `owner` to `destination` by",
                "the approved `delegate`."
              ]
            },
            {
              "name": "AssetStatusChanged",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "An asset has had its attributes changed by the `Force` origin."
              ]
            },
            {
              "name": "AssetMinBalanceChanged",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "new_min_balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "The min_balance of an asset has been updated by the asset owner."
              ]
            },
            {
              "name": "Touched",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "depositor",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "Some account `who` was created with a deposit from `depositor`."
              ]
            },
            {
              "name": "Blocked",
              "fields": [
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "T::AssetId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "Some account `who` was blocked."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 108,
    "type": {
      "path": [
        "pallet_lottery",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "LotteryStarted",
              "fields": [],
              "index": 0,
              "docs": [
                "A lottery has been started!"
              ]
            },
            {
              "name": "CallsUpdated",
              "fields": [],
              "index": 1,
              "docs": [
                "A new set of calls have been set!"
              ]
            },
            {
              "name": "Winner",
              "fields": [
                {
                  "name": "winner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "lottery_balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A winner has been chosen!"
              ]
            },
            {
              "name": "TicketBought",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_index",
                  "type": 109,
                  "typeName": "CallIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A ticket has been bought!"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 109,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          2,
          2
        ]
      },
      "docs": []
    }
  },
  {
    "id": 110,
    "type": {
      "path": [
        "pallet_nis",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BidPlaced",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A bid was successfully placed."
              ]
            },
            {
              "name": "BidRetracted",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A bid was successfully removed (before being accepted)."
              ]
            },
            {
              "name": "BidDropped",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A bid was dropped from a queue because of another, more substantial, bid was present."
              ]
            },
            {
              "name": "Issued",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReceiptIndex",
                  "docs": [
                    "The identity of the receipt."
                  ]
                },
                {
                  "name": "expiry",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": [
                    "The block number at which the receipt may be thawed."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The owner of the receipt."
                  ]
                },
                {
                  "name": "proportion",
                  "type": 111,
                  "typeName": "Perquintill",
                  "docs": [
                    "The proportion of the effective total issuance which the receipt represents."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The amount of funds which were debited from the owner."
                  ]
                }
              ],
              "index": 3,
              "docs": [
                "A bid was accepted. The balance may not be released until expiry."
              ]
            },
            {
              "name": "Thawed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReceiptIndex",
                  "docs": [
                    "The identity of the receipt."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The owner."
                  ]
                },
                {
                  "name": "proportion",
                  "type": 111,
                  "typeName": "Perquintill",
                  "docs": [
                    "The proportion of the effective total issuance by which the owner was debited."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The amount by which the owner was credited."
                  ]
                },
                {
                  "name": "dropped",
                  "type": 43,
                  "typeName": "bool",
                  "docs": [
                    "If `true` then the receipt is done."
                  ]
                }
              ],
              "index": 4,
              "docs": [
                "An receipt has been (at least partially) thawed."
              ]
            },
            {
              "name": "Funded",
              "fields": [
                {
                  "name": "deficit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "An automatic funding of the deficit was made."
              ]
            },
            {
              "name": "Transferred",
              "fields": [
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReceiptIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A receipt was transfered."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 111,
    "type": {
      "path": [
        "sp_arithmetic",
        "per_things",
        "Perquintill"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 11,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 112,
    "type": {
      "path": [
        "pallet_uniques",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Created",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "creator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A `collection` was created."
              ]
            },
            {
              "name": "ForceCreated",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A `collection` was force-created."
              ]
            },
            {
              "name": "Destroyed",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A `collection` was destroyed."
              ]
            },
            {
              "name": "Issued",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "An `item` was issued."
              ]
            },
            {
              "name": "Transferred",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An `item` was transferred."
              ]
            },
            {
              "name": "Burned",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "An `item` was destroyed."
              ]
            },
            {
              "name": "Frozen",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "Some `item` was frozen."
              ]
            },
            {
              "name": "Thawed",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "Some `item` was thawed."
              ]
            },
            {
              "name": "CollectionFrozen",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "Some `collection` was frozen."
              ]
            },
            {
              "name": "CollectionThawed",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Some `collection` was thawed."
              ]
            },
            {
              "name": "OwnerChanged",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "new_owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "The owner changed."
              ]
            },
            {
              "name": "TeamChanged",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "The management team changed."
              ]
            },
            {
              "name": "ApprovedTransfer",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "An `item` of a `collection` has been approved by the `owner` for transfer by",
                "a `delegate`."
              ]
            },
            {
              "name": "ApprovalCancelled",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "An approval for a `delegate` account to transfer the `item` of an item",
                "`collection` was cancelled by its `owner`."
              ]
            },
            {
              "name": "ItemStatusChanged",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "A `collection` has had its attributes changed by the `Force` origin."
              ]
            },
            {
              "name": "CollectionMetadataSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 113,
                  "typeName": "BoundedVec<u8, T::StringLimit>",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "New metadata has been set for a `collection`."
              ]
            },
            {
              "name": "CollectionMetadataCleared",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "Metadata has been cleared for a `collection`."
              ]
            },
            {
              "name": "MetadataSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 113,
                  "typeName": "BoundedVec<u8, T::StringLimit>",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "New metadata has been set for an item."
              ]
            },
            {
              "name": "MetadataCleared",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "Metadata has been cleared for an item."
              ]
            },
            {
              "name": "Redeposited",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "successful_items",
                  "type": 114,
                  "typeName": "Vec<T::ItemId>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "Metadata has been cleared for an item."
              ]
            },
            {
              "name": "AttributeSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 115,
                  "typeName": "BoundedVec<u8, T::KeyLimit>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 116,
                  "typeName": "BoundedVec<u8, T::ValueLimit>",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "New attribute metadata has been set for a `collection` or `item`."
              ]
            },
            {
              "name": "AttributeCleared",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 115,
                  "typeName": "BoundedVec<u8, T::KeyLimit>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "Attribute metadata has been cleared for a `collection` or `item`."
              ]
            },
            {
              "name": "OwnershipAcceptanceChanged",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "maybe_collection",
                  "type": 38,
                  "typeName": "Option<T::CollectionId>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "Ownership acceptance has changed for an account."
              ]
            },
            {
              "name": "CollectionMaxSupplySet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "max_supply",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "Max supply has been set for a collection."
              ]
            },
            {
              "name": "ItemPriceSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "price",
                  "type": 6,
                  "typeName": "ItemPrice<T, I>",
                  "docs": []
                },
                {
                  "name": "whitelisted_buyer",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": [
                "The price was set for the instance."
              ]
            },
            {
              "name": "ItemPriceRemoved",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": [
                "The price for the instance was removed."
              ]
            },
            {
              "name": "ItemBought",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "price",
                  "type": 6,
                  "typeName": "ItemPrice<T, I>",
                  "docs": []
                },
                {
                  "name": "seller",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "buyer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": [
                "An item was bought."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 113,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 114,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 4
        }
      },
      "docs": []
    }
  },
  {
    "id": 115,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 116,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 117,
    "type": {
      "path": [
        "pallet_nfts",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Created",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "creator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A `collection` was created."
              ]
            },
            {
              "name": "ForceCreated",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A `collection` was force-created."
              ]
            },
            {
              "name": "Destroyed",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A `collection` was destroyed."
              ]
            },
            {
              "name": "Issued",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "An `item` was issued."
              ]
            },
            {
              "name": "Transferred",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An `item` was transferred."
              ]
            },
            {
              "name": "Burned",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "An `item` was destroyed."
              ]
            },
            {
              "name": "ItemTransferLocked",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "An `item` became non-transferable."
              ]
            },
            {
              "name": "ItemTransferUnlocked",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "An `item` became transferable."
              ]
            },
            {
              "name": "ItemPropertiesLocked",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "lock_metadata",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "lock_attributes",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "`item` metadata or attributes were locked."
              ]
            },
            {
              "name": "CollectionLocked",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Some `collection` was locked."
              ]
            },
            {
              "name": "OwnerChanged",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "new_owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "The owner changed."
              ]
            },
            {
              "name": "TeamChanged",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "The management team changed."
              ]
            },
            {
              "name": "TransferApproved",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deadline",
                  "type": 38,
                  "typeName": "Option<BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "An `item` of a `collection` has been approved by the `owner` for transfer by",
                "a `delegate`."
              ]
            },
            {
              "name": "ApprovalCancelled",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "An approval for a `delegate` account to transfer the `item` of an item",
                "`collection` was cancelled by its `owner`."
              ]
            },
            {
              "name": "AllApprovalsCancelled",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "All approvals of an item got cancelled."
              ]
            },
            {
              "name": "CollectionConfigChanged",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "A `collection` has had its config changed by the `Force` origin."
              ]
            },
            {
              "name": "CollectionMetadataSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 118,
                  "typeName": "BoundedVec<u8, T::StringLimit>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "New metadata has been set for a `collection`."
              ]
            },
            {
              "name": "CollectionMetadataCleared",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "Metadata has been cleared for a `collection`."
              ]
            },
            {
              "name": "ItemMetadataSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 118,
                  "typeName": "BoundedVec<u8, T::StringLimit>",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "New metadata has been set for an item."
              ]
            },
            {
              "name": "ItemMetadataCleared",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "Metadata has been cleared for an item."
              ]
            },
            {
              "name": "Redeposited",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "successful_items",
                  "type": 114,
                  "typeName": "Vec<T::ItemId>",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "The deposit for a set of `item`s within a `collection` has been updated."
              ]
            },
            {
              "name": "AttributeSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 116,
                  "typeName": "BoundedVec<u8, T::KeyLimit>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 118,
                  "typeName": "BoundedVec<u8, T::ValueLimit>",
                  "docs": []
                },
                {
                  "name": "namespace",
                  "type": 119,
                  "typeName": "AttributeNamespace<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "New attribute metadata has been set for a `collection` or `item`."
              ]
            },
            {
              "name": "AttributeCleared",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 116,
                  "typeName": "BoundedVec<u8, T::KeyLimit>",
                  "docs": []
                },
                {
                  "name": "namespace",
                  "type": 119,
                  "typeName": "AttributeNamespace<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "Attribute metadata has been cleared for a `collection` or `item`."
              ]
            },
            {
              "name": "ItemAttributesApprovalAdded",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "A new approval to modify item attributes was added."
              ]
            },
            {
              "name": "ItemAttributesApprovalRemoved",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": [
                "A new approval to modify item attributes was removed."
              ]
            },
            {
              "name": "OwnershipAcceptanceChanged",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "maybe_collection",
                  "type": 38,
                  "typeName": "Option<T::CollectionId>",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": [
                "Ownership acceptance has changed for an account."
              ]
            },
            {
              "name": "CollectionMaxSupplySet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "max_supply",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": [
                "Max supply has been set for a collection."
              ]
            },
            {
              "name": "CollectionMintSettingsUpdated",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 27,
              "docs": [
                "Mint settings for a collection had changed."
              ]
            },
            {
              "name": "NextCollectionIdIncremented",
              "fields": [
                {
                  "name": "next_id",
                  "type": 38,
                  "typeName": "Option<T::CollectionId>",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": [
                "Event gets emitted when the `NextCollectionId` gets incremented."
              ]
            },
            {
              "name": "ItemPriceSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "price",
                  "type": 6,
                  "typeName": "ItemPrice<T, I>",
                  "docs": []
                },
                {
                  "name": "whitelisted_buyer",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": [
                "The price was set for the item."
              ]
            },
            {
              "name": "ItemPriceRemoved",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": [
                "The price for the item was removed."
              ]
            },
            {
              "name": "ItemBought",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "price",
                  "type": 6,
                  "typeName": "ItemPrice<T, I>",
                  "docs": []
                },
                {
                  "name": "seller",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "buyer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": [
                "An item was bought."
              ]
            },
            {
              "name": "TipSent",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "sender",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "receiver",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "DepositBalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 32,
              "docs": [
                "A tip was sent."
              ]
            },
            {
              "name": "SwapCreated",
              "fields": [
                {
                  "name": "offered_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "offered_item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "desired_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "desired_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "price",
                  "type": 120,
                  "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                  "docs": []
                },
                {
                  "name": "deadline",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 33,
              "docs": [
                "An `item` swap intent was created."
              ]
            },
            {
              "name": "SwapCancelled",
              "fields": [
                {
                  "name": "offered_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "offered_item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "desired_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "desired_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "price",
                  "type": 120,
                  "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                  "docs": []
                },
                {
                  "name": "deadline",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": [
                "The swap was cancelled."
              ]
            },
            {
              "name": "SwapClaimed",
              "fields": [
                {
                  "name": "sent_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "sent_item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "sent_item_owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "received_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "received_item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "received_item_owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "price",
                  "type": 120,
                  "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                  "docs": []
                },
                {
                  "name": "deadline",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 35,
              "docs": [
                "The swap has been claimed."
              ]
            },
            {
              "name": "PreSignedAttributesSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "namespace",
                  "type": 119,
                  "typeName": "AttributeNamespace<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 36,
              "docs": [
                "New attributes have been set for an `item` of the `collection`."
              ]
            },
            {
              "name": "PalletAttributeSet",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "attribute",
                  "type": 123,
                  "typeName": "PalletAttributes<T::CollectionId>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 118,
                  "typeName": "BoundedVec<u8, T::ValueLimit>",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": [
                "A new attribute in the `Pallet` namespace was set for the `collection` or an `item`",
                "within that `collection`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 118,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 119,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "AttributeNamespace"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Pallet",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "CollectionOwner",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "ItemOwner",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Account",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 120,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 121
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 121,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 121,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "PriceWithDirection"
      ],
      "params": [
        {
          "name": "Amount",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "amount",
              "type": 6,
              "typeName": "Amount",
              "docs": []
            },
            {
              "name": "direction",
              "type": 122,
              "typeName": "PriceDirection",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 122,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "PriceDirection"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Send",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Receive",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 123,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "PalletAttributes"
      ],
      "params": [
        {
          "name": "CollectionId",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "UsedToClaim",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "CollectionId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "TransferDisabled",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 124,
    "type": {
      "path": [
        "pallet_nft_fractionalization",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NftFractionalized",
              "fields": [
                {
                  "name": "nft_collection",
                  "type": 4,
                  "typeName": "T::NftCollectionId",
                  "docs": []
                },
                {
                  "name": "nft",
                  "type": 4,
                  "typeName": "T::NftId",
                  "docs": []
                },
                {
                  "name": "fractions",
                  "type": 6,
                  "typeName": "AssetBalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "asset",
                  "type": 4,
                  "typeName": "AssetIdOf<T>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "An NFT was successfully fractionalized."
              ]
            },
            {
              "name": "NftUnified",
              "fields": [
                {
                  "name": "nft_collection",
                  "type": 4,
                  "typeName": "T::NftCollectionId",
                  "docs": []
                },
                {
                  "name": "nft",
                  "type": 4,
                  "typeName": "T::NftId",
                  "docs": []
                },
                {
                  "name": "asset",
                  "type": 4,
                  "typeName": "AssetIdOf<T>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An NFT was successfully returned back."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 125,
    "type": {
      "path": [
        "pallet_salary",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Inducted",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A member is inducted into the payroll."
              ]
            },
            {
              "name": "Registered",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A member registered for a payout."
              ]
            },
            {
              "name": "Paid",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 32,
                  "typeName": "<T::Paymaster as Pay>::Id",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A payment happened."
              ]
            },
            {
              "name": "CycleStarted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "CycleIndexOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "The next cycle begins."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 126,
    "type": {
      "path": [
        "pallet_core_fellowship",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ParamsChanged",
              "fields": [
                {
                  "name": "params",
                  "type": 127,
                  "typeName": "ParamsOf<T, I>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Parameters for the pallet have changed."
              ]
            },
            {
              "name": "ActiveChanged",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "is_active",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Member activity flag has been set."
              ]
            },
            {
              "name": "Inducted",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Member has begun being tracked in this pallet."
              ]
            },
            {
              "name": "Offboarded",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "Member has been removed from being tracked in this pallet (i.e. because rank is now",
                "zero)."
              ]
            },
            {
              "name": "Promoted",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to_rank",
                  "type": 101,
                  "typeName": "RankOf<T, I>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "Member has been promoted to the given rank."
              ]
            },
            {
              "name": "Demoted",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to_rank",
                  "type": 101,
                  "typeName": "RankOf<T, I>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "Member has been demoted to the given (non-zero) rank."
              ]
            },
            {
              "name": "Proven",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "at_rank",
                  "type": 101,
                  "typeName": "RankOf<T, I>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "Member has been proven at their current rank, postponing auto-demotion."
              ]
            },
            {
              "name": "Requested",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "wish",
                  "type": 130,
                  "typeName": "Wish",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "Member has stated evidence of their efforts their request for rank."
              ]
            },
            {
              "name": "EvidenceJudged",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The member/candidate."
                  ]
                },
                {
                  "name": "wish",
                  "type": 130,
                  "typeName": "Wish",
                  "docs": [
                    "The desired outcome for which the evidence was presented."
                  ]
                },
                {
                  "name": "evidence",
                  "type": 131,
                  "typeName": "Evidence<T, I>",
                  "docs": [
                    "The evidence of efforts."
                  ]
                },
                {
                  "name": "old_rank",
                  "type": 101,
                  "typeName": "u16",
                  "docs": [
                    "The old rank, prior to this change."
                  ]
                },
                {
                  "name": "new_rank",
                  "type": 132,
                  "typeName": "Option<u16>",
                  "docs": [
                    "New rank. If `None` then candidate record was removed entirely."
                  ]
                }
              ],
              "index": 8,
              "docs": [
                "Some submitted evidence was judged and removed. There may or may not have been a change",
                "to the rank, but in any case, `last_proof` is reset."
              ]
            },
            {
              "name": "Imported",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "rank",
                  "type": 101,
                  "typeName": "RankOf<T, I>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Pre-ranked account has been inducted at their current rank."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 127,
    "type": {
      "path": [
        "pallet_core_fellowship",
        "ParamsType"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "active_salary",
              "type": 128,
              "typeName": "[Balance; RANKS]",
              "docs": []
            },
            {
              "name": "passive_salary",
              "type": 128,
              "typeName": "[Balance; RANKS]",
              "docs": []
            },
            {
              "name": "demotion_period",
              "type": 129,
              "typeName": "[BlockNumber; RANKS]",
              "docs": []
            },
            {
              "name": "min_promotion_period",
              "type": 129,
              "typeName": "[BlockNumber; RANKS]",
              "docs": []
            },
            {
              "name": "offboard_timeout",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 128,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 9,
          "type": 6
        }
      },
      "docs": []
    }
  },
  {
    "id": 129,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 9,
          "type": 4
        }
      },
      "docs": []
    }
  },
  {
    "id": 130,
    "type": {
      "path": [
        "pallet_core_fellowship",
        "Wish"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Retention",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Promotion",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 131,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 132,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 101
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 101,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 133,
    "type": {
      "path": [
        "pallet_transaction_storage",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Stored",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Stored data under specified index."
              ]
            },
            {
              "name": "Renewed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Renewed data under specified index."
              ]
            },
            {
              "name": "ProofChecked",
              "fields": [],
              "index": 2,
              "docs": [
                "Storage proof was successfully checked."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 134,
    "type": {
      "path": [
        "pallet_bags_list",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Rebagged",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "from",
                  "type": 11,
                  "typeName": "T::Score",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 11,
                  "typeName": "T::Score",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Moved an account from one bag to another."
              ]
            },
            {
              "name": "ScoreUpdated",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "new_score",
                  "type": 11,
                  "typeName": "T::Score",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Updated the score of some account to the given amount."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 135,
    "type": {
      "path": [
        "pallet_state_trie_migration",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Migrated",
              "fields": [
                {
                  "name": "top",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "child",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "compute",
                  "type": 136,
                  "typeName": "MigrationCompute",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Given number of `(top, child)` keys were migrated respectively, with the given",
                "`compute`."
              ]
            },
            {
              "name": "Slashed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Some account got slashed by the given amount."
              ]
            },
            {
              "name": "AutoMigrationFinished",
              "fields": [],
              "index": 2,
              "docs": [
                "The auto migration task finished."
              ]
            },
            {
              "name": "Halted",
              "fields": [
                {
                  "name": "error",
                  "type": 137,
                  "typeName": "Error<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "Migration got halted due to an error or miss-configuration."
              ]
            }
          ]
        }
      },
      "docs": [
        "Inner events of this pallet."
      ]
    }
  },
  {
    "id": 136,
    "type": {
      "path": [
        "pallet_state_trie_migration",
        "pallet",
        "MigrationCompute"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Signed",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Auto",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 137,
    "type": {
      "path": [
        "pallet_state_trie_migration",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "MaxSignedLimits",
              "fields": [],
              "index": 0,
              "docs": [
                "Max signed limits not respected."
              ]
            },
            {
              "name": "KeyTooLong",
              "fields": [],
              "index": 1,
              "docs": [
                "A key was longer than the configured maximum.",
                "",
                "This means that the migration halted at the current [`Progress`] and",
                "can be resumed with a larger [`crate::Config::MaxKeyLen`] value.",
                "Retrying with the same [`crate::Config::MaxKeyLen`] value will not work.",
                "The value should only be increased to avoid a storage migration for the currently",
                "stored [`crate::Progress::LastKey`]."
              ]
            },
            {
              "name": "NotEnoughFunds",
              "fields": [],
              "index": 2,
              "docs": [
                "submitter does not have enough funds."
              ]
            },
            {
              "name": "BadWitness",
              "fields": [],
              "index": 3,
              "docs": [
                "Bad witness data provided."
              ]
            },
            {
              "name": "SignedMigrationNotAllowed",
              "fields": [],
              "index": 4,
              "docs": [
                "Signed migration is not allowed because the maximum limit is not set yet."
              ]
            },
            {
              "name": "BadChildRoot",
              "fields": [],
              "index": 5,
              "docs": [
                "Bad child root provided."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 138,
    "type": {
      "path": [
        "pallet_child_bounties",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Added",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A child-bounty is added."
              ]
            },
            {
              "name": "Awarded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A child-bounty is awarded to a beneficiary."
              ]
            },
            {
              "name": "Claimed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "payout",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A child-bounty is claimed by beneficiary."
              ]
            },
            {
              "name": "Canceled",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A child-bounty is cancelled."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 139,
    "type": {
      "path": [
        "pallet_referenda",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Submitted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "track",
                  "type": 101,
                  "typeName": "TrackIdOf<T, I>",
                  "docs": [
                    "The track (and by extension proposal dispatch origin) of this referendum."
                  ]
                },
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T, I>",
                  "docs": [
                    "The proposal for the referendum."
                  ]
                }
              ],
              "index": 0,
              "docs": [
                "A referendum has been submitted."
              ]
            },
            {
              "name": "DecisionDepositPlaced",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 1,
              "docs": [
                "The decision deposit has been placed."
              ]
            },
            {
              "name": "DecisionDepositRefunded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 2,
              "docs": [
                "The decision deposit has been refunded."
              ]
            },
            {
              "name": "DepositSlashed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 3,
              "docs": [
                "A deposit has been slashaed."
              ]
            },
            {
              "name": "DecisionStarted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "track",
                  "type": 101,
                  "typeName": "TrackIdOf<T, I>",
                  "docs": [
                    "The track (and by extension proposal dispatch origin) of this referendum."
                  ]
                },
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T, I>",
                  "docs": [
                    "The proposal for the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 417,
                  "typeName": "T::Tally",
                  "docs": [
                    "The current tally of votes in this referendum."
                  ]
                }
              ],
              "index": 4,
              "docs": [
                "A referendum has moved into the deciding phase."
              ]
            },
            {
              "name": "ConfirmStarted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "ConfirmAborted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "Confirmed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 417,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 7,
              "docs": [
                "A referendum has ended its confirmation phase and is ready for approval."
              ]
            },
            {
              "name": "Approved",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                }
              ],
              "index": 8,
              "docs": [
                "A referendum has been approved and its proposal has been scheduled."
              ]
            },
            {
              "name": "Rejected",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 417,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 9,
              "docs": [
                "A proposal has been rejected by referendum."
              ]
            },
            {
              "name": "TimedOut",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 417,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 10,
              "docs": [
                "A referendum has been timed out without being decided."
              ]
            },
            {
              "name": "Cancelled",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 417,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 11,
              "docs": [
                "A referendum has been cancelled."
              ]
            },
            {
              "name": "Killed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 417,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 12,
              "docs": [
                "A referendum has been killed."
              ]
            },
            {
              "name": "SubmissionDepositRefunded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 13,
              "docs": [
                "The submission deposit has been refunded."
              ]
            },
            {
              "name": "MetadataSet",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": [
                    "Preimage hash."
                  ]
                }
              ],
              "index": 14,
              "docs": [
                "Metadata for a referendum has been set."
              ]
            },
            {
              "name": "MetadataCleared",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": [
                    "Preimage hash."
                  ]
                }
              ],
              "index": 15,
              "docs": [
                "Metadata for a referendum has been cleared."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 140,
    "type": {
      "path": [
        "frame_support",
        "traits",
        "preimages",
        "Bounded"
      ],
      "params": [
        {
          "name": "T",
          "type": 141
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Legacy",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "Hash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Inline",
              "fields": [
                {
                  "name": null,
                  "type": 113,
                  "typeName": "BoundedInline",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Lookup",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "Hash",
                  "docs": []
                },
                {
                  "name": "len",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 141,
    "type": {
      "path": [
        "kitchensink_runtime",
        "RuntimeCall"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "System",
              "fields": [
                {
                  "name": null,
                  "type": 142,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Utility",
              "fields": [
                {
                  "name": null,
                  "type": 146,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Babe",
              "fields": [
                {
                  "name": null,
                  "type": 154,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Babe, Runtime>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Timestamp",
              "fields": [
                {
                  "name": null,
                  "type": 164,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Indices",
              "fields": [
                {
                  "name": null,
                  "type": 165,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Indices, Runtime>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Balances",
              "fields": [
                {
                  "name": null,
                  "type": 168,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "ElectionProviderMultiPhase",
              "fields": [
                {
                  "name": null,
                  "type": 169,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ElectionProviderMultiPhase, Runtime>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": []
            },
            {
              "name": "Staking",
              "fields": [
                {
                  "name": null,
                  "type": 227,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Staking, Runtime>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "Session",
              "fields": [
                {
                  "name": null,
                  "type": 235,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "Democracy",
              "fields": [
                {
                  "name": null,
                  "type": 238,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Democracy, Runtime>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "Council",
              "fields": [
                {
                  "name": null,
                  "type": 241,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Council, Runtime>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "TechnicalCommittee",
              "fields": [
                {
                  "name": null,
                  "type": 242,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommittee, Runtime>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "Elections",
              "fields": [
                {
                  "name": null,
                  "type": 243,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Elections, Runtime>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "TechnicalMembership",
              "fields": [
                {
                  "name": null,
                  "type": 245,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalMembership, Runtime>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "Grandpa",
              "fields": [
                {
                  "name": null,
                  "type": 246,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "Treasury",
              "fields": [
                {
                  "name": null,
                  "type": 258,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "AssetRate",
              "fields": [
                {
                  "name": null,
                  "type": 259,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetRate, Runtime>",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": []
            },
            {
              "name": "Contracts",
              "fields": [
                {
                  "name": null,
                  "type": 260,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Contracts, Runtime>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Sudo",
              "fields": [
                {
                  "name": null,
                  "type": 263,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "ImOnline",
              "fields": [
                {
                  "name": null,
                  "type": 264,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ImOnline, Runtime>",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Identity",
              "fields": [
                {
                  "name": null,
                  "type": 268,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "Society",
              "fields": [
                {
                  "name": null,
                  "type": 309,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Society, Runtime>",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "Recovery",
              "fields": [
                {
                  "name": null,
                  "type": 310,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Recovery, Runtime>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "Vesting",
              "fields": [
                {
                  "name": null,
                  "type": 311,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": []
            },
            {
              "name": "Scheduler",
              "fields": [
                {
                  "name": null,
                  "type": 313,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "Glutton",
              "fields": [
                {
                  "name": null,
                  "type": 315,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Glutton, Runtime>",
                  "docs": []
                }
              ],
              "index": 33,
              "docs": []
            },
            {
              "name": "Preimage",
              "fields": [
                {
                  "name": null,
                  "type": 316,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "Proxy",
              "fields": [
                {
                  "name": null,
                  "type": 317,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                  "docs": []
                }
              ],
              "index": 35,
              "docs": []
            },
            {
              "name": "Multisig",
              "fields": [
                {
                  "name": null,
                  "type": 319,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "Bounties",
              "fields": [
                {
                  "name": null,
                  "type": 321,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Bounties, Runtime>",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            },
            {
              "name": "Tips",
              "fields": [
                {
                  "name": null,
                  "type": 322,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Tips, Runtime>",
                  "docs": []
                }
              ],
              "index": 38,
              "docs": []
            },
            {
              "name": "Assets",
              "fields": [
                {
                  "name": null,
                  "type": 323,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Assets, Runtime>",
                  "docs": []
                }
              ],
              "index": 39,
              "docs": []
            },
            {
              "name": "PoolAssets",
              "fields": [
                {
                  "name": null,
                  "type": 324,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PoolAssets, Runtime>",
                  "docs": []
                }
              ],
              "index": 40,
              "docs": []
            },
            {
              "name": "Lottery",
              "fields": [
                {
                  "name": null,
                  "type": 325,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Lottery, Runtime>",
                  "docs": []
                }
              ],
              "index": 42,
              "docs": []
            },
            {
              "name": "Nis",
              "fields": [
                {
                  "name": null,
                  "type": 326,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Nis, Runtime>",
                  "docs": []
                }
              ],
              "index": 43,
              "docs": []
            },
            {
              "name": "Uniques",
              "fields": [
                {
                  "name": null,
                  "type": 328,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Uniques, Runtime>",
                  "docs": []
                }
              ],
              "index": 44,
              "docs": []
            },
            {
              "name": "Nfts",
              "fields": [
                {
                  "name": null,
                  "type": 332,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Nfts, Runtime>",
                  "docs": []
                }
              ],
              "index": 45,
              "docs": []
            },
            {
              "name": "NftFractionalization",
              "fields": [
                {
                  "name": null,
                  "type": 353,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<NftFractionalization, Runtime>",
                  "docs": []
                }
              ],
              "index": 46,
              "docs": []
            },
            {
              "name": "Salary",
              "fields": [
                {
                  "name": null,
                  "type": 354,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Salary, Runtime>",
                  "docs": []
                }
              ],
              "index": 47,
              "docs": []
            },
            {
              "name": "CoreFellowship",
              "fields": [
                {
                  "name": null,
                  "type": 355,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CoreFellowship, Runtime>",
                  "docs": []
                }
              ],
              "index": 48,
              "docs": []
            },
            {
              "name": "TransactionStorage",
              "fields": [
                {
                  "name": null,
                  "type": 356,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TransactionStorage, Runtime>",
                  "docs": []
                }
              ],
              "index": 49,
              "docs": []
            },
            {
              "name": "VoterList",
              "fields": [
                {
                  "name": null,
                  "type": 358,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VoterList, Runtime>",
                  "docs": []
                }
              ],
              "index": 50,
              "docs": []
            },
            {
              "name": "StateTrieMigration",
              "fields": [
                {
                  "name": null,
                  "type": 359,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<StateTrieMigration, Runtime>",
                  "docs": []
                }
              ],
              "index": 51,
              "docs": []
            },
            {
              "name": "ChildBounties",
              "fields": [
                {
                  "name": null,
                  "type": 365,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ChildBounties, Runtime>",
                  "docs": []
                }
              ],
              "index": 52,
              "docs": []
            },
            {
              "name": "Referenda",
              "fields": [
                {
                  "name": null,
                  "type": 366,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Referenda, Runtime>",
                  "docs": []
                }
              ],
              "index": 53,
              "docs": []
            },
            {
              "name": "Remark",
              "fields": [
                {
                  "name": null,
                  "type": 368,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Remark, Runtime>",
                  "docs": []
                }
              ],
              "index": 54,
              "docs": []
            },
            {
              "name": "RootTesting",
              "fields": [
                {
                  "name": null,
                  "type": 369,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RootTesting, Runtime>",
                  "docs": []
                }
              ],
              "index": 55,
              "docs": []
            },
            {
              "name": "ConvictionVoting",
              "fields": [
                {
                  "name": null,
                  "type": 370,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ConvictionVoting, Runtime>",
                  "docs": []
                }
              ],
              "index": 56,
              "docs": []
            },
            {
              "name": "Whitelist",
              "fields": [
                {
                  "name": null,
                  "type": 374,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Whitelist, Runtime>",
                  "docs": []
                }
              ],
              "index": 57,
              "docs": []
            },
            {
              "name": "AllianceMotion",
              "fields": [
                {
                  "name": null,
                  "type": 375,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AllianceMotion, Runtime>",
                  "docs": []
                }
              ],
              "index": 58,
              "docs": []
            },
            {
              "name": "Alliance",
              "fields": [
                {
                  "name": null,
                  "type": 376,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Alliance, Runtime>",
                  "docs": []
                }
              ],
              "index": 59,
              "docs": []
            },
            {
              "name": "NominationPools",
              "fields": [
                {
                  "name": null,
                  "type": 385,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<NominationPools, Runtime>",
                  "docs": []
                }
              ],
              "index": 60,
              "docs": []
            },
            {
              "name": "RankedPolls",
              "fields": [
                {
                  "name": null,
                  "type": 396,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RankedPolls, Runtime>",
                  "docs": []
                }
              ],
              "index": 61,
              "docs": []
            },
            {
              "name": "RankedCollective",
              "fields": [
                {
                  "name": null,
                  "type": 397,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RankedCollective, Runtime>",
                  "docs": []
                }
              ],
              "index": 62,
              "docs": []
            },
            {
              "name": "AssetConversion",
              "fields": [
                {
                  "name": null,
                  "type": 398,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetConversion, Runtime>",
                  "docs": []
                }
              ],
              "index": 63,
              "docs": []
            },
            {
              "name": "FastUnstake",
              "fields": [
                {
                  "name": null,
                  "type": 402,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FastUnstake, Runtime>",
                  "docs": []
                }
              ],
              "index": 64,
              "docs": []
            },
            {
              "name": "MessageQueue",
              "fields": [
                {
                  "name": null,
                  "type": 403,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageQueue, Runtime>",
                  "docs": []
                }
              ],
              "index": 65,
              "docs": []
            },
            {
              "name": "Pov",
              "fields": [
                {
                  "name": null,
                  "type": 404,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Pov, Runtime>",
                  "docs": []
                }
              ],
              "index": 66,
              "docs": []
            },
            {
              "name": "TxPause",
              "fields": [
                {
                  "name": null,
                  "type": 405,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TxPause, Runtime>",
                  "docs": []
                }
              ],
              "index": 67,
              "docs": []
            },
            {
              "name": "SafeMode",
              "fields": [
                {
                  "name": null,
                  "type": 407,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<SafeMode, Runtime>",
                  "docs": []
                }
              ],
              "index": 68,
              "docs": []
            },
            {
              "name": "Broker",
              "fields": [
                {
                  "name": null,
                  "type": 408,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Broker, Runtime>",
                  "docs": []
                }
              ],
              "index": 70,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 142,
    "type": {
      "path": [
        "frame_system",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "remark",
              "fields": [
                {
                  "name": "remark",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::remark`]."
              ]
            },
            {
              "name": "set_heap_pages",
              "fields": [
                {
                  "name": "pages",
                  "type": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_heap_pages`]."
              ]
            },
            {
              "name": "set_code",
              "fields": [
                {
                  "name": "code",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_code`]."
              ]
            },
            {
              "name": "set_code_without_checks",
              "fields": [
                {
                  "name": "code",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::set_code_without_checks`]."
              ]
            },
            {
              "name": "set_storage",
              "fields": [
                {
                  "name": "items",
                  "type": 143,
                  "typeName": "Vec<KeyValue>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::set_storage`]."
              ]
            },
            {
              "name": "kill_storage",
              "fields": [
                {
                  "name": "keys",
                  "type": 145,
                  "typeName": "Vec<Key>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::kill_storage`]."
              ]
            },
            {
              "name": "kill_prefix",
              "fields": [
                {
                  "name": "prefix",
                  "type": 13,
                  "typeName": "Key",
                  "docs": []
                },
                {
                  "name": "subkeys",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::kill_prefix`]."
              ]
            },
            {
              "name": "remark_with_event",
              "fields": [
                {
                  "name": "remark",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::remark_with_event`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 143,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 144
        }
      },
      "docs": []
    }
  },
  {
    "id": 144,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          13,
          13
        ]
      },
      "docs": []
    }
  },
  {
    "id": 145,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 13
        }
      },
      "docs": []
    }
  },
  {
    "id": 146,
    "type": {
      "path": [
        "pallet_utility",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "batch",
              "fields": [
                {
                  "name": "calls",
                  "type": 147,
                  "typeName": "Vec<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::batch`]."
              ]
            },
            {
              "name": "as_derivative",
              "fields": [
                {
                  "name": "index",
                  "type": 101,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::as_derivative`]."
              ]
            },
            {
              "name": "batch_all",
              "fields": [
                {
                  "name": "calls",
                  "type": 147,
                  "typeName": "Vec<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::batch_all`]."
              ]
            },
            {
              "name": "dispatch_as",
              "fields": [
                {
                  "name": "as_origin",
                  "type": 148,
                  "typeName": "Box<T::PalletsOrigin>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::dispatch_as`]."
              ]
            },
            {
              "name": "force_batch",
              "fields": [
                {
                  "name": "calls",
                  "type": 147,
                  "typeName": "Vec<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::force_batch`]."
              ]
            },
            {
              "name": "with_weight",
              "fields": [
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                },
                {
                  "name": "weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::with_weight`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 147,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 141
        }
      },
      "docs": []
    }
  },
  {
    "id": 148,
    "type": {
      "path": [
        "kitchensink_runtime",
        "OriginCaller"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "system",
              "fields": [
                {
                  "name": null,
                  "type": 149,
                  "typeName": "frame_system::Origin<Runtime>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Council",
              "fields": [
                {
                  "name": null,
                  "type": 150,
                  "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance1>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "TechnicalCommittee",
              "fields": [
                {
                  "name": null,
                  "type": 151,
                  "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance2>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "AllianceMotion",
              "fields": [
                {
                  "name": null,
                  "type": 152,
                  "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance3>",
                  "docs": []
                }
              ],
              "index": 58,
              "docs": []
            },
            {
              "name": "Void",
              "fields": [
                {
                  "name": null,
                  "type": 153,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 149,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "RawOrigin"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Root",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Signed",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "None",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 150,
    "type": {
      "path": [
        "pallet_collective",
        "RawOrigin"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Members",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Member",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "_Phantom",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 151,
    "type": {
      "path": [
        "pallet_collective",
        "RawOrigin"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Members",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Member",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "_Phantom",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 152,
    "type": {
      "path": [
        "pallet_collective",
        "RawOrigin"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Members",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Member",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "_Phantom",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 153,
    "type": {
      "path": [
        "sp_core",
        "Void"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 154,
    "type": {
      "path": [
        "pallet_babe",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "report_equivocation",
              "fields": [
                {
                  "name": "equivocation_proof",
                  "type": 155,
                  "typeName": "Box<EquivocationProof<HeaderFor<T>>>",
                  "docs": []
                },
                {
                  "name": "key_owner_proof",
                  "type": 160,
                  "typeName": "T::KeyOwnerProof",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::report_equivocation`]."
              ]
            },
            {
              "name": "report_equivocation_unsigned",
              "fields": [
                {
                  "name": "equivocation_proof",
                  "type": 155,
                  "typeName": "Box<EquivocationProof<HeaderFor<T>>>",
                  "docs": []
                },
                {
                  "name": "key_owner_proof",
                  "type": 160,
                  "typeName": "T::KeyOwnerProof",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::report_equivocation_unsigned`]."
              ]
            },
            {
              "name": "plan_config_change",
              "fields": [
                {
                  "name": "config",
                  "type": 161,
                  "typeName": "NextConfigDescriptor",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::plan_config_change`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 155,
    "type": {
      "path": [
        "sp_consensus_slots",
        "EquivocationProof"
      ],
      "params": [
        {
          "name": "Header",
          "type": 156
        },
        {
          "name": "Id",
          "type": 158
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "offender",
              "type": 158,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "slot",
              "type": 159,
              "typeName": "Slot",
              "docs": []
            },
            {
              "name": "first_header",
              "type": 156,
              "typeName": "Header",
              "docs": []
            },
            {
              "name": "second_header",
              "type": 156,
              "typeName": "Header",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 156,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "header",
        "Header"
      ],
      "params": [
        {
          "name": "Number",
          "type": 4
        },
        {
          "name": "Hash",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "parent_hash",
              "type": 12,
              "typeName": "Hash::Output",
              "docs": []
            },
            {
              "name": "number",
              "type": 157,
              "typeName": "Number",
              "docs": []
            },
            {
              "name": "state_root",
              "type": 12,
              "typeName": "Hash::Output",
              "docs": []
            },
            {
              "name": "extrinsics_root",
              "type": 12,
              "typeName": "Hash::Output",
              "docs": []
            },
            {
              "name": "digest",
              "type": 14,
              "typeName": "Digest",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 157,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 4
        }
      },
      "docs": []
    }
  },
  {
    "id": 158,
    "type": {
      "path": [
        "sp_consensus_babe",
        "app",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 78,
              "typeName": "sr25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 159,
    "type": {
      "path": [
        "sp_consensus_slots",
        "Slot"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 11,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 160,
    "type": {
      "path": [
        "sp_session",
        "MembershipProof"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "session",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "trie_nodes",
              "type": 145,
              "typeName": "Vec<Vec<u8>>",
              "docs": []
            },
            {
              "name": "validator_count",
              "type": 4,
              "typeName": "ValidatorCount",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 161,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "NextConfigDescriptor"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V1",
              "fields": [
                {
                  "name": "c",
                  "type": 162,
                  "typeName": "(u64, u64)",
                  "docs": []
                },
                {
                  "name": "allowed_slots",
                  "type": 163,
                  "typeName": "AllowedSlots",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 162,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          11,
          11
        ]
      },
      "docs": []
    }
  },
  {
    "id": 163,
    "type": {
      "path": [
        "sp_consensus_babe",
        "AllowedSlots"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PrimarySlots",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "PrimaryAndSecondaryPlainSlots",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "PrimaryAndSecondaryVRFSlots",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 164,
    "type": {
      "path": [
        "pallet_timestamp",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "set",
              "fields": [
                {
                  "name": "now",
                  "type": 10,
                  "typeName": "T::Moment",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::set`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 165,
    "type": {
      "path": [
        "pallet_indices",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "claim",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::claim`]."
              ]
            },
            {
              "name": "transfer",
              "fields": [
                {
                  "name": "new",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::transfer`]."
              ]
            },
            {
              "name": "free",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::free`]."
              ]
            },
            {
              "name": "force_transfer",
              "fields": [
                {
                  "name": "new",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                },
                {
                  "name": "freeze",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::force_transfer`]."
              ]
            },
            {
              "name": "freeze",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::freeze`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 166,
    "type": {
      "path": [
        "sp_runtime",
        "multiaddress",
        "MultiAddress"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "AccountIndex",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Id",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Index",
              "fields": [
                {
                  "name": null,
                  "type": 157,
                  "typeName": "AccountIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Raw",
              "fields": [
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Address32",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Address20",
              "fields": [
                {
                  "name": null,
                  "type": 167,
                  "typeName": "[u8; 20]",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 167,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 20,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 168,
    "type": {
      "path": [
        "pallet_balances",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "transfer_allow_death",
              "fields": [
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::transfer_allow_death`]."
              ]
            },
            {
              "name": "set_balance_deprecated",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "new_free",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                },
                {
                  "name": "old_reserved",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_balance_deprecated`]."
              ]
            },
            {
              "name": "force_transfer",
              "fields": [
                {
                  "name": "source",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::force_transfer`]."
              ]
            },
            {
              "name": "transfer_keep_alive",
              "fields": [
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::transfer_keep_alive`]."
              ]
            },
            {
              "name": "transfer_all",
              "fields": [
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "keep_alive",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::transfer_all`]."
              ]
            },
            {
              "name": "force_unreserve",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::force_unreserve`]."
              ]
            },
            {
              "name": "upgrade_accounts",
              "fields": [
                {
                  "name": "who",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::upgrade_accounts`]."
              ]
            },
            {
              "name": "transfer",
              "fields": [
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::transfer`]."
              ]
            },
            {
              "name": "force_set_balance",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "new_free",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::force_set_balance`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 169,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "submit_unsigned",
              "fields": [
                {
                  "name": "raw_solution",
                  "type": 170,
                  "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                  "docs": []
                },
                {
                  "name": "witness",
                  "type": 222,
                  "typeName": "SolutionOrSnapshotSize",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::submit_unsigned`]."
              ]
            },
            {
              "name": "set_minimum_untrusted_score",
              "fields": [
                {
                  "name": "maybe_next_score",
                  "type": 223,
                  "typeName": "Option<ElectionScore>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_minimum_untrusted_score`]."
              ]
            },
            {
              "name": "set_emergency_election_result",
              "fields": [
                {
                  "name": "supports",
                  "type": 224,
                  "typeName": "Supports<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_emergency_election_result`]."
              ]
            },
            {
              "name": "submit",
              "fields": [
                {
                  "name": "raw_solution",
                  "type": 170,
                  "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::submit`]."
              ]
            },
            {
              "name": "governance_fallback",
              "fields": [
                {
                  "name": "maybe_max_voters",
                  "type": 38,
                  "typeName": "Option<u32>",
                  "docs": []
                },
                {
                  "name": "maybe_max_targets",
                  "type": 38,
                  "typeName": "Option<u32>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::governance_fallback`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 170,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "RawSolution"
      ],
      "params": [
        {
          "name": "S",
          "type": 171
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "solution",
              "type": 171,
              "typeName": "S",
              "docs": []
            },
            {
              "name": "score",
              "type": 44,
              "typeName": "ElectionScore",
              "docs": []
            },
            {
              "name": "round",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 171,
    "type": {
      "path": [
        "kitchensink_runtime",
        "NposSolution16"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "votes1",
              "type": 172,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes2",
              "type": 175,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes3",
              "type": 180,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes4",
              "type": 183,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes5",
              "type": 186,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes6",
              "type": 189,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes7",
              "type": 192,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes8",
              "type": 195,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes9",
              "type": 198,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes10",
              "type": 201,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes11",
              "type": 204,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes12",
              "type": 207,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes13",
              "type": 210,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes14",
              "type": 213,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes15",
              "type": 216,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes16",
              "type": 219,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 172,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 173
        }
      },
      "docs": []
    }
  },
  {
    "id": 173,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 174,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 101
        }
      },
      "docs": []
    }
  },
  {
    "id": 175,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 176
        }
      },
      "docs": []
    }
  },
  {
    "id": 176,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          177,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 177,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          174,
          178
        ]
      },
      "docs": []
    }
  },
  {
    "id": 178,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 179
        }
      },
      "docs": []
    }
  },
  {
    "id": 179,
    "type": {
      "path": [
        "sp_arithmetic",
        "per_things",
        "PerU16"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 101,
              "typeName": "u16",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 180,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 181
        }
      },
      "docs": []
    }
  },
  {
    "id": 181,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          182,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 182,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 2,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 183,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 184
        }
      },
      "docs": []
    }
  },
  {
    "id": 184,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          185,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 185,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 3,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 186,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 187
        }
      },
      "docs": []
    }
  },
  {
    "id": 187,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          188,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 188,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 4,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 189,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 190
        }
      },
      "docs": []
    }
  },
  {
    "id": 190,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          191,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 191,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 5,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 192,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 193
        }
      },
      "docs": []
    }
  },
  {
    "id": 193,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          194,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 194,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 6,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 195,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 196
        }
      },
      "docs": []
    }
  },
  {
    "id": 196,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          197,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 197,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 7,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 198,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 199
        }
      },
      "docs": []
    }
  },
  {
    "id": 199,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          200,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 200,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 8,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 201,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 202
        }
      },
      "docs": []
    }
  },
  {
    "id": 202,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          203,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 203,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 9,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 204,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 205
        }
      },
      "docs": []
    }
  },
  {
    "id": 205,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          206,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 206,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 10,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 207,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 208
        }
      },
      "docs": []
    }
  },
  {
    "id": 208,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          209,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 209,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 11,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 210,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 211
        }
      },
      "docs": []
    }
  },
  {
    "id": 211,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          212,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 212,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 12,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 213,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 214
        }
      },
      "docs": []
    }
  },
  {
    "id": 214,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          215,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 215,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 13,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 216,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 217,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          218,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 218,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 14,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 219,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 220
        }
      },
      "docs": []
    }
  },
  {
    "id": 220,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          157,
          221,
          174
        ]
      },
      "docs": []
    }
  },
  {
    "id": 221,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 15,
          "type": 177
        }
      },
      "docs": []
    }
  },
  {
    "id": 222,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "SolutionOrSnapshotSize"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "voters",
              "type": 157,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "targets",
              "type": 157,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 223,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 44
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 44,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 224,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 225
        }
      },
      "docs": []
    }
  },
  {
    "id": 225,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          226
        ]
      },
      "docs": []
    }
  },
  {
    "id": 226,
    "type": {
      "path": [
        "sp_npos_elections",
        "Support"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "total",
              "type": 6,
              "typeName": "ExtendedBalance",
              "docs": []
            },
            {
              "name": "voters",
              "type": 61,
              "typeName": "Vec<(AccountId, ExtendedBalance)>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 227,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "bond",
              "fields": [
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "payee",
                  "type": 228,
                  "typeName": "RewardDestination<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::bond`]."
              ]
            },
            {
              "name": "bond_extra",
              "fields": [
                {
                  "name": "max_additional",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::bond_extra`]."
              ]
            },
            {
              "name": "unbond",
              "fields": [
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::unbond`]."
              ]
            },
            {
              "name": "withdraw_unbonded",
              "fields": [
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::withdraw_unbonded`]."
              ]
            },
            {
              "name": "validate",
              "fields": [
                {
                  "name": "prefs",
                  "type": 49,
                  "typeName": "ValidatorPrefs",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::validate`]."
              ]
            },
            {
              "name": "nominate",
              "fields": [
                {
                  "name": "targets",
                  "type": 229,
                  "typeName": "Vec<AccountIdLookupOf<T>>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::nominate`]."
              ]
            },
            {
              "name": "chill",
              "fields": [],
              "index": 6,
              "docs": [
                "See [`Pallet::chill`]."
              ]
            },
            {
              "name": "set_payee",
              "fields": [
                {
                  "name": "payee",
                  "type": 228,
                  "typeName": "RewardDestination<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::set_payee`]."
              ]
            },
            {
              "name": "set_controller",
              "fields": [],
              "index": 8,
              "docs": [
                "See [`Pallet::set_controller`]."
              ]
            },
            {
              "name": "set_validator_count",
              "fields": [
                {
                  "name": "new",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::set_validator_count`]."
              ]
            },
            {
              "name": "increase_validator_count",
              "fields": [
                {
                  "name": "additional",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::increase_validator_count`]."
              ]
            },
            {
              "name": "scale_validator_count",
              "fields": [
                {
                  "name": "factor",
                  "type": 230,
                  "typeName": "Percent",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::scale_validator_count`]."
              ]
            },
            {
              "name": "force_no_eras",
              "fields": [],
              "index": 12,
              "docs": [
                "See [`Pallet::force_no_eras`]."
              ]
            },
            {
              "name": "force_new_era",
              "fields": [],
              "index": 13,
              "docs": [
                "See [`Pallet::force_new_era`]."
              ]
            },
            {
              "name": "set_invulnerables",
              "fields": [
                {
                  "name": "invulnerables",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::set_invulnerables`]."
              ]
            },
            {
              "name": "force_unstake",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::force_unstake`]."
              ]
            },
            {
              "name": "force_new_era_always",
              "fields": [],
              "index": 16,
              "docs": [
                "See [`Pallet::force_new_era_always`]."
              ]
            },
            {
              "name": "cancel_deferred_slash",
              "fields": [
                {
                  "name": "era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                },
                {
                  "name": "slash_indices",
                  "type": 114,
                  "typeName": "Vec<u32>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::cancel_deferred_slash`]."
              ]
            },
            {
              "name": "payout_stakers",
              "fields": [
                {
                  "name": "validator_stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::payout_stakers`]."
              ]
            },
            {
              "name": "rebond",
              "fields": [
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::rebond`]."
              ]
            },
            {
              "name": "reap_stash",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "See [`Pallet::reap_stash`]."
              ]
            },
            {
              "name": "kick",
              "fields": [
                {
                  "name": "who",
                  "type": 229,
                  "typeName": "Vec<AccountIdLookupOf<T>>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "See [`Pallet::kick`]."
              ]
            },
            {
              "name": "set_staking_configs",
              "fields": [
                {
                  "name": "min_nominator_bond",
                  "type": 231,
                  "typeName": "ConfigOp<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "min_validator_bond",
                  "type": 231,
                  "typeName": "ConfigOp<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "max_nominator_count",
                  "type": 232,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "max_validator_count",
                  "type": 232,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "chill_threshold",
                  "type": 233,
                  "typeName": "ConfigOp<Percent>",
                  "docs": []
                },
                {
                  "name": "min_commission",
                  "type": 234,
                  "typeName": "ConfigOp<Perbill>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "See [`Pallet::set_staking_configs`]."
              ]
            },
            {
              "name": "chill_other",
              "fields": [
                {
                  "name": "controller",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "See [`Pallet::chill_other`]."
              ]
            },
            {
              "name": "force_apply_min_commission",
              "fields": [
                {
                  "name": "validator_stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": [
                "See [`Pallet::force_apply_min_commission`]."
              ]
            },
            {
              "name": "set_min_commission",
              "fields": [
                {
                  "name": "new",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": [
                "See [`Pallet::set_min_commission`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 228,
    "type": {
      "path": [
        "pallet_staking",
        "RewardDestination"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Staked",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Stash",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Controller",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Account",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "None",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 229,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 166
        }
      },
      "docs": []
    }
  },
  {
    "id": 230,
    "type": {
      "path": [
        "sp_arithmetic",
        "per_things",
        "Percent"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 2,
              "typeName": "u8",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 231,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 232,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 233,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 230
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 230,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 234,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 48
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 48,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 235,
    "type": {
      "path": [
        "pallet_session",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "set_keys",
              "fields": [
                {
                  "name": "keys",
                  "type": 236,
                  "typeName": "T::Keys",
                  "docs": []
                },
                {
                  "name": "proof",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::set_keys`]."
              ]
            },
            {
              "name": "purge_keys",
              "fields": [],
              "index": 1,
              "docs": [
                "See [`Pallet::purge_keys`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 236,
    "type": {
      "path": [
        "kitchensink_runtime",
        "SessionKeys"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "grandpa",
              "type": 67,
              "typeName": "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            },
            {
              "name": "babe",
              "type": 158,
              "typeName": "<Babe as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            },
            {
              "name": "im_online",
              "type": 77,
              "typeName": "<ImOnline as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            },
            {
              "name": "authority_discovery",
              "type": 237,
              "typeName": "<AuthorityDiscovery as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 237,
    "type": {
      "path": [
        "sp_authority_discovery",
        "app",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 78,
              "typeName": "sr25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 238,
    "type": {
      "path": [
        "pallet_democracy",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "propose",
              "fields": [
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::propose`]."
              ]
            },
            {
              "name": "second",
              "fields": [
                {
                  "name": "proposal",
                  "type": 157,
                  "typeName": "PropIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::second`]."
              ]
            },
            {
              "name": "vote",
              "fields": [
                {
                  "name": "ref_index",
                  "type": 157,
                  "typeName": "ReferendumIndex",
                  "docs": []
                },
                {
                  "name": "vote",
                  "type": 55,
                  "typeName": "AccountVote<BalanceOf<T>>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "emergency_cancel",
              "fields": [
                {
                  "name": "ref_index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::emergency_cancel`]."
              ]
            },
            {
              "name": "external_propose",
              "fields": [
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::external_propose`]."
              ]
            },
            {
              "name": "external_propose_majority",
              "fields": [
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::external_propose_majority`]."
              ]
            },
            {
              "name": "external_propose_default",
              "fields": [
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::external_propose_default`]."
              ]
            },
            {
              "name": "fast_track",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "H256",
                  "docs": []
                },
                {
                  "name": "voting_period",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::fast_track`]."
              ]
            },
            {
              "name": "veto_external",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "H256",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::veto_external`]."
              ]
            },
            {
              "name": "cancel_referendum",
              "fields": [
                {
                  "name": "ref_index",
                  "type": 157,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::cancel_referendum`]."
              ]
            },
            {
              "name": "delegate",
              "fields": [
                {
                  "name": "to",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "conviction",
                  "type": 239,
                  "typeName": "Conviction",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::delegate`]."
              ]
            },
            {
              "name": "undelegate",
              "fields": [],
              "index": 11,
              "docs": [
                "See [`Pallet::undelegate`]."
              ]
            },
            {
              "name": "clear_public_proposals",
              "fields": [],
              "index": 12,
              "docs": [
                "See [`Pallet::clear_public_proposals`]."
              ]
            },
            {
              "name": "unlock",
              "fields": [
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::unlock`]."
              ]
            },
            {
              "name": "remove_vote",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::remove_vote`]."
              ]
            },
            {
              "name": "remove_other_vote",
              "fields": [
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::remove_other_vote`]."
              ]
            },
            {
              "name": "blacklist",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "H256",
                  "docs": []
                },
                {
                  "name": "maybe_ref_index",
                  "type": 38,
                  "typeName": "Option<ReferendumIndex>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "See [`Pallet::blacklist`]."
              ]
            },
            {
              "name": "cancel_proposal",
              "fields": [
                {
                  "name": "prop_index",
                  "type": 157,
                  "typeName": "PropIndex",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::cancel_proposal`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "owner",
                  "type": 57,
                  "typeName": "MetadataOwner",
                  "docs": []
                },
                {
                  "name": "maybe_hash",
                  "type": 240,
                  "typeName": "Option<PreimageHash>",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 239,
    "type": {
      "path": [
        "pallet_democracy",
        "conviction",
        "Conviction"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Locked1x",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Locked2x",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Locked3x",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "Locked4x",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Locked5x",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Locked6x",
              "fields": [],
              "index": 6,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 240,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 12
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 12,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 241,
    "type": {
      "path": [
        "pallet_collective",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "set_members",
              "fields": [
                {
                  "name": "new_members",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "prime",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "old_count",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::set_members`]."
              ]
            },
            {
              "name": "execute",
              "fields": [
                {
                  "name": "proposal",
                  "type": 141,
                  "typeName": "Box<<T as Config<I>>::Proposal>",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::execute`]."
              ]
            },
            {
              "name": "propose",
              "fields": [
                {
                  "name": "threshold",
                  "type": 157,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": "proposal",
                  "type": 141,
                  "typeName": "Box<<T as Config<I>>::Proposal>",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::propose`]."
              ]
            },
            {
              "name": "vote",
              "fields": [
                {
                  "name": "proposal",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "approve",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "disapprove_proposal",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::disapprove_proposal`]."
              ]
            },
            {
              "name": "close",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "proposal_weight_bound",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::close`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 242,
    "type": {
      "path": [
        "pallet_collective",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "set_members",
              "fields": [
                {
                  "name": "new_members",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "prime",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "old_count",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::set_members`]."
              ]
            },
            {
              "name": "execute",
              "fields": [
                {
                  "name": "proposal",
                  "type": 141,
                  "typeName": "Box<<T as Config<I>>::Proposal>",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::execute`]."
              ]
            },
            {
              "name": "propose",
              "fields": [
                {
                  "name": "threshold",
                  "type": 157,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": "proposal",
                  "type": 141,
                  "typeName": "Box<<T as Config<I>>::Proposal>",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::propose`]."
              ]
            },
            {
              "name": "vote",
              "fields": [
                {
                  "name": "proposal",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "approve",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "disapprove_proposal",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::disapprove_proposal`]."
              ]
            },
            {
              "name": "close",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "proposal_weight_bound",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::close`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 243,
    "type": {
      "path": [
        "pallet_elections_phragmen",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "vote",
              "fields": [
                {
                  "name": "votes",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "remove_voter",
              "fields": [],
              "index": 1,
              "docs": [
                "See [`Pallet::remove_voter`]."
              ]
            },
            {
              "name": "submit_candidacy",
              "fields": [
                {
                  "name": "candidate_count",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::submit_candidacy`]."
              ]
            },
            {
              "name": "renounce_candidacy",
              "fields": [
                {
                  "name": "renouncing",
                  "type": 244,
                  "typeName": "Renouncing",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::renounce_candidacy`]."
              ]
            },
            {
              "name": "remove_member",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "slash_bond",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "rerun_election",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::remove_member`]."
              ]
            },
            {
              "name": "clean_defunct_voters",
              "fields": [
                {
                  "name": "num_voters",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "num_defunct",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::clean_defunct_voters`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 244,
    "type": {
      "path": [
        "pallet_elections_phragmen",
        "Renouncing"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Member",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "RunnerUp",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Candidate",
              "fields": [
                {
                  "name": null,
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 245,
    "type": {
      "path": [
        "pallet_membership",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "add_member",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::add_member`]."
              ]
            },
            {
              "name": "remove_member",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::remove_member`]."
              ]
            },
            {
              "name": "swap_member",
              "fields": [
                {
                  "name": "remove",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "add",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::swap_member`]."
              ]
            },
            {
              "name": "reset_members",
              "fields": [
                {
                  "name": "members",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::reset_members`]."
              ]
            },
            {
              "name": "change_key",
              "fields": [
                {
                  "name": "new",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::change_key`]."
              ]
            },
            {
              "name": "set_prime",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::set_prime`]."
              ]
            },
            {
              "name": "clear_prime",
              "fields": [],
              "index": 6,
              "docs": [
                "See [`Pallet::clear_prime`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 246,
    "type": {
      "path": [
        "pallet_grandpa",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "report_equivocation",
              "fields": [
                {
                  "name": "equivocation_proof",
                  "type": 247,
                  "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "key_owner_proof",
                  "type": 160,
                  "typeName": "T::KeyOwnerProof",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::report_equivocation`]."
              ]
            },
            {
              "name": "report_equivocation_unsigned",
              "fields": [
                {
                  "name": "equivocation_proof",
                  "type": 247,
                  "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "key_owner_proof",
                  "type": 160,
                  "typeName": "T::KeyOwnerProof",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::report_equivocation_unsigned`]."
              ]
            },
            {
              "name": "note_stalled",
              "fields": [
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "best_finalized_block_number",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::note_stalled`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 247,
    "type": {
      "path": [
        "sp_consensus_grandpa",
        "EquivocationProof"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        },
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "set_id",
              "type": 11,
              "typeName": "SetId",
              "docs": []
            },
            {
              "name": "equivocation",
              "type": 248,
              "typeName": "Equivocation<H, N>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 248,
    "type": {
      "path": [
        "sp_consensus_grandpa",
        "Equivocation"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        },
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Prevote",
              "fields": [
                {
                  "name": null,
                  "type": 249,
                  "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Precommit",
              "fields": [
                {
                  "name": null,
                  "type": 255,
                  "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 249,
    "type": {
      "path": [
        "finality_grandpa",
        "Equivocation"
      ],
      "params": [
        {
          "name": "Id",
          "type": 67
        },
        {
          "name": "V",
          "type": 250
        },
        {
          "name": "S",
          "type": 251
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "round_number",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "identity",
              "type": 67,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "first",
              "type": 254,
              "typeName": "(V, S)",
              "docs": []
            },
            {
              "name": "second",
              "type": 254,
              "typeName": "(V, S)",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 250,
    "type": {
      "path": [
        "finality_grandpa",
        "Prevote"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        },
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "target_hash",
              "type": 12,
              "typeName": "H",
              "docs": []
            },
            {
              "name": "target_number",
              "type": 4,
              "typeName": "N",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 251,
    "type": {
      "path": [
        "sp_consensus_grandpa",
        "app",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 252,
              "typeName": "ed25519::Signature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 252,
    "type": {
      "path": [
        "sp_core",
        "ed25519",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 253,
              "typeName": "[u8; 64]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 253,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 64,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 254,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          250,
          251
        ]
      },
      "docs": []
    }
  },
  {
    "id": 255,
    "type": {
      "path": [
        "finality_grandpa",
        "Equivocation"
      ],
      "params": [
        {
          "name": "Id",
          "type": 67
        },
        {
          "name": "V",
          "type": 256
        },
        {
          "name": "S",
          "type": 251
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "round_number",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "identity",
              "type": 67,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "first",
              "type": 257,
              "typeName": "(V, S)",
              "docs": []
            },
            {
              "name": "second",
              "type": 257,
              "typeName": "(V, S)",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 256,
    "type": {
      "path": [
        "finality_grandpa",
        "Precommit"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        },
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "target_hash",
              "type": 12,
              "typeName": "H",
              "docs": []
            },
            {
              "name": "target_number",
              "type": 4,
              "typeName": "N",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 257,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          256,
          251
        ]
      },
      "docs": []
    }
  },
  {
    "id": 258,
    "type": {
      "path": [
        "pallet_treasury",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "propose_spend",
              "fields": [
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::propose_spend`]."
              ]
            },
            {
              "name": "reject_proposal",
              "fields": [
                {
                  "name": "proposal_id",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::reject_proposal`]."
              ]
            },
            {
              "name": "approve_proposal",
              "fields": [
                {
                  "name": "proposal_id",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::approve_proposal`]."
              ]
            },
            {
              "name": "spend",
              "fields": [
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::spend`]."
              ]
            },
            {
              "name": "remove_approval",
              "fields": [
                {
                  "name": "proposal_id",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::remove_approval`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 259,
    "type": {
      "path": [
        "pallet_asset_rate",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "create",
              "fields": [
                {
                  "name": "asset_kind",
                  "type": 4,
                  "typeName": "T::AssetKind",
                  "docs": []
                },
                {
                  "name": "rate",
                  "type": 71,
                  "typeName": "FixedU128",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::create`]."
              ]
            },
            {
              "name": "update",
              "fields": [
                {
                  "name": "asset_kind",
                  "type": 4,
                  "typeName": "T::AssetKind",
                  "docs": []
                },
                {
                  "name": "rate",
                  "type": 71,
                  "typeName": "FixedU128",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::update`]."
              ]
            },
            {
              "name": "remove",
              "fields": [
                {
                  "name": "asset_kind",
                  "type": 4,
                  "typeName": "T::AssetKind",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::remove`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 260,
    "type": {
      "path": [
        "pallet_contracts",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "call_old_weight",
              "fields": [
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "gas_limit",
                  "type": 10,
                  "typeName": "OldWeight",
                  "docs": []
                },
                {
                  "name": "storage_deposit_limit",
                  "type": 261,
                  "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::call_old_weight`]."
              ]
            },
            {
              "name": "instantiate_with_code_old_weight",
              "fields": [
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "gas_limit",
                  "type": 10,
                  "typeName": "OldWeight",
                  "docs": []
                },
                {
                  "name": "storage_deposit_limit",
                  "type": 261,
                  "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                  "docs": []
                },
                {
                  "name": "code",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "salt",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::instantiate_with_code_old_weight`]."
              ]
            },
            {
              "name": "instantiate_old_weight",
              "fields": [
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "gas_limit",
                  "type": 10,
                  "typeName": "OldWeight",
                  "docs": []
                },
                {
                  "name": "storage_deposit_limit",
                  "type": 261,
                  "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                  "docs": []
                },
                {
                  "name": "code_hash",
                  "type": 12,
                  "typeName": "CodeHash<T>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "salt",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::instantiate_old_weight`]."
              ]
            },
            {
              "name": "upload_code",
              "fields": [
                {
                  "name": "code",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "storage_deposit_limit",
                  "type": 261,
                  "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                  "docs": []
                },
                {
                  "name": "determinism",
                  "type": 262,
                  "typeName": "Determinism",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::upload_code`]."
              ]
            },
            {
              "name": "remove_code",
              "fields": [
                {
                  "name": "code_hash",
                  "type": 12,
                  "typeName": "CodeHash<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::remove_code`]."
              ]
            },
            {
              "name": "set_code",
              "fields": [
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "code_hash",
                  "type": 12,
                  "typeName": "CodeHash<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::set_code`]."
              ]
            },
            {
              "name": "call",
              "fields": [
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "gas_limit",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "storage_deposit_limit",
                  "type": 261,
                  "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::call`]."
              ]
            },
            {
              "name": "instantiate_with_code",
              "fields": [
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "gas_limit",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "storage_deposit_limit",
                  "type": 261,
                  "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                  "docs": []
                },
                {
                  "name": "code",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "salt",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::instantiate_with_code`]."
              ]
            },
            {
              "name": "instantiate",
              "fields": [
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "gas_limit",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "storage_deposit_limit",
                  "type": 261,
                  "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                  "docs": []
                },
                {
                  "name": "code_hash",
                  "type": 12,
                  "typeName": "CodeHash<T>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "salt",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::instantiate`]."
              ]
            },
            {
              "name": "migrate",
              "fields": [
                {
                  "name": "weight_limit",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::migrate`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 261,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 82
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 82,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 262,
    "type": {
      "path": [
        "pallet_contracts",
        "wasm",
        "Determinism"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Enforced",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Relaxed",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 263,
    "type": {
      "path": [
        "pallet_sudo",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "sudo",
              "fields": [
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::sudo`]."
              ]
            },
            {
              "name": "sudo_unchecked_weight",
              "fields": [
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                },
                {
                  "name": "weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::sudo_unchecked_weight`]."
              ]
            },
            {
              "name": "set_key",
              "fields": [
                {
                  "name": "new",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_key`]."
              ]
            },
            {
              "name": "sudo_as",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::sudo_as`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 264,
    "type": {
      "path": [
        "pallet_im_online",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "heartbeat",
              "fields": [
                {
                  "name": "heartbeat",
                  "type": 265,
                  "typeName": "Heartbeat<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "signature",
                  "type": 266,
                  "typeName": "<T::AuthorityId as RuntimeAppPublic>::Signature",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::heartbeat`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 265,
    "type": {
      "path": [
        "pallet_im_online",
        "Heartbeat"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "block_number",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "session_index",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "authority_index",
              "type": 4,
              "typeName": "AuthIndex",
              "docs": []
            },
            {
              "name": "validators_len",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 266,
    "type": {
      "path": [
        "pallet_im_online",
        "sr25519",
        "app_sr25519",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 267,
              "typeName": "sr25519::Signature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 267,
    "type": {
      "path": [
        "sp_core",
        "sr25519",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 253,
              "typeName": "[u8; 64]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 268,
    "type": {
      "path": [
        "pallet_identity",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "add_registrar",
              "fields": [
                {
                  "name": "account",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::add_registrar`]."
              ]
            },
            {
              "name": "set_identity",
              "fields": [
                {
                  "name": "info",
                  "type": 269,
                  "typeName": "Box<IdentityInfo<T::MaxAdditionalFields>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_identity`]."
              ]
            },
            {
              "name": "set_subs",
              "fields": [
                {
                  "name": "subs",
                  "type": 304,
                  "typeName": "Vec<(T::AccountId, Data)>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_subs`]."
              ]
            },
            {
              "name": "clear_identity",
              "fields": [],
              "index": 3,
              "docs": [
                "See [`Pallet::clear_identity`]."
              ]
            },
            {
              "name": "request_judgement",
              "fields": [
                {
                  "name": "reg_index",
                  "type": 157,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "max_fee",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::request_judgement`]."
              ]
            },
            {
              "name": "cancel_request",
              "fields": [
                {
                  "name": "reg_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::cancel_request`]."
              ]
            },
            {
              "name": "set_fee",
              "fields": [
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "fee",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::set_fee`]."
              ]
            },
            {
              "name": "set_account_id",
              "fields": [
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "new",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::set_account_id`]."
              ]
            },
            {
              "name": "set_fields",
              "fields": [
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "fields",
                  "type": 306,
                  "typeName": "IdentityFields",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::set_fields`]."
              ]
            },
            {
              "name": "provide_judgement",
              "fields": [
                {
                  "name": "reg_index",
                  "type": 157,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "judgement",
                  "type": 308,
                  "typeName": "Judgement<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "identity",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::provide_judgement`]."
              ]
            },
            {
              "name": "kill_identity",
              "fields": [
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::kill_identity`]."
              ]
            },
            {
              "name": "add_sub",
              "fields": [
                {
                  "name": "sub",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 272,
                  "typeName": "Data",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::add_sub`]."
              ]
            },
            {
              "name": "rename_sub",
              "fields": [
                {
                  "name": "sub",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 272,
                  "typeName": "Data",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::rename_sub`]."
              ]
            },
            {
              "name": "remove_sub",
              "fields": [
                {
                  "name": "sub",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::remove_sub`]."
              ]
            },
            {
              "name": "quit_sub",
              "fields": [],
              "index": 14,
              "docs": [
                "See [`Pallet::quit_sub`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Identity pallet declaration."
      ]
    }
  },
  {
    "id": 269,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "IdentityInfo"
      ],
      "params": [
        {
          "name": "FieldLimit",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "additional",
              "type": 270,
              "typeName": "BoundedVec<(Data, Data), FieldLimit>",
              "docs": []
            },
            {
              "name": "display",
              "type": 272,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "legal",
              "type": 272,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "web",
              "type": 272,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "riot",
              "type": 272,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "email",
              "type": 272,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "pgp_fingerprint",
              "type": 303,
              "typeName": "Option<[u8; 20]>",
              "docs": []
            },
            {
              "name": "image",
              "type": 272,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "twitter",
              "type": 272,
              "typeName": "Data",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 270,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 271
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 302,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 271,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          272,
          272
        ]
      },
      "docs": []
    }
  },
  {
    "id": 272,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "Data"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Raw0",
              "fields": [
                {
                  "name": null,
                  "type": 273,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Raw1",
              "fields": [
                {
                  "name": null,
                  "type": 274,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Raw2",
              "fields": [
                {
                  "name": null,
                  "type": 275,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Raw3",
              "fields": [
                {
                  "name": null,
                  "type": 276,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Raw4",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Raw5",
              "fields": [
                {
                  "name": null,
                  "type": 277,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "Raw6",
              "fields": [
                {
                  "name": null,
                  "type": 278,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "Raw7",
              "fields": [
                {
                  "name": null,
                  "type": 279,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "Raw8",
              "fields": [
                {
                  "name": null,
                  "type": 280,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "Raw9",
              "fields": [
                {
                  "name": null,
                  "type": 281,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 10,
              "docs": []
            },
            {
              "name": "Raw10",
              "fields": [
                {
                  "name": null,
                  "type": 282,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "Raw11",
              "fields": [
                {
                  "name": null,
                  "type": 283,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "Raw12",
              "fields": [
                {
                  "name": null,
                  "type": 284,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "Raw13",
              "fields": [
                {
                  "name": null,
                  "type": 285,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "Raw14",
              "fields": [
                {
                  "name": null,
                  "type": 286,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "Raw15",
              "fields": [
                {
                  "name": null,
                  "type": 287,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "Raw16",
              "fields": [
                {
                  "name": null,
                  "type": 86,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "Raw17",
              "fields": [
                {
                  "name": null,
                  "type": 288,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "Raw18",
              "fields": [
                {
                  "name": null,
                  "type": 289,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "Raw19",
              "fields": [
                {
                  "name": null,
                  "type": 290,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 20,
              "docs": []
            },
            {
              "name": "Raw20",
              "fields": [
                {
                  "name": null,
                  "type": 167,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Raw21",
              "fields": [
                {
                  "name": null,
                  "type": 291,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "Raw22",
              "fields": [
                {
                  "name": null,
                  "type": 292,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Raw23",
              "fields": [
                {
                  "name": null,
                  "type": 293,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Raw24",
              "fields": [
                {
                  "name": null,
                  "type": 294,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "Raw25",
              "fields": [
                {
                  "name": null,
                  "type": 295,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "Raw26",
              "fields": [
                {
                  "name": null,
                  "type": 296,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 27,
              "docs": []
            },
            {
              "name": "Raw27",
              "fields": [
                {
                  "name": null,
                  "type": 297,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "Raw28",
              "fields": [
                {
                  "name": null,
                  "type": 298,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "Raw29",
              "fields": [
                {
                  "name": null,
                  "type": 299,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "Raw30",
              "fields": [
                {
                  "name": null,
                  "type": 300,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 31,
              "docs": []
            },
            {
              "name": "Raw31",
              "fields": [
                {
                  "name": null,
                  "type": 301,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "Raw32",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 33,
              "docs": []
            },
            {
              "name": "BlakeTwo256",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "Sha256",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 35,
              "docs": []
            },
            {
              "name": "Keccak256",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "ShaThree256",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 273,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 0,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 274,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 1,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 275,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 2,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 276,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 3,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 277,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 5,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 278,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 6,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 279,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 7,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 280,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 8,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 281,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 9,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 282,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 10,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 283,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 11,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 284,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 12,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 285,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 13,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 286,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 14,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 287,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 15,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 288,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 17,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 289,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 18,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 290,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 19,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 291,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 21,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 292,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 22,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 293,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 23,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 294,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 24,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 295,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 25,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 296,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 26,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 297,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 27,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 298,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 28,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 299,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 29,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 300,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 30,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 301,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 31,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 302,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 271
        }
      },
      "docs": []
    }
  },
  {
    "id": 303,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 167
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 167,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 304,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 305
        }
      },
      "docs": []
    }
  },
  {
    "id": 305,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          272
        ]
      },
      "docs": []
    }
  },
  {
    "id": 306,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "BitFlags"
      ],
      "params": [
        {
          "name": "T",
          "type": 307
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 11,
              "typeName": "IdentityField",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 307,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "IdentityField"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Display",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Legal",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Web",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Riot",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "Email",
              "fields": [],
              "index": 16,
              "docs": []
            },
            {
              "name": "PgpFingerprint",
              "fields": [],
              "index": 32,
              "docs": []
            },
            {
              "name": "Image",
              "fields": [],
              "index": 64,
              "docs": []
            },
            {
              "name": "Twitter",
              "fields": [],
              "index": 128,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 308,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "Judgement"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unknown",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "FeePaid",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Reasonable",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "KnownGood",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "OutOfDate",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "LowQuality",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Erroneous",
              "fields": [],
              "index": 6,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 309,
    "type": {
      "path": [
        "pallet_society",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "bid",
              "fields": [
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::bid`]."
              ]
            },
            {
              "name": "unbid",
              "fields": [],
              "index": 1,
              "docs": [
                "See [`Pallet::unbid`]."
              ]
            },
            {
              "name": "vouch",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "tip",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::vouch`]."
              ]
            },
            {
              "name": "unvouch",
              "fields": [],
              "index": 3,
              "docs": [
                "See [`Pallet::unvouch`]."
              ]
            },
            {
              "name": "vote",
              "fields": [
                {
                  "name": "candidate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "approve",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "defender_vote",
              "fields": [
                {
                  "name": "approve",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::defender_vote`]."
              ]
            },
            {
              "name": "payout",
              "fields": [],
              "index": 6,
              "docs": [
                "See [`Pallet::payout`]."
              ]
            },
            {
              "name": "waive_repay",
              "fields": [
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::waive_repay`]."
              ]
            },
            {
              "name": "found_society",
              "fields": [
                {
                  "name": "founder",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "max_members",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_intake",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_strikes",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "candidate_deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "rules",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::found_society`]."
              ]
            },
            {
              "name": "dissolve",
              "fields": [],
              "index": 9,
              "docs": [
                "See [`Pallet::dissolve`]."
              ]
            },
            {
              "name": "judge_suspended_member",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "forgive",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::judge_suspended_member`]."
              ]
            },
            {
              "name": "set_parameters",
              "fields": [
                {
                  "name": "max_members",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_intake",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_strikes",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "candidate_deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::set_parameters`]."
              ]
            },
            {
              "name": "punish_skeptic",
              "fields": [],
              "index": 12,
              "docs": [
                "See [`Pallet::punish_skeptic`]."
              ]
            },
            {
              "name": "claim_membership",
              "fields": [],
              "index": 13,
              "docs": [
                "See [`Pallet::claim_membership`]."
              ]
            },
            {
              "name": "bestow_membership",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::bestow_membership`]."
              ]
            },
            {
              "name": "kick_candidate",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::kick_candidate`]."
              ]
            },
            {
              "name": "resign_candidacy",
              "fields": [],
              "index": 16,
              "docs": [
                "See [`Pallet::resign_candidacy`]."
              ]
            },
            {
              "name": "drop_candidate",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::drop_candidate`]."
              ]
            },
            {
              "name": "cleanup_candidacy",
              "fields": [
                {
                  "name": "candidate",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "max",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::cleanup_candidacy`]."
              ]
            },
            {
              "name": "cleanup_challenge",
              "fields": [
                {
                  "name": "challenge_round",
                  "type": 4,
                  "typeName": "RoundIndex",
                  "docs": []
                },
                {
                  "name": "max",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::cleanup_challenge`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 310,
    "type": {
      "path": [
        "pallet_recovery",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "as_recovered",
              "fields": [
                {
                  "name": "account",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::as_recovered`]."
              ]
            },
            {
              "name": "set_recovered",
              "fields": [
                {
                  "name": "lost",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "rescuer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_recovered`]."
              ]
            },
            {
              "name": "create_recovery",
              "fields": [
                {
                  "name": "friends",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "threshold",
                  "type": 101,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "delay_period",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::create_recovery`]."
              ]
            },
            {
              "name": "initiate_recovery",
              "fields": [
                {
                  "name": "account",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::initiate_recovery`]."
              ]
            },
            {
              "name": "vouch_recovery",
              "fields": [
                {
                  "name": "lost",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "rescuer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::vouch_recovery`]."
              ]
            },
            {
              "name": "claim_recovery",
              "fields": [
                {
                  "name": "account",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::claim_recovery`]."
              ]
            },
            {
              "name": "close_recovery",
              "fields": [
                {
                  "name": "rescuer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::close_recovery`]."
              ]
            },
            {
              "name": "remove_recovery",
              "fields": [],
              "index": 7,
              "docs": [
                "See [`Pallet::remove_recovery`]."
              ]
            },
            {
              "name": "cancel_recovered",
              "fields": [
                {
                  "name": "account",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::cancel_recovered`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 311,
    "type": {
      "path": [
        "pallet_vesting",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "vest",
              "fields": [],
              "index": 0,
              "docs": [
                "See [`Pallet::vest`]."
              ]
            },
            {
              "name": "vest_other",
              "fields": [
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::vest_other`]."
              ]
            },
            {
              "name": "vested_transfer",
              "fields": [
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "schedule",
                  "type": 312,
                  "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::vested_transfer`]."
              ]
            },
            {
              "name": "force_vested_transfer",
              "fields": [
                {
                  "name": "source",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "schedule",
                  "type": 312,
                  "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::force_vested_transfer`]."
              ]
            },
            {
              "name": "merge_schedules",
              "fields": [
                {
                  "name": "schedule1_index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "schedule2_index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::merge_schedules`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 312,
    "type": {
      "path": [
        "pallet_vesting",
        "vesting_info",
        "VestingInfo"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "locked",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "per_block",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "starting_block",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 313,
    "type": {
      "path": [
        "pallet_scheduler",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "schedule",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "maybe_periodic",
                  "type": 314,
                  "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "priority",
                  "type": 2,
                  "typeName": "schedule::Priority",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::schedule`]."
              ]
            },
            {
              "name": "cancel",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::cancel`]."
              ]
            },
            {
              "name": "schedule_named",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "TaskName",
                  "docs": []
                },
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "maybe_periodic",
                  "type": 314,
                  "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "priority",
                  "type": 2,
                  "typeName": "schedule::Priority",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::schedule_named`]."
              ]
            },
            {
              "name": "cancel_named",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "TaskName",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::cancel_named`]."
              ]
            },
            {
              "name": "schedule_after",
              "fields": [
                {
                  "name": "after",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "maybe_periodic",
                  "type": 314,
                  "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "priority",
                  "type": 2,
                  "typeName": "schedule::Priority",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::schedule_after`]."
              ]
            },
            {
              "name": "schedule_named_after",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "TaskName",
                  "docs": []
                },
                {
                  "name": "after",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "maybe_periodic",
                  "type": 314,
                  "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "priority",
                  "type": 2,
                  "typeName": "schedule::Priority",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::schedule_named_after`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 314,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 94
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 94,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 315,
    "type": {
      "path": [
        "pallet_glutton",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "initialize_pallet",
              "fields": [
                {
                  "name": "new_count",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "witness_count",
                  "type": 38,
                  "typeName": "Option<u32>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::initialize_pallet`]."
              ]
            },
            {
              "name": "set_compute",
              "fields": [
                {
                  "name": "compute",
                  "type": 97,
                  "typeName": "FixedU64",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_compute`]."
              ]
            },
            {
              "name": "set_storage",
              "fields": [
                {
                  "name": "storage",
                  "type": 97,
                  "typeName": "FixedU64",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_storage`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 316,
    "type": {
      "path": [
        "pallet_preimage",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "note_preimage",
              "fields": [
                {
                  "name": "bytes",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::note_preimage`]."
              ]
            },
            {
              "name": "unnote_preimage",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::unnote_preimage`]."
              ]
            },
            {
              "name": "request_preimage",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::request_preimage`]."
              ]
            },
            {
              "name": "unrequest_preimage",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unrequest_preimage`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 317,
    "type": {
      "path": [
        "pallet_proxy",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "proxy",
              "fields": [
                {
                  "name": "real",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "force_proxy_type",
                  "type": 318,
                  "typeName": "Option<T::ProxyType>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::proxy`]."
              ]
            },
            {
              "name": "add_proxy",
              "fields": [
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 100,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::add_proxy`]."
              ]
            },
            {
              "name": "remove_proxy",
              "fields": [
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 100,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::remove_proxy`]."
              ]
            },
            {
              "name": "remove_proxies",
              "fields": [],
              "index": 3,
              "docs": [
                "See [`Pallet::remove_proxies`]."
              ]
            },
            {
              "name": "create_pure",
              "fields": [
                {
                  "name": "proxy_type",
                  "type": 100,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 101,
                  "typeName": "u16",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::create_pure`]."
              ]
            },
            {
              "name": "kill_pure",
              "fields": [
                {
                  "name": "spawner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 100,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 101,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "height",
                  "type": 157,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "ext_index",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::kill_pure`]."
              ]
            },
            {
              "name": "announce",
              "fields": [
                {
                  "name": "real",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "CallHashOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::announce`]."
              ]
            },
            {
              "name": "remove_announcement",
              "fields": [
                {
                  "name": "real",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "CallHashOf<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::remove_announcement`]."
              ]
            },
            {
              "name": "reject_announcement",
              "fields": [
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "CallHashOf<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::reject_announcement`]."
              ]
            },
            {
              "name": "proxy_announced",
              "fields": [
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "real",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "force_proxy_type",
                  "type": 318,
                  "typeName": "Option<T::ProxyType>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::proxy_announced`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 318,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 100
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 100,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 319,
    "type": {
      "path": [
        "pallet_multisig",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "as_multi_threshold_1",
              "fields": [
                {
                  "name": "other_signatories",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::as_multi_threshold_1`]."
              ]
            },
            {
              "name": "as_multi",
              "fields": [
                {
                  "name": "threshold",
                  "type": 101,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "other_signatories",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "maybe_timepoint",
                  "type": 320,
                  "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::as_multi`]."
              ]
            },
            {
              "name": "approve_as_multi",
              "fields": [
                {
                  "name": "threshold",
                  "type": 101,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "other_signatories",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "maybe_timepoint",
                  "type": 320,
                  "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::approve_as_multi`]."
              ]
            },
            {
              "name": "cancel_as_multi",
              "fields": [
                {
                  "name": "threshold",
                  "type": 101,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "other_signatories",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "timepoint",
                  "type": 103,
                  "typeName": "Timepoint<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::cancel_as_multi`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 320,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 103
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 103,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 321,
    "type": {
      "path": [
        "pallet_bounties",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "propose_bounty",
              "fields": [
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "description",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::propose_bounty`]."
              ]
            },
            {
              "name": "approve_bounty",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::approve_bounty`]."
              ]
            },
            {
              "name": "propose_curator",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "curator",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "fee",
                  "type": 82,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::propose_curator`]."
              ]
            },
            {
              "name": "unassign_curator",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unassign_curator`]."
              ]
            },
            {
              "name": "accept_curator",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::accept_curator`]."
              ]
            },
            {
              "name": "award_bounty",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::award_bounty`]."
              ]
            },
            {
              "name": "claim_bounty",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::claim_bounty`]."
              ]
            },
            {
              "name": "close_bounty",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::close_bounty`]."
              ]
            },
            {
              "name": "extend_bounty_expiry",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "remark",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::extend_bounty_expiry`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 322,
    "type": {
      "path": [
        "pallet_tips",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "report_awesome",
              "fields": [
                {
                  "name": "reason",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::report_awesome`]."
              ]
            },
            {
              "name": "retract_tip",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::retract_tip`]."
              ]
            },
            {
              "name": "tip_new",
              "fields": [
                {
                  "name": "reason",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "tip_value",
                  "type": 82,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::tip_new`]."
              ]
            },
            {
              "name": "tip",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "tip_value",
                  "type": 82,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::tip`]."
              ]
            },
            {
              "name": "close_tip",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::close_tip`]."
              ]
            },
            {
              "name": "slash_tip",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::slash_tip`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 323,
    "type": {
      "path": [
        "pallet_assets",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "create",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "min_balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::create`]."
              ]
            },
            {
              "name": "force_create",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "is_sufficient",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "min_balance",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::force_create`]."
              ]
            },
            {
              "name": "start_destroy",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::start_destroy`]."
              ]
            },
            {
              "name": "destroy_accounts",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::destroy_accounts`]."
              ]
            },
            {
              "name": "destroy_approvals",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::destroy_approvals`]."
              ]
            },
            {
              "name": "finish_destroy",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::finish_destroy`]."
              ]
            },
            {
              "name": "mint",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::mint`]."
              ]
            },
            {
              "name": "burn",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::burn`]."
              ]
            },
            {
              "name": "transfer",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::transfer`]."
              ]
            },
            {
              "name": "transfer_keep_alive",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::transfer_keep_alive`]."
              ]
            },
            {
              "name": "force_transfer",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "source",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::force_transfer`]."
              ]
            },
            {
              "name": "freeze",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::freeze`]."
              ]
            },
            {
              "name": "thaw",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::thaw`]."
              ]
            },
            {
              "name": "freeze_asset",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::freeze_asset`]."
              ]
            },
            {
              "name": "thaw_asset",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::thaw_asset`]."
              ]
            },
            {
              "name": "transfer_ownership",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::transfer_ownership`]."
              ]
            },
            {
              "name": "set_team",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "See [`Pallet::set_team`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "symbol",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "decimals",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            },
            {
              "name": "clear_metadata",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::clear_metadata`]."
              ]
            },
            {
              "name": "force_set_metadata",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "symbol",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "decimals",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::force_set_metadata`]."
              ]
            },
            {
              "name": "force_clear_metadata",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "See [`Pallet::force_clear_metadata`]."
              ]
            },
            {
              "name": "force_asset_status",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "min_balance",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                },
                {
                  "name": "is_sufficient",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "See [`Pallet::force_asset_status`]."
              ]
            },
            {
              "name": "approve_transfer",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "See [`Pallet::approve_transfer`]."
              ]
            },
            {
              "name": "cancel_approval",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "See [`Pallet::cancel_approval`]."
              ]
            },
            {
              "name": "force_cancel_approval",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": [
                "See [`Pallet::force_cancel_approval`]."
              ]
            },
            {
              "name": "transfer_approved",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "destination",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": [
                "See [`Pallet::transfer_approved`]."
              ]
            },
            {
              "name": "touch",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": [
                "See [`Pallet::touch`]."
              ]
            },
            {
              "name": "refund",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "allow_burn",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 27,
              "docs": [
                "See [`Pallet::refund`]."
              ]
            },
            {
              "name": "set_min_balance",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "min_balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": [
                "See [`Pallet::set_min_balance`]."
              ]
            },
            {
              "name": "touch_other",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": [
                "See [`Pallet::touch_other`]."
              ]
            },
            {
              "name": "refund_other",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": [
                "See [`Pallet::refund_other`]."
              ]
            },
            {
              "name": "block",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": [
                "See [`Pallet::block`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 324,
    "type": {
      "path": [
        "pallet_assets",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "create",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "min_balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::create`]."
              ]
            },
            {
              "name": "force_create",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "is_sufficient",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "min_balance",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::force_create`]."
              ]
            },
            {
              "name": "start_destroy",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::start_destroy`]."
              ]
            },
            {
              "name": "destroy_accounts",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::destroy_accounts`]."
              ]
            },
            {
              "name": "destroy_approvals",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::destroy_approvals`]."
              ]
            },
            {
              "name": "finish_destroy",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::finish_destroy`]."
              ]
            },
            {
              "name": "mint",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::mint`]."
              ]
            },
            {
              "name": "burn",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::burn`]."
              ]
            },
            {
              "name": "transfer",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::transfer`]."
              ]
            },
            {
              "name": "transfer_keep_alive",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::transfer_keep_alive`]."
              ]
            },
            {
              "name": "force_transfer",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "source",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::force_transfer`]."
              ]
            },
            {
              "name": "freeze",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::freeze`]."
              ]
            },
            {
              "name": "thaw",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::thaw`]."
              ]
            },
            {
              "name": "freeze_asset",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::freeze_asset`]."
              ]
            },
            {
              "name": "thaw_asset",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::thaw_asset`]."
              ]
            },
            {
              "name": "transfer_ownership",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::transfer_ownership`]."
              ]
            },
            {
              "name": "set_team",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "See [`Pallet::set_team`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "symbol",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "decimals",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            },
            {
              "name": "clear_metadata",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::clear_metadata`]."
              ]
            },
            {
              "name": "force_set_metadata",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "symbol",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "decimals",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::force_set_metadata`]."
              ]
            },
            {
              "name": "force_clear_metadata",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "See [`Pallet::force_clear_metadata`]."
              ]
            },
            {
              "name": "force_asset_status",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "min_balance",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                },
                {
                  "name": "is_sufficient",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "See [`Pallet::force_asset_status`]."
              ]
            },
            {
              "name": "approve_transfer",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "See [`Pallet::approve_transfer`]."
              ]
            },
            {
              "name": "cancel_approval",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "See [`Pallet::cancel_approval`]."
              ]
            },
            {
              "name": "force_cancel_approval",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": [
                "See [`Pallet::force_cancel_approval`]."
              ]
            },
            {
              "name": "transfer_approved",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "destination",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": [
                "See [`Pallet::transfer_approved`]."
              ]
            },
            {
              "name": "touch",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": [
                "See [`Pallet::touch`]."
              ]
            },
            {
              "name": "refund",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "allow_burn",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 27,
              "docs": [
                "See [`Pallet::refund`]."
              ]
            },
            {
              "name": "set_min_balance",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "min_balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": [
                "See [`Pallet::set_min_balance`]."
              ]
            },
            {
              "name": "touch_other",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": [
                "See [`Pallet::touch_other`]."
              ]
            },
            {
              "name": "refund_other",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": [
                "See [`Pallet::refund_other`]."
              ]
            },
            {
              "name": "block",
              "fields": [
                {
                  "name": "id",
                  "type": 157,
                  "typeName": "T::AssetIdParameter",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": [
                "See [`Pallet::block`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 325,
    "type": {
      "path": [
        "pallet_lottery",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "buy_ticket",
              "fields": [
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::buy_ticket`]."
              ]
            },
            {
              "name": "set_calls",
              "fields": [
                {
                  "name": "calls",
                  "type": 147,
                  "typeName": "Vec<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_calls`]."
              ]
            },
            {
              "name": "start_lottery",
              "fields": [
                {
                  "name": "price",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "length",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "repeat",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::start_lottery`]."
              ]
            },
            {
              "name": "stop_repeat",
              "fields": [],
              "index": 3,
              "docs": [
                "See [`Pallet::stop_repeat`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 326,
    "type": {
      "path": [
        "pallet_nis",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "place_bid",
              "fields": [
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::place_bid`]."
              ]
            },
            {
              "name": "retract_bid",
              "fields": [
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::retract_bid`]."
              ]
            },
            {
              "name": "fund_deficit",
              "fields": [],
              "index": 2,
              "docs": [
                "See [`Pallet::fund_deficit`]."
              ]
            },
            {
              "name": "thaw_private",
              "fields": [
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ReceiptIndex",
                  "docs": []
                },
                {
                  "name": "maybe_proportion",
                  "type": 327,
                  "typeName": "Option<Perquintill>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::thaw_private`]."
              ]
            },
            {
              "name": "thaw_communal",
              "fields": [
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ReceiptIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::thaw_communal`]."
              ]
            },
            {
              "name": "communify",
              "fields": [
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ReceiptIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::communify`]."
              ]
            },
            {
              "name": "privatize",
              "fields": [
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ReceiptIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::privatize`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 327,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 111
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 111,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 328,
    "type": {
      "path": [
        "pallet_uniques",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "create",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::create`]."
              ]
            },
            {
              "name": "force_create",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "free_holding",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::force_create`]."
              ]
            },
            {
              "name": "destroy",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "witness",
                  "type": 329,
                  "typeName": "DestroyWitness",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::destroy`]."
              ]
            },
            {
              "name": "mint",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::mint`]."
              ]
            },
            {
              "name": "burn",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "check_owner",
                  "type": 330,
                  "typeName": "Option<AccountIdLookupOf<T>>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::burn`]."
              ]
            },
            {
              "name": "transfer",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::transfer`]."
              ]
            },
            {
              "name": "redeposit",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "items",
                  "type": 114,
                  "typeName": "Vec<T::ItemId>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::redeposit`]."
              ]
            },
            {
              "name": "freeze",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::freeze`]."
              ]
            },
            {
              "name": "thaw",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::thaw`]."
              ]
            },
            {
              "name": "freeze_collection",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::freeze_collection`]."
              ]
            },
            {
              "name": "thaw_collection",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::thaw_collection`]."
              ]
            },
            {
              "name": "transfer_ownership",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::transfer_ownership`]."
              ]
            },
            {
              "name": "set_team",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::set_team`]."
              ]
            },
            {
              "name": "approve_transfer",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::approve_transfer`]."
              ]
            },
            {
              "name": "cancel_approval",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "maybe_check_delegate",
                  "type": 330,
                  "typeName": "Option<AccountIdLookupOf<T>>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::cancel_approval`]."
              ]
            },
            {
              "name": "force_item_status",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "free_holding",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::force_item_status`]."
              ]
            },
            {
              "name": "set_attribute",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 115,
                  "typeName": "BoundedVec<u8, T::KeyLimit>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 116,
                  "typeName": "BoundedVec<u8, T::ValueLimit>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "See [`Pallet::set_attribute`]."
              ]
            },
            {
              "name": "clear_attribute",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 115,
                  "typeName": "BoundedVec<u8, T::KeyLimit>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::clear_attribute`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 113,
                  "typeName": "BoundedVec<u8, T::StringLimit>",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            },
            {
              "name": "clear_metadata",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::clear_metadata`]."
              ]
            },
            {
              "name": "set_collection_metadata",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 113,
                  "typeName": "BoundedVec<u8, T::StringLimit>",
                  "docs": []
                },
                {
                  "name": "is_frozen",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "See [`Pallet::set_collection_metadata`]."
              ]
            },
            {
              "name": "clear_collection_metadata",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "See [`Pallet::clear_collection_metadata`]."
              ]
            },
            {
              "name": "set_accept_ownership",
              "fields": [
                {
                  "name": "maybe_collection",
                  "type": 38,
                  "typeName": "Option<T::CollectionId>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "See [`Pallet::set_accept_ownership`]."
              ]
            },
            {
              "name": "set_collection_max_supply",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "max_supply",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "See [`Pallet::set_collection_max_supply`]."
              ]
            },
            {
              "name": "set_price",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "price",
                  "type": 331,
                  "typeName": "Option<ItemPrice<T, I>>",
                  "docs": []
                },
                {
                  "name": "whitelisted_buyer",
                  "type": 330,
                  "typeName": "Option<AccountIdLookupOf<T>>",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": [
                "See [`Pallet::set_price`]."
              ]
            },
            {
              "name": "buy_item",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "bid_price",
                  "type": 6,
                  "typeName": "ItemPrice<T, I>",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": [
                "See [`Pallet::buy_item`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 329,
    "type": {
      "path": [
        "pallet_uniques",
        "types",
        "DestroyWitness"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "items",
              "type": 157,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "item_metadatas",
              "type": 157,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "attributes",
              "type": 157,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 330,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 166
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 166,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 331,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 332,
    "type": {
      "path": [
        "pallet_nfts",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "create",
              "fields": [
                {
                  "name": "admin",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "config",
                  "type": 333,
                  "typeName": "CollectionConfigFor<T, I>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::create`]."
              ]
            },
            {
              "name": "force_create",
              "fields": [
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "config",
                  "type": 333,
                  "typeName": "CollectionConfigFor<T, I>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::force_create`]."
              ]
            },
            {
              "name": "destroy",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "witness",
                  "type": 340,
                  "typeName": "DestroyWitness",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::destroy`]."
              ]
            },
            {
              "name": "mint",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "mint_to",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "witness_data",
                  "type": 341,
                  "typeName": "Option<MintWitness<T::ItemId, DepositBalanceOf<T, I>>>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::mint`]."
              ]
            },
            {
              "name": "force_mint",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "mint_to",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "item_config",
                  "type": 343,
                  "typeName": "ItemConfig",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::force_mint`]."
              ]
            },
            {
              "name": "burn",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::burn`]."
              ]
            },
            {
              "name": "transfer",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::transfer`]."
              ]
            },
            {
              "name": "redeposit",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "items",
                  "type": 114,
                  "typeName": "Vec<T::ItemId>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::redeposit`]."
              ]
            },
            {
              "name": "lock_item_transfer",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::lock_item_transfer`]."
              ]
            },
            {
              "name": "unlock_item_transfer",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::unlock_item_transfer`]."
              ]
            },
            {
              "name": "lock_collection",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "lock_settings",
                  "type": 334,
                  "typeName": "CollectionSettings",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::lock_collection`]."
              ]
            },
            {
              "name": "transfer_ownership",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::transfer_ownership`]."
              ]
            },
            {
              "name": "set_team",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "issuer",
                  "type": 330,
                  "typeName": "Option<AccountIdLookupOf<T>>",
                  "docs": []
                },
                {
                  "name": "admin",
                  "type": 330,
                  "typeName": "Option<AccountIdLookupOf<T>>",
                  "docs": []
                },
                {
                  "name": "freezer",
                  "type": 330,
                  "typeName": "Option<AccountIdLookupOf<T>>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::set_team`]."
              ]
            },
            {
              "name": "force_collection_owner",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::force_collection_owner`]."
              ]
            },
            {
              "name": "force_collection_config",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "config",
                  "type": 333,
                  "typeName": "CollectionConfigFor<T, I>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::force_collection_config`]."
              ]
            },
            {
              "name": "approve_transfer",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "maybe_deadline",
                  "type": 38,
                  "typeName": "Option<BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::approve_transfer`]."
              ]
            },
            {
              "name": "cancel_approval",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "See [`Pallet::cancel_approval`]."
              ]
            },
            {
              "name": "clear_all_transfer_approvals",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::clear_all_transfer_approvals`]."
              ]
            },
            {
              "name": "lock_item_properties",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "lock_metadata",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "lock_attributes",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::lock_item_properties`]."
              ]
            },
            {
              "name": "set_attribute",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "namespace",
                  "type": 119,
                  "typeName": "AttributeNamespace<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 116,
                  "typeName": "BoundedVec<u8, T::KeyLimit>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 118,
                  "typeName": "BoundedVec<u8, T::ValueLimit>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::set_attribute`]."
              ]
            },
            {
              "name": "force_set_attribute",
              "fields": [
                {
                  "name": "set_as",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "namespace",
                  "type": 119,
                  "typeName": "AttributeNamespace<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 116,
                  "typeName": "BoundedVec<u8, T::KeyLimit>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 118,
                  "typeName": "BoundedVec<u8, T::ValueLimit>",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "See [`Pallet::force_set_attribute`]."
              ]
            },
            {
              "name": "clear_attribute",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "namespace",
                  "type": 119,
                  "typeName": "AttributeNamespace<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 116,
                  "typeName": "BoundedVec<u8, T::KeyLimit>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "See [`Pallet::clear_attribute`]."
              ]
            },
            {
              "name": "approve_item_attributes",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "See [`Pallet::approve_item_attributes`]."
              ]
            },
            {
              "name": "cancel_item_attributes_approval",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "delegate",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "witness",
                  "type": 344,
                  "typeName": "CancelAttributesApprovalWitness",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "See [`Pallet::cancel_item_attributes_approval`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 118,
                  "typeName": "BoundedVec<u8, T::StringLimit>",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            },
            {
              "name": "clear_metadata",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": [
                "See [`Pallet::clear_metadata`]."
              ]
            },
            {
              "name": "set_collection_metadata",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 118,
                  "typeName": "BoundedVec<u8, T::StringLimit>",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": [
                "See [`Pallet::set_collection_metadata`]."
              ]
            },
            {
              "name": "clear_collection_metadata",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                }
              ],
              "index": 27,
              "docs": [
                "See [`Pallet::clear_collection_metadata`]."
              ]
            },
            {
              "name": "set_accept_ownership",
              "fields": [
                {
                  "name": "maybe_collection",
                  "type": 38,
                  "typeName": "Option<T::CollectionId>",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": [
                "See [`Pallet::set_accept_ownership`]."
              ]
            },
            {
              "name": "set_collection_max_supply",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "max_supply",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": [
                "See [`Pallet::set_collection_max_supply`]."
              ]
            },
            {
              "name": "update_mint_settings",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "mint_settings",
                  "type": 336,
                  "typeName": "MintSettings<BalanceOf<T, I>, BlockNumberFor<T>, T::CollectionId>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": [
                "See [`Pallet::update_mint_settings`]."
              ]
            },
            {
              "name": "set_price",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "price",
                  "type": 331,
                  "typeName": "Option<ItemPrice<T, I>>",
                  "docs": []
                },
                {
                  "name": "whitelisted_buyer",
                  "type": 330,
                  "typeName": "Option<AccountIdLookupOf<T>>",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": [
                "See [`Pallet::set_price`]."
              ]
            },
            {
              "name": "buy_item",
              "fields": [
                {
                  "name": "collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "bid_price",
                  "type": 6,
                  "typeName": "ItemPrice<T, I>",
                  "docs": []
                }
              ],
              "index": 32,
              "docs": [
                "See [`Pallet::buy_item`]."
              ]
            },
            {
              "name": "pay_tips",
              "fields": [
                {
                  "name": "tips",
                  "type": 345,
                  "typeName": "BoundedVec<ItemTipOf<T, I>, T::MaxTips>",
                  "docs": []
                }
              ],
              "index": 33,
              "docs": [
                "See [`Pallet::pay_tips`]."
              ]
            },
            {
              "name": "create_swap",
              "fields": [
                {
                  "name": "offered_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "offered_item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "desired_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "maybe_desired_item",
                  "type": 38,
                  "typeName": "Option<T::ItemId>",
                  "docs": []
                },
                {
                  "name": "maybe_price",
                  "type": 120,
                  "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                  "docs": []
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": [
                "See [`Pallet::create_swap`]."
              ]
            },
            {
              "name": "cancel_swap",
              "fields": [
                {
                  "name": "offered_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "offered_item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                }
              ],
              "index": 35,
              "docs": [
                "See [`Pallet::cancel_swap`]."
              ]
            },
            {
              "name": "claim_swap",
              "fields": [
                {
                  "name": "send_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "send_item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "receive_collection",
                  "type": 4,
                  "typeName": "T::CollectionId",
                  "docs": []
                },
                {
                  "name": "receive_item",
                  "type": 4,
                  "typeName": "T::ItemId",
                  "docs": []
                },
                {
                  "name": "witness_price",
                  "type": 120,
                  "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                  "docs": []
                }
              ],
              "index": 36,
              "docs": [
                "See [`Pallet::claim_swap`]."
              ]
            },
            {
              "name": "mint_pre_signed",
              "fields": [
                {
                  "name": "mint_data",
                  "type": 348,
                  "typeName": "Box<PreSignedMintOf<T, I>>",
                  "docs": []
                },
                {
                  "name": "signature",
                  "type": 349,
                  "typeName": "T::OffchainSignature",
                  "docs": []
                },
                {
                  "name": "signer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": [
                "See [`Pallet::mint_pre_signed`]."
              ]
            },
            {
              "name": "set_attributes_pre_signed",
              "fields": [
                {
                  "name": "data",
                  "type": 352,
                  "typeName": "PreSignedAttributesOf<T, I>",
                  "docs": []
                },
                {
                  "name": "signature",
                  "type": 349,
                  "typeName": "T::OffchainSignature",
                  "docs": []
                },
                {
                  "name": "signer",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 38,
              "docs": [
                "See [`Pallet::set_attributes_pre_signed`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 333,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "CollectionConfig"
      ],
      "params": [
        {
          "name": "Price",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "CollectionId",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "settings",
              "type": 334,
              "typeName": "CollectionSettings",
              "docs": []
            },
            {
              "name": "max_supply",
              "type": 38,
              "typeName": "Option<u32>",
              "docs": []
            },
            {
              "name": "mint_settings",
              "type": 336,
              "typeName": "MintSettings<Price, BlockNumber, CollectionId>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 334,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "BitFlags"
      ],
      "params": [
        {
          "name": "T",
          "type": 335
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 11,
              "typeName": "CollectionSetting",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 335,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "CollectionSetting"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TransferableItems",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "UnlockedMetadata",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "UnlockedAttributes",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "UnlockedMaxSupply",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "DepositRequired",
              "fields": [],
              "index": 16,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 336,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "MintSettings"
      ],
      "params": [
        {
          "name": "Price",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "CollectionId",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "mint_type",
              "type": 337,
              "typeName": "MintType<CollectionId>",
              "docs": []
            },
            {
              "name": "price",
              "type": 331,
              "typeName": "Option<Price>",
              "docs": []
            },
            {
              "name": "start_block",
              "type": 38,
              "typeName": "Option<BlockNumber>",
              "docs": []
            },
            {
              "name": "end_block",
              "type": 38,
              "typeName": "Option<BlockNumber>",
              "docs": []
            },
            {
              "name": "default_item_settings",
              "type": 338,
              "typeName": "ItemSettings",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 337,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "MintType"
      ],
      "params": [
        {
          "name": "CollectionId",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Issuer",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Public",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "HolderOf",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "CollectionId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 338,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "BitFlags"
      ],
      "params": [
        {
          "name": "T",
          "type": 339
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 11,
              "typeName": "ItemSetting",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 339,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "ItemSetting"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Transferable",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "UnlockedMetadata",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "UnlockedAttributes",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 340,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "DestroyWitness"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "item_metadatas",
              "type": 157,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "item_configs",
              "type": 157,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "attributes",
              "type": 157,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 341,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 342
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 342,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 342,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "MintWitness"
      ],
      "params": [
        {
          "name": "ItemId",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "owned_item",
              "type": 38,
              "typeName": "Option<ItemId>",
              "docs": []
            },
            {
              "name": "mint_price",
              "type": 331,
              "typeName": "Option<Balance>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 343,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "ItemConfig"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "settings",
              "type": 338,
              "typeName": "ItemSettings",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 344,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "CancelAttributesApprovalWitness"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account_attributes",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 345,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 346
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 347,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 346,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "ItemTip"
      ],
      "params": [
        {
          "name": "CollectionId",
          "type": 4
        },
        {
          "name": "ItemId",
          "type": 4
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Amount",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "collection",
              "type": 4,
              "typeName": "CollectionId",
              "docs": []
            },
            {
              "name": "item",
              "type": 4,
              "typeName": "ItemId",
              "docs": []
            },
            {
              "name": "receiver",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Amount",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 347,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 346
        }
      },
      "docs": []
    }
  },
  {
    "id": 348,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "PreSignedMint"
      ],
      "params": [
        {
          "name": "CollectionId",
          "type": 4
        },
        {
          "name": "ItemId",
          "type": 4
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Deadline",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "collection",
              "type": 4,
              "typeName": "CollectionId",
              "docs": []
            },
            {
              "name": "item",
              "type": 4,
              "typeName": "ItemId",
              "docs": []
            },
            {
              "name": "attributes",
              "type": 143,
              "typeName": "Vec<(Vec<u8>, Vec<u8>)>",
              "docs": []
            },
            {
              "name": "metadata",
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            },
            {
              "name": "only_account",
              "type": 42,
              "typeName": "Option<AccountId>",
              "docs": []
            },
            {
              "name": "deadline",
              "type": 4,
              "typeName": "Deadline",
              "docs": []
            },
            {
              "name": "mint_price",
              "type": 331,
              "typeName": "Option<Balance>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 349,
    "type": {
      "path": [
        "sp_runtime",
        "MultiSignature"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ed25519",
              "fields": [
                {
                  "name": null,
                  "type": 252,
                  "typeName": "ed25519::Signature",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Sr25519",
              "fields": [
                {
                  "name": null,
                  "type": 267,
                  "typeName": "sr25519::Signature",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Ecdsa",
              "fields": [
                {
                  "name": null,
                  "type": 350,
                  "typeName": "ecdsa::Signature",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 350,
    "type": {
      "path": [
        "sp_core",
        "ecdsa",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 351,
              "typeName": "[u8; 65]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 351,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 65,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 352,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "PreSignedAttributes"
      ],
      "params": [
        {
          "name": "CollectionId",
          "type": 4
        },
        {
          "name": "ItemId",
          "type": 4
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Deadline",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "collection",
              "type": 4,
              "typeName": "CollectionId",
              "docs": []
            },
            {
              "name": "item",
              "type": 4,
              "typeName": "ItemId",
              "docs": []
            },
            {
              "name": "attributes",
              "type": 143,
              "typeName": "Vec<(Vec<u8>, Vec<u8>)>",
              "docs": []
            },
            {
              "name": "namespace",
              "type": 119,
              "typeName": "AttributeNamespace<AccountId>",
              "docs": []
            },
            {
              "name": "deadline",
              "type": 4,
              "typeName": "Deadline",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 353,
    "type": {
      "path": [
        "pallet_nft_fractionalization",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "fractionalize",
              "fields": [
                {
                  "name": "nft_collection_id",
                  "type": 4,
                  "typeName": "T::NftCollectionId",
                  "docs": []
                },
                {
                  "name": "nft_id",
                  "type": 4,
                  "typeName": "T::NftId",
                  "docs": []
                },
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "AssetIdOf<T>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "fractions",
                  "type": 6,
                  "typeName": "AssetBalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::fractionalize`]."
              ]
            },
            {
              "name": "unify",
              "fields": [
                {
                  "name": "nft_collection_id",
                  "type": 4,
                  "typeName": "T::NftCollectionId",
                  "docs": []
                },
                {
                  "name": "nft_id",
                  "type": 4,
                  "typeName": "T::NftId",
                  "docs": []
                },
                {
                  "name": "asset_id",
                  "type": 4,
                  "typeName": "AssetIdOf<T>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::unify`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 354,
    "type": {
      "path": [
        "pallet_salary",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "init",
              "fields": [],
              "index": 0,
              "docs": [
                "See [`Pallet::init`]."
              ]
            },
            {
              "name": "bump",
              "fields": [],
              "index": 1,
              "docs": [
                "See [`Pallet::bump`]."
              ]
            },
            {
              "name": "induct",
              "fields": [],
              "index": 2,
              "docs": [
                "See [`Pallet::induct`]."
              ]
            },
            {
              "name": "register",
              "fields": [],
              "index": 3,
              "docs": [
                "See [`Pallet::register`]."
              ]
            },
            {
              "name": "payout",
              "fields": [],
              "index": 4,
              "docs": [
                "See [`Pallet::payout`]."
              ]
            },
            {
              "name": "payout_other",
              "fields": [
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::payout_other`]."
              ]
            },
            {
              "name": "check_payment",
              "fields": [],
              "index": 6,
              "docs": [
                "See [`Pallet::check_payment`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 355,
    "type": {
      "path": [
        "pallet_core_fellowship",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "bump",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::bump`]."
              ]
            },
            {
              "name": "set_params",
              "fields": [
                {
                  "name": "params",
                  "type": 127,
                  "typeName": "Box<ParamsOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_params`]."
              ]
            },
            {
              "name": "set_active",
              "fields": [
                {
                  "name": "is_active",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_active`]."
              ]
            },
            {
              "name": "approve",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "at_rank",
                  "type": 101,
                  "typeName": "RankOf<T, I>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::approve`]."
              ]
            },
            {
              "name": "induct",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::induct`]."
              ]
            },
            {
              "name": "promote",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to_rank",
                  "type": 101,
                  "typeName": "RankOf<T, I>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::promote`]."
              ]
            },
            {
              "name": "offboard",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::offboard`]."
              ]
            },
            {
              "name": "submit_evidence",
              "fields": [
                {
                  "name": "wish",
                  "type": 130,
                  "typeName": "Wish",
                  "docs": []
                },
                {
                  "name": "evidence",
                  "type": 131,
                  "typeName": "Evidence<T, I>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::submit_evidence`]."
              ]
            },
            {
              "name": "import",
              "fields": [],
              "index": 8,
              "docs": [
                "See [`Pallet::import`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 356,
    "type": {
      "path": [
        "pallet_transaction_storage",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "store",
              "fields": [
                {
                  "name": "data",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::store`]."
              ]
            },
            {
              "name": "renew",
              "fields": [
                {
                  "name": "block",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::renew`]."
              ]
            },
            {
              "name": "check_proof",
              "fields": [
                {
                  "name": "proof",
                  "type": 357,
                  "typeName": "TransactionStorageProof",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::check_proof`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 357,
    "type": {
      "path": [
        "sp_transaction_storage_proof",
        "TransactionStorageProof"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "chunk",
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            },
            {
              "name": "proof",
              "type": 145,
              "typeName": "Vec<Vec<u8>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 358,
    "type": {
      "path": [
        "pallet_bags_list",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "rebag",
              "fields": [
                {
                  "name": "dislocated",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::rebag`]."
              ]
            },
            {
              "name": "put_in_front_of",
              "fields": [
                {
                  "name": "lighter",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::put_in_front_of`]."
              ]
            },
            {
              "name": "put_in_front_of_other",
              "fields": [
                {
                  "name": "heavier",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "lighter",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::put_in_front_of_other`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 359,
    "type": {
      "path": [
        "pallet_state_trie_migration",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "control_auto_migration",
              "fields": [
                {
                  "name": "maybe_config",
                  "type": 360,
                  "typeName": "Option<MigrationLimits>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::control_auto_migration`]."
              ]
            },
            {
              "name": "continue_migrate",
              "fields": [
                {
                  "name": "limits",
                  "type": 361,
                  "typeName": "MigrationLimits",
                  "docs": []
                },
                {
                  "name": "real_size_upper",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "witness_task",
                  "type": 362,
                  "typeName": "MigrationTask<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::continue_migrate`]."
              ]
            },
            {
              "name": "migrate_custom_top",
              "fields": [
                {
                  "name": "keys",
                  "type": 145,
                  "typeName": "Vec<Vec<u8>>",
                  "docs": []
                },
                {
                  "name": "witness_size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::migrate_custom_top`]."
              ]
            },
            {
              "name": "migrate_custom_child",
              "fields": [
                {
                  "name": "root",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "child_keys",
                  "type": 145,
                  "typeName": "Vec<Vec<u8>>",
                  "docs": []
                },
                {
                  "name": "total_size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::migrate_custom_child`]."
              ]
            },
            {
              "name": "set_signed_max_limits",
              "fields": [
                {
                  "name": "limits",
                  "type": 361,
                  "typeName": "MigrationLimits",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::set_signed_max_limits`]."
              ]
            },
            {
              "name": "force_set_progress",
              "fields": [
                {
                  "name": "progress_top",
                  "type": 363,
                  "typeName": "ProgressOf<T>",
                  "docs": []
                },
                {
                  "name": "progress_child",
                  "type": 363,
                  "typeName": "ProgressOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::force_set_progress`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 360,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 361
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 361,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 361,
    "type": {
      "path": [
        "pallet_state_trie_migration",
        "pallet",
        "MigrationLimits"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "item",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 362,
    "type": {
      "path": [
        "pallet_state_trie_migration",
        "pallet",
        "MigrationTask"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "progress_top",
              "type": 363,
              "typeName": "ProgressOf<T>",
              "docs": []
            },
            {
              "name": "progress_child",
              "type": 363,
              "typeName": "ProgressOf<T>",
              "docs": []
            },
            {
              "name": "size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "top_items",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "child_items",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 363,
    "type": {
      "path": [
        "pallet_state_trie_migration",
        "pallet",
        "Progress"
      ],
      "params": [
        {
          "name": "MaxKeyLen",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ToStart",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "LastKey",
              "fields": [
                {
                  "name": null,
                  "type": 364,
                  "typeName": "BoundedVec<u8, MaxKeyLen>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Complete",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 364,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 365,
    "type": {
      "path": [
        "pallet_child_bounties",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "add_child_bounty",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "description",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::add_child_bounty`]."
              ]
            },
            {
              "name": "propose_curator",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "curator",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "fee",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::propose_curator`]."
              ]
            },
            {
              "name": "accept_curator",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::accept_curator`]."
              ]
            },
            {
              "name": "unassign_curator",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unassign_curator`]."
              ]
            },
            {
              "name": "award_child_bounty",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::award_child_bounty`]."
              ]
            },
            {
              "name": "claim_child_bounty",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::claim_child_bounty`]."
              ]
            },
            {
              "name": "close_child_bounty",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 157,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::close_child_bounty`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 366,
    "type": {
      "path": [
        "pallet_referenda",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "submit",
              "fields": [
                {
                  "name": "proposal_origin",
                  "type": 148,
                  "typeName": "Box<PalletsOriginOf<T>>",
                  "docs": []
                },
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T, I>",
                  "docs": []
                },
                {
                  "name": "enactment_moment",
                  "type": 367,
                  "typeName": "DispatchTime<BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::submit`]."
              ]
            },
            {
              "name": "place_decision_deposit",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::place_decision_deposit`]."
              ]
            },
            {
              "name": "refund_decision_deposit",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::refund_decision_deposit`]."
              ]
            },
            {
              "name": "cancel",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::cancel`]."
              ]
            },
            {
              "name": "kill",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::kill`]."
              ]
            },
            {
              "name": "nudge_referendum",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::nudge_referendum`]."
              ]
            },
            {
              "name": "one_fewer_deciding",
              "fields": [
                {
                  "name": "track",
                  "type": 101,
                  "typeName": "TrackIdOf<T, I>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::one_fewer_deciding`]."
              ]
            },
            {
              "name": "refund_submission_deposit",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::refund_submission_deposit`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                },
                {
                  "name": "maybe_hash",
                  "type": 240,
                  "typeName": "Option<PreimageHash>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 367,
    "type": {
      "path": [
        "frame_support",
        "traits",
        "schedule",
        "DispatchTime"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "At",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "After",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 368,
    "type": {
      "path": [
        "pallet_remark",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "store",
              "fields": [
                {
                  "name": "remark",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::store`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 369,
    "type": {
      "path": [
        "pallet_root_testing",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "fill_block",
              "fields": [
                {
                  "name": "ratio",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::fill_block`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 370,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "vote",
              "fields": [
                {
                  "name": "poll_index",
                  "type": 157,
                  "typeName": "PollIndexOf<T, I>",
                  "docs": []
                },
                {
                  "name": "vote",
                  "type": 371,
                  "typeName": "AccountVote<BalanceOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "delegate",
              "fields": [
                {
                  "name": "class",
                  "type": 101,
                  "typeName": "ClassOf<T, I>",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "conviction",
                  "type": 373,
                  "typeName": "Conviction",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::delegate`]."
              ]
            },
            {
              "name": "undelegate",
              "fields": [
                {
                  "name": "class",
                  "type": 101,
                  "typeName": "ClassOf<T, I>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::undelegate`]."
              ]
            },
            {
              "name": "unlock",
              "fields": [
                {
                  "name": "class",
                  "type": 101,
                  "typeName": "ClassOf<T, I>",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unlock`]."
              ]
            },
            {
              "name": "remove_vote",
              "fields": [
                {
                  "name": "class",
                  "type": 132,
                  "typeName": "Option<ClassOf<T, I>>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "PollIndexOf<T, I>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::remove_vote`]."
              ]
            },
            {
              "name": "remove_other_vote",
              "fields": [
                {
                  "name": "target",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "class",
                  "type": 101,
                  "typeName": "ClassOf<T, I>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "PollIndexOf<T, I>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::remove_other_vote`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 371,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "AccountVote"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Standard",
              "fields": [
                {
                  "name": "vote",
                  "type": 372,
                  "typeName": "Vote",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Split",
              "fields": [
                {
                  "name": "aye",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "nay",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "SplitAbstain",
              "fields": [
                {
                  "name": "aye",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "nay",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "abstain",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 372,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "Vote"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 2,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 373,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "conviction",
        "Conviction"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Locked1x",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Locked2x",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Locked3x",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "Locked4x",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Locked5x",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Locked6x",
              "fields": [],
              "index": 6,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 374,
    "type": {
      "path": [
        "pallet_whitelist",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "whitelist_call",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::whitelist_call`]."
              ]
            },
            {
              "name": "remove_whitelisted_call",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::remove_whitelisted_call`]."
              ]
            },
            {
              "name": "dispatch_whitelisted_call",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                },
                {
                  "name": "call_encoded_len",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "call_weight_witness",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::dispatch_whitelisted_call`]."
              ]
            },
            {
              "name": "dispatch_whitelisted_call_with_preimage",
              "fields": [
                {
                  "name": "call",
                  "type": 141,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::dispatch_whitelisted_call_with_preimage`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 375,
    "type": {
      "path": [
        "pallet_collective",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "set_members",
              "fields": [
                {
                  "name": "new_members",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "prime",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "old_count",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::set_members`]."
              ]
            },
            {
              "name": "execute",
              "fields": [
                {
                  "name": "proposal",
                  "type": 141,
                  "typeName": "Box<<T as Config<I>>::Proposal>",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::execute`]."
              ]
            },
            {
              "name": "propose",
              "fields": [
                {
                  "name": "threshold",
                  "type": 157,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": "proposal",
                  "type": 141,
                  "typeName": "Box<<T as Config<I>>::Proposal>",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::propose`]."
              ]
            },
            {
              "name": "vote",
              "fields": [
                {
                  "name": "proposal",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "approve",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "disapprove_proposal",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::disapprove_proposal`]."
              ]
            },
            {
              "name": "close",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "proposal_weight_bound",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::close`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 376,
    "type": {
      "path": [
        "pallet_alliance",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "propose",
              "fields": [
                {
                  "name": "threshold",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "proposal",
                  "type": 141,
                  "typeName": "Box<<T as Config<I>>::Proposal>",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::propose`]."
              ]
            },
            {
              "name": "vote",
              "fields": [
                {
                  "name": "proposal",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "approve",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "init_members",
              "fields": [
                {
                  "name": "fellows",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "allies",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::init_members`]."
              ]
            },
            {
              "name": "disband",
              "fields": [
                {
                  "name": "witness",
                  "type": 377,
                  "typeName": "DisbandWitness",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::disband`]."
              ]
            },
            {
              "name": "set_rule",
              "fields": [
                {
                  "name": "rule",
                  "type": 378,
                  "typeName": "Cid",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::set_rule`]."
              ]
            },
            {
              "name": "announce",
              "fields": [
                {
                  "name": "announcement",
                  "type": 378,
                  "typeName": "Cid",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::announce`]."
              ]
            },
            {
              "name": "remove_announcement",
              "fields": [
                {
                  "name": "announcement",
                  "type": 378,
                  "typeName": "Cid",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::remove_announcement`]."
              ]
            },
            {
              "name": "join_alliance",
              "fields": [],
              "index": 8,
              "docs": [
                "See [`Pallet::join_alliance`]."
              ]
            },
            {
              "name": "nominate_ally",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::nominate_ally`]."
              ]
            },
            {
              "name": "elevate_ally",
              "fields": [
                {
                  "name": "ally",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::elevate_ally`]."
              ]
            },
            {
              "name": "give_retirement_notice",
              "fields": [],
              "index": 11,
              "docs": [
                "See [`Pallet::give_retirement_notice`]."
              ]
            },
            {
              "name": "retire",
              "fields": [],
              "index": 12,
              "docs": [
                "See [`Pallet::retire`]."
              ]
            },
            {
              "name": "kick_member",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::kick_member`]."
              ]
            },
            {
              "name": "add_unscrupulous_items",
              "fields": [
                {
                  "name": "items",
                  "type": 382,
                  "typeName": "Vec<UnscrupulousItemOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::add_unscrupulous_items`]."
              ]
            },
            {
              "name": "remove_unscrupulous_items",
              "fields": [
                {
                  "name": "items",
                  "type": 382,
                  "typeName": "Vec<UnscrupulousItemOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::remove_unscrupulous_items`]."
              ]
            },
            {
              "name": "close",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 157,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "proposal_weight_bound",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "length_bound",
                  "type": 157,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "See [`Pallet::close`]."
              ]
            },
            {
              "name": "abdicate_fellow_status",
              "fields": [],
              "index": 17,
              "docs": [
                "See [`Pallet::abdicate_fellow_status`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 377,
    "type": {
      "path": [
        "pallet_alliance",
        "types",
        "DisbandWitness"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "fellow_members",
              "type": 157,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "ally_members",
              "type": 157,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 378,
    "type": {
      "path": [
        "pallet_alliance",
        "types",
        "Cid"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "version",
              "type": 379,
              "typeName": "Version",
              "docs": []
            },
            {
              "name": "codec",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "hash",
              "type": 380,
              "typeName": "Multihash",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 379,
    "type": {
      "path": [
        "pallet_alliance",
        "types",
        "Version"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V0",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "V1",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 380,
    "type": {
      "path": [
        "pallet_alliance",
        "types",
        "Multihash"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "code",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "digest",
              "type": 381,
              "typeName": "BoundedVec<u8, ConstU32<68>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 381,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 382,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 383
        }
      },
      "docs": []
    }
  },
  {
    "id": 383,
    "type": {
      "path": [
        "pallet_alliance",
        "UnscrupulousItem"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Url",
          "type": 384
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AccountId",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Website",
              "fields": [
                {
                  "name": null,
                  "type": 384,
                  "typeName": "Url",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 384,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 385,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "join",
              "fields": [
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::join`]."
              ]
            },
            {
              "name": "bond_extra",
              "fields": [
                {
                  "name": "extra",
                  "type": 386,
                  "typeName": "BondExtra<BalanceOf<T>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::bond_extra`]."
              ]
            },
            {
              "name": "claim_payout",
              "fields": [],
              "index": 2,
              "docs": [
                "See [`Pallet::claim_payout`]."
              ]
            },
            {
              "name": "unbond",
              "fields": [
                {
                  "name": "member_account",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "unbonding_points",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unbond`]."
              ]
            },
            {
              "name": "pool_withdraw_unbonded",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::pool_withdraw_unbonded`]."
              ]
            },
            {
              "name": "withdraw_unbonded",
              "fields": [
                {
                  "name": "member_account",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::withdraw_unbonded`]."
              ]
            },
            {
              "name": "create",
              "fields": [
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "root",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "nominator",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "bouncer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::create`]."
              ]
            },
            {
              "name": "create_with_pool_id",
              "fields": [
                {
                  "name": "amount",
                  "type": 82,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "root",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "nominator",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "bouncer",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::create_with_pool_id`]."
              ]
            },
            {
              "name": "nominate",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "validators",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::nominate`]."
              ]
            },
            {
              "name": "set_state",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "state",
                  "type": 387,
                  "typeName": "PoolState",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::set_state`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "metadata",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            },
            {
              "name": "set_configs",
              "fields": [
                {
                  "name": "min_join_bond",
                  "type": 388,
                  "typeName": "ConfigOp<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "min_create_bond",
                  "type": 388,
                  "typeName": "ConfigOp<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "max_pools",
                  "type": 389,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "max_members",
                  "type": 389,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "max_members_per_pool",
                  "type": 389,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "global_max_commission",
                  "type": 390,
                  "typeName": "ConfigOp<Perbill>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::set_configs`]."
              ]
            },
            {
              "name": "update_roles",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "new_root",
                  "type": 391,
                  "typeName": "ConfigOp<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "new_nominator",
                  "type": 391,
                  "typeName": "ConfigOp<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "new_bouncer",
                  "type": 391,
                  "typeName": "ConfigOp<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::update_roles`]."
              ]
            },
            {
              "name": "chill",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::chill`]."
              ]
            },
            {
              "name": "bond_extra_other",
              "fields": [
                {
                  "name": "member",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "extra",
                  "type": 386,
                  "typeName": "BondExtra<BalanceOf<T>>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::bond_extra_other`]."
              ]
            },
            {
              "name": "set_claim_permission",
              "fields": [
                {
                  "name": "permission",
                  "type": 392,
                  "typeName": "ClaimPermission",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::set_claim_permission`]."
              ]
            },
            {
              "name": "claim_payout_other",
              "fields": [
                {
                  "name": "other",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "See [`Pallet::claim_payout_other`]."
              ]
            },
            {
              "name": "set_commission",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "new_commission",
                  "type": 393,
                  "typeName": "Option<(Perbill, T::AccountId)>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::set_commission`]."
              ]
            },
            {
              "name": "set_commission_max",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "max_commission",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::set_commission_max`]."
              ]
            },
            {
              "name": "set_commission_change_rate",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "change_rate",
                  "type": 395,
                  "typeName": "CommissionChangeRate<BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::set_commission_change_rate`]."
              ]
            },
            {
              "name": "claim_commission",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "See [`Pallet::claim_commission`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 386,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "BondExtra"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "FreeBalance",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Rewards",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 387,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "PoolState"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Open",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Blocked",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Destroying",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 388,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 389,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 390,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 48
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 48,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 391,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 392,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ClaimPermission"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Permissioned",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "PermissionlessCompound",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "PermissionlessWithdraw",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "PermissionlessAll",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 393,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 394
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 394,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 394,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          48,
          0
        ]
      },
      "docs": []
    }
  },
  {
    "id": 395,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "CommissionChangeRate"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "max_increase",
              "type": 48,
              "typeName": "Perbill",
              "docs": []
            },
            {
              "name": "min_delay",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 396,
    "type": {
      "path": [
        "pallet_referenda",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "submit",
              "fields": [
                {
                  "name": "proposal_origin",
                  "type": 148,
                  "typeName": "Box<PalletsOriginOf<T>>",
                  "docs": []
                },
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T, I>",
                  "docs": []
                },
                {
                  "name": "enactment_moment",
                  "type": 367,
                  "typeName": "DispatchTime<BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::submit`]."
              ]
            },
            {
              "name": "place_decision_deposit",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::place_decision_deposit`]."
              ]
            },
            {
              "name": "refund_decision_deposit",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::refund_decision_deposit`]."
              ]
            },
            {
              "name": "cancel",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::cancel`]."
              ]
            },
            {
              "name": "kill",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::kill`]."
              ]
            },
            {
              "name": "nudge_referendum",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::nudge_referendum`]."
              ]
            },
            {
              "name": "one_fewer_deciding",
              "fields": [
                {
                  "name": "track",
                  "type": 101,
                  "typeName": "TrackIdOf<T, I>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::one_fewer_deciding`]."
              ]
            },
            {
              "name": "refund_submission_deposit",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::refund_submission_deposit`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                },
                {
                  "name": "maybe_hash",
                  "type": 240,
                  "typeName": "Option<PreimageHash>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 397,
    "type": {
      "path": [
        "pallet_ranked_collective",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "add_member",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::add_member`]."
              ]
            },
            {
              "name": "promote_member",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::promote_member`]."
              ]
            },
            {
              "name": "demote_member",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::demote_member`]."
              ]
            },
            {
              "name": "remove_member",
              "fields": [
                {
                  "name": "who",
                  "type": 166,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "min_rank",
                  "type": 101,
                  "typeName": "Rank",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::remove_member`]."
              ]
            },
            {
              "name": "vote",
              "fields": [
                {
                  "name": "poll",
                  "type": 4,
                  "typeName": "PollIndexOf<T, I>",
                  "docs": []
                },
                {
                  "name": "aye",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "cleanup_poll",
              "fields": [
                {
                  "name": "poll_index",
                  "type": 4,
                  "typeName": "PollIndexOf<T, I>",
                  "docs": []
                },
                {
                  "name": "max",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::cleanup_poll`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 398,
    "type": {
      "path": [
        "pallet_asset_conversion",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "create_pool",
              "fields": [
                {
                  "name": "asset1",
                  "type": 399,
                  "typeName": "T::MultiAssetId",
                  "docs": []
                },
                {
                  "name": "asset2",
                  "type": 399,
                  "typeName": "T::MultiAssetId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::create_pool`]."
              ]
            },
            {
              "name": "add_liquidity",
              "fields": [
                {
                  "name": "asset1",
                  "type": 399,
                  "typeName": "T::MultiAssetId",
                  "docs": []
                },
                {
                  "name": "asset2",
                  "type": 399,
                  "typeName": "T::MultiAssetId",
                  "docs": []
                },
                {
                  "name": "amount1_desired",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "amount2_desired",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "amount1_min",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "amount2_min",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "mint_to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::add_liquidity`]."
              ]
            },
            {
              "name": "remove_liquidity",
              "fields": [
                {
                  "name": "asset1",
                  "type": 399,
                  "typeName": "T::MultiAssetId",
                  "docs": []
                },
                {
                  "name": "asset2",
                  "type": 399,
                  "typeName": "T::MultiAssetId",
                  "docs": []
                },
                {
                  "name": "lp_token_burn",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "amount1_min_receive",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "amount2_min_receive",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "withdraw_to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::remove_liquidity`]."
              ]
            },
            {
              "name": "swap_exact_tokens_for_tokens",
              "fields": [
                {
                  "name": "path",
                  "type": 400,
                  "typeName": "BoundedVec<T::MultiAssetId, T::MaxSwapPathLength>",
                  "docs": []
                },
                {
                  "name": "amount_in",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "amount_out_min",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "send_to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "keep_alive",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::swap_exact_tokens_for_tokens`]."
              ]
            },
            {
              "name": "swap_tokens_for_exact_tokens",
              "fields": [
                {
                  "name": "path",
                  "type": 400,
                  "typeName": "BoundedVec<T::MultiAssetId, T::MaxSwapPathLength>",
                  "docs": []
                },
                {
                  "name": "amount_out",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "amount_in_max",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": []
                },
                {
                  "name": "send_to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "keep_alive",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::swap_tokens_for_exact_tokens`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Pallet's callable functions."
      ]
    }
  },
  {
    "id": 399,
    "type": {
      "path": [
        "pallet_asset_conversion",
        "types",
        "NativeOrAssetId"
      ],
      "params": [
        {
          "name": "AssetId",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Native",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Asset",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "AssetId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 400,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 399
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 401,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 401,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 399
        }
      },
      "docs": []
    }
  },
  {
    "id": 402,
    "type": {
      "path": [
        "pallet_fast_unstake",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "register_fast_unstake",
              "fields": [],
              "index": 0,
              "docs": [
                "See [`Pallet::register_fast_unstake`]."
              ]
            },
            {
              "name": "deregister",
              "fields": [],
              "index": 1,
              "docs": [
                "See [`Pallet::deregister`]."
              ]
            },
            {
              "name": "control",
              "fields": [
                {
                  "name": "eras_to_check",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::control`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 403,
    "type": {
      "path": [
        "pallet_message_queue",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "reap_page",
              "fields": [
                {
                  "name": "message_origin",
                  "type": 4,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "page_index",
                  "type": 4,
                  "typeName": "PageIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::reap_page`]."
              ]
            },
            {
              "name": "execute_overweight",
              "fields": [
                {
                  "name": "message_origin",
                  "type": 4,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "page",
                  "type": 4,
                  "typeName": "PageIndex",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::Size",
                  "docs": []
                },
                {
                  "name": "weight_limit",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::execute_overweight`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 404,
    "type": {
      "path": [
        "frame_benchmarking_pallet_pov",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "emit_event",
              "fields": [],
              "index": 0,
              "docs": [
                "See [`Pallet::emit_event`]."
              ]
            },
            {
              "name": "noop",
              "fields": [],
              "index": 1,
              "docs": [
                "See [`Pallet::noop`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 405,
    "type": {
      "path": [
        "pallet_tx_pause",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "pause",
              "fields": [
                {
                  "name": "full_name",
                  "type": 406,
                  "typeName": "RuntimeCallNameOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::pause`]."
              ]
            },
            {
              "name": "unpause",
              "fields": [
                {
                  "name": "ident",
                  "type": 406,
                  "typeName": "RuntimeCallNameOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::unpause`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 406,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          118,
          118
        ]
      },
      "docs": []
    }
  },
  {
    "id": 407,
    "type": {
      "path": [
        "pallet_safe_mode",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "enter",
              "fields": [],
              "index": 0,
              "docs": [
                "See [`Pallet::enter`]."
              ]
            },
            {
              "name": "force_enter",
              "fields": [],
              "index": 1,
              "docs": [
                "See [`Pallet::force_enter`]."
              ]
            },
            {
              "name": "extend",
              "fields": [],
              "index": 2,
              "docs": [
                "See [`Pallet::extend`]."
              ]
            },
            {
              "name": "force_extend",
              "fields": [],
              "index": 3,
              "docs": [
                "See [`Pallet::force_extend`]."
              ]
            },
            {
              "name": "force_exit",
              "fields": [],
              "index": 4,
              "docs": [
                "See [`Pallet::force_exit`]."
              ]
            },
            {
              "name": "force_slash_deposit",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "block",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::force_slash_deposit`]."
              ]
            },
            {
              "name": "release_deposit",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "block",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::release_deposit`]."
              ]
            },
            {
              "name": "force_release_deposit",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "block",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::force_release_deposit`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 408,
    "type": {
      "path": [
        "pallet_broker",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "configure",
              "fields": [
                {
                  "name": "config",
                  "type": 409,
                  "typeName": "ConfigRecordOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::configure`]."
              ]
            },
            {
              "name": "reserve",
              "fields": [
                {
                  "name": "workload",
                  "type": 410,
                  "typeName": "Schedule",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::reserve`]."
              ]
            },
            {
              "name": "unreserve",
              "fields": [
                {
                  "name": "item_index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::unreserve`]."
              ]
            },
            {
              "name": "set_lease",
              "fields": [
                {
                  "name": "task",
                  "type": 4,
                  "typeName": "TaskId",
                  "docs": []
                },
                {
                  "name": "until",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::set_lease`]."
              ]
            },
            {
              "name": "start_sales",
              "fields": [
                {
                  "name": "initial_price",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "core_count",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::start_sales`]."
              ]
            },
            {
              "name": "purchase",
              "fields": [
                {
                  "name": "price_limit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::purchase`]."
              ]
            },
            {
              "name": "renew",
              "fields": [
                {
                  "name": "core",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::renew`]."
              ]
            },
            {
              "name": "transfer",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": []
                },
                {
                  "name": "new_owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::transfer`]."
              ]
            },
            {
              "name": "partition",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": []
                },
                {
                  "name": "pivot",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::partition`]."
              ]
            },
            {
              "name": "interlace",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": []
                },
                {
                  "name": "pivot",
                  "type": 412,
                  "typeName": "CoreMask",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::interlace`]."
              ]
            },
            {
              "name": "assign",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": []
                },
                {
                  "name": "task",
                  "type": 4,
                  "typeName": "TaskId",
                  "docs": []
                },
                {
                  "name": "finality",
                  "type": 416,
                  "typeName": "Finality",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::assign`]."
              ]
            },
            {
              "name": "pool",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": []
                },
                {
                  "name": "payee",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "finality",
                  "type": 416,
                  "typeName": "Finality",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::pool`]."
              ]
            },
            {
              "name": "claim_revenue",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": []
                },
                {
                  "name": "max_timeslices",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::claim_revenue`]."
              ]
            },
            {
              "name": "purchase_credit",
              "fields": [
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "RelayAccountIdOf<T>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::purchase_credit`]."
              ]
            },
            {
              "name": "drop_region",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::drop_region`]."
              ]
            },
            {
              "name": "drop_contribution",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::drop_contribution`]."
              ]
            },
            {
              "name": "drop_history",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "See [`Pallet::drop_history`]."
              ]
            },
            {
              "name": "drop_renewal",
              "fields": [
                {
                  "name": "core",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": []
                },
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::drop_renewal`]."
              ]
            },
            {
              "name": "request_core_count",
              "fields": [
                {
                  "name": "core_count",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::request_core_count`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 409,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "ConfigRecord"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "RelayBlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "advance_notice",
              "type": 4,
              "typeName": "RelayBlockNumber",
              "docs": []
            },
            {
              "name": "interlude_length",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "leadin_length",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "region_length",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            },
            {
              "name": "ideal_bulk_proportion",
              "type": 48,
              "typeName": "Perbill",
              "docs": []
            },
            {
              "name": "limit_cores_offered",
              "type": 132,
              "typeName": "Option<CoreIndex>",
              "docs": []
            },
            {
              "name": "renewal_bump",
              "type": 48,
              "typeName": "Perbill",
              "docs": []
            },
            {
              "name": "contribution_timeout",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 410,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 411
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 414,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 411,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "ScheduleItem"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "mask",
              "type": 412,
              "typeName": "CoreMask",
              "docs": []
            },
            {
              "name": "assignment",
              "type": 413,
              "typeName": "CoreAssignment",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 412,
    "type": {
      "path": [
        "pallet_broker",
        "core_mask",
        "CoreMask"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 282,
              "typeName": "[u8; 10]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 413,
    "type": {
      "path": [
        "pallet_broker",
        "coretime_interface",
        "CoreAssignment"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Idle",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Pool",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Task",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "TaskId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 414,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 411
        }
      },
      "docs": []
    }
  },
  {
    "id": 415,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "RegionId"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "begin",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            },
            {
              "name": "core",
              "type": 101,
              "typeName": "CoreIndex",
              "docs": []
            },
            {
              "name": "mask",
              "type": 412,
              "typeName": "CoreMask",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 416,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "Finality"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Provisional",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Final",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 417,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "types",
        "Tally"
      ],
      "params": [
        {
          "name": "Votes",
          "type": 6
        },
        {
          "name": "Total",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "ayes",
              "type": 6,
              "typeName": "Votes",
              "docs": []
            },
            {
              "name": "nays",
              "type": 6,
              "typeName": "Votes",
              "docs": []
            },
            {
              "name": "support",
              "type": 6,
              "typeName": "Votes",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 418,
    "type": {
      "path": [
        "pallet_remark",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Stored",
              "fields": [
                {
                  "name": "sender",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "content_hash",
                  "type": 12,
                  "typeName": "sp_core::H256",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Stored data off chain."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 419,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Delegated",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "An account has delegated their vote to another account. \\[who, target\\]"
              ]
            },
            {
              "name": "Undelegated",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An \\[account\\] has cancelled a previous delegation operation."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 420,
    "type": {
      "path": [
        "pallet_whitelist",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "CallWhitelisted",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "WhitelistedCallRemoved",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "WhitelistedCallDispatched",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 421,
                  "typeName": "DispatchResultWithPostInfo",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 421,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 422
        },
        {
          "name": "E",
          "type": 424
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 422,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 424,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 422,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "PostDispatchInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "actual_weight",
              "type": 423,
              "typeName": "Option<Weight>",
              "docs": []
            },
            {
              "name": "pays_fee",
              "type": 24,
              "typeName": "Pays",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 423,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 9
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 9,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 424,
    "type": {
      "path": [
        "sp_runtime",
        "DispatchErrorWithPostInfo"
      ],
      "params": [
        {
          "name": "Info",
          "type": 422
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "post_info",
              "type": 422,
              "typeName": "Info",
              "docs": []
            },
            {
              "name": "error",
              "type": 25,
              "typeName": "DispatchError",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 425,
    "type": {
      "path": [
        "pallet_collective",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Proposed",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "threshold",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A motion (given hash) has been proposed (by given account) with a threshold (given",
                "`MemberCount`)."
              ]
            },
            {
              "name": "Voted",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "voted",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "yes",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": "no",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A motion (given hash) has been voted on by given account, leaving",
                "a tally (yes votes and no votes given respectively as `MemberCount`)."
              ]
            },
            {
              "name": "Approved",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A motion was approved by the required threshold."
              ]
            },
            {
              "name": "Disapproved",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A motion was not approved by the required threshold."
              ]
            },
            {
              "name": "Executed",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A motion was executed; result will be `Ok` if it returned without error."
              ]
            },
            {
              "name": "MemberExecuted",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A single member did some action; result will be `Ok` if it returned without error."
              ]
            },
            {
              "name": "Closed",
              "fields": [
                {
                  "name": "proposal_hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                },
                {
                  "name": "yes",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                },
                {
                  "name": "no",
                  "type": 4,
                  "typeName": "MemberCount",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A proposal was closed because its threshold was reached or after its duration was up."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 426,
    "type": {
      "path": [
        "pallet_alliance",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewRuleSet",
              "fields": [
                {
                  "name": "rule",
                  "type": 378,
                  "typeName": "Cid",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A new rule has been set."
              ]
            },
            {
              "name": "Announced",
              "fields": [
                {
                  "name": "announcement",
                  "type": 378,
                  "typeName": "Cid",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A new announcement has been proposed."
              ]
            },
            {
              "name": "AnnouncementRemoved",
              "fields": [
                {
                  "name": "announcement",
                  "type": 378,
                  "typeName": "Cid",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "An on-chain announcement has been removed."
              ]
            },
            {
              "name": "MembersInitialized",
              "fields": [
                {
                  "name": "fellows",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "allies",
                  "type": 89,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "Some accounts have been initialized as members (fellows/allies)."
              ]
            },
            {
              "name": "NewAllyJoined",
              "fields": [
                {
                  "name": "ally",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "nominator",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "reserved",
                  "type": 331,
                  "typeName": "Option<BalanceOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An account has been added as an Ally and reserved its deposit."
              ]
            },
            {
              "name": "AllyElevated",
              "fields": [
                {
                  "name": "ally",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "An ally has been elevated to Fellow."
              ]
            },
            {
              "name": "MemberRetirementPeriodStarted",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A member gave retirement notice and their retirement period started."
              ]
            },
            {
              "name": "MemberRetired",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "unreserved",
                  "type": 331,
                  "typeName": "Option<BalanceOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "A member has retired with its deposit unreserved."
              ]
            },
            {
              "name": "MemberKicked",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "slashed",
                  "type": 331,
                  "typeName": "Option<BalanceOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "A member has been kicked out with its deposit slashed."
              ]
            },
            {
              "name": "UnscrupulousItemAdded",
              "fields": [
                {
                  "name": "items",
                  "type": 382,
                  "typeName": "Vec<UnscrupulousItemOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Accounts or websites have been added into the list of unscrupulous items."
              ]
            },
            {
              "name": "UnscrupulousItemRemoved",
              "fields": [
                {
                  "name": "items",
                  "type": 382,
                  "typeName": "Vec<UnscrupulousItemOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "Accounts or websites have been removed from the list of unscrupulous items."
              ]
            },
            {
              "name": "AllianceDisbanded",
              "fields": [
                {
                  "name": "fellow_members",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "ally_members",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "unreserved",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "Alliance disbanded. Includes number deleted members and unreserved deposits."
              ]
            },
            {
              "name": "FellowAbdicated",
              "fields": [
                {
                  "name": "fellow",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "A Fellow abdicated their voting rights. They are now an Ally."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 427,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Created",
              "fields": [
                {
                  "name": "depositor",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A pool has been created."
              ]
            },
            {
              "name": "Bonded",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "bonded",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "joined",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A member has became bonded in a pool."
              ]
            },
            {
              "name": "PaidOut",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "payout",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A payout has been made to a member."
              ]
            },
            {
              "name": "Unbonded",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "points",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A member has unbonded from their pool.",
                "",
                "- `balance` is the corresponding balance of the number of points that has been",
                "  requested to be unbonded (the argument of the `unbond` transaction) from the bonded",
                "  pool.",
                "- `points` is the number of points that are issued as a result of `balance` being",
                "dissolved into the corresponding unbonding pool.",
                "- `era` is the era in which the balance will be unbonded.",
                "In the absence of slashing, these values will match. In the presence of slashing, the",
                "number of points that are issued in the unbonding pool will be less than the amount",
                "requested to be unbonded."
              ]
            },
            {
              "name": "Withdrawn",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "points",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A member has withdrawn from their pool.",
                "",
                "The given number of `points` have been dissolved in return of `balance`.",
                "",
                "Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance",
                "will be 1."
              ]
            },
            {
              "name": "Destroyed",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A pool has been destroyed."
              ]
            },
            {
              "name": "StateChanged",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "new_state",
                  "type": 387,
                  "typeName": "PoolState",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "The state of a pool has changed"
              ]
            },
            {
              "name": "MemberRemoved",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "A member has been removed from a pool.",
                "",
                "The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked)."
              ]
            },
            {
              "name": "RolesUpdated",
              "fields": [
                {
                  "name": "root",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "bouncer",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "nominator",
                  "type": 42,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "The roles of a pool have been updated to the given new roles. Note that the depositor",
                "can never change."
              ]
            },
            {
              "name": "PoolSlashed",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "The active balance of pool `pool_id` has been slashed to `balance`."
              ]
            },
            {
              "name": "UnbondingPoolSlashed",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "The unbond pool at `era` of pool `pool_id` has been slashed to `balance`."
              ]
            },
            {
              "name": "PoolCommissionUpdated",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "current",
                  "type": 393,
                  "typeName": "Option<(Perbill, T::AccountId)>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "A pool's commission setting has been changed."
              ]
            },
            {
              "name": "PoolMaxCommissionUpdated",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "max_commission",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "A pool's maximum commission setting has been changed."
              ]
            },
            {
              "name": "PoolCommissionChangeRateUpdated",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "change_rate",
                  "type": 395,
                  "typeName": "CommissionChangeRate<BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "A pool's commission `change_rate` has been changed."
              ]
            },
            {
              "name": "PoolCommissionClaimed",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "commission",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "Pool commission has been claimed."
              ]
            }
          ]
        }
      },
      "docs": [
        "Events of this pallet."
      ]
    }
  },
  {
    "id": 428,
    "type": {
      "path": [
        "pallet_referenda",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Submitted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "track",
                  "type": 101,
                  "typeName": "TrackIdOf<T, I>",
                  "docs": [
                    "The track (and by extension proposal dispatch origin) of this referendum."
                  ]
                },
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T, I>",
                  "docs": [
                    "The proposal for the referendum."
                  ]
                }
              ],
              "index": 0,
              "docs": [
                "A referendum has been submitted."
              ]
            },
            {
              "name": "DecisionDepositPlaced",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 1,
              "docs": [
                "The decision deposit has been placed."
              ]
            },
            {
              "name": "DecisionDepositRefunded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 2,
              "docs": [
                "The decision deposit has been refunded."
              ]
            },
            {
              "name": "DepositSlashed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 3,
              "docs": [
                "A deposit has been slashaed."
              ]
            },
            {
              "name": "DecisionStarted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "track",
                  "type": 101,
                  "typeName": "TrackIdOf<T, I>",
                  "docs": [
                    "The track (and by extension proposal dispatch origin) of this referendum."
                  ]
                },
                {
                  "name": "proposal",
                  "type": 140,
                  "typeName": "BoundedCallOf<T, I>",
                  "docs": [
                    "The proposal for the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 429,
                  "typeName": "T::Tally",
                  "docs": [
                    "The current tally of votes in this referendum."
                  ]
                }
              ],
              "index": 4,
              "docs": [
                "A referendum has moved into the deciding phase."
              ]
            },
            {
              "name": "ConfirmStarted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "ConfirmAborted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "Confirmed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 429,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 7,
              "docs": [
                "A referendum has ended its confirmation phase and is ready for approval."
              ]
            },
            {
              "name": "Approved",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                }
              ],
              "index": 8,
              "docs": [
                "A referendum has been approved and its proposal has been scheduled."
              ]
            },
            {
              "name": "Rejected",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 429,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 9,
              "docs": [
                "A proposal has been rejected by referendum."
              ]
            },
            {
              "name": "TimedOut",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 429,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 10,
              "docs": [
                "A referendum has been timed out without being decided."
              ]
            },
            {
              "name": "Cancelled",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 429,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 11,
              "docs": [
                "A referendum has been cancelled."
              ]
            },
            {
              "name": "Killed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 429,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 12,
              "docs": [
                "A referendum has been killed."
              ]
            },
            {
              "name": "SubmissionDepositRefunded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 13,
              "docs": [
                "The submission deposit has been refunded."
              ]
            },
            {
              "name": "MetadataSet",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": [
                    "Preimage hash."
                  ]
                }
              ],
              "index": 14,
              "docs": [
                "Metadata for a referendum has been set."
              ]
            },
            {
              "name": "MetadataCleared",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": [
                    "Preimage hash."
                  ]
                }
              ],
              "index": 15,
              "docs": [
                "Metadata for a referendum has been cleared."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 429,
    "type": {
      "path": [
        "pallet_ranked_collective",
        "Tally"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        },
        {
          "name": "M",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "bare_ayes",
              "type": 4,
              "typeName": "MemberIndex",
              "docs": []
            },
            {
              "name": "ayes",
              "type": 4,
              "typeName": "Votes",
              "docs": []
            },
            {
              "name": "nays",
              "type": 4,
              "typeName": "Votes",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 430,
    "type": {
      "path": [
        "pallet_ranked_collective",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "MemberAdded",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A member `who` has been added."
              ]
            },
            {
              "name": "RankChanged",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "rank",
                  "type": 101,
                  "typeName": "Rank",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "The member `who`se rank has been changed to the given `rank`."
              ]
            },
            {
              "name": "MemberRemoved",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "rank",
                  "type": 101,
                  "typeName": "Rank",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "The member `who` of given `rank` has been removed from the collective."
              ]
            },
            {
              "name": "Voted",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "poll",
                  "type": 4,
                  "typeName": "PollIndexOf<T, I>",
                  "docs": []
                },
                {
                  "name": "vote",
                  "type": 431,
                  "typeName": "VoteRecord",
                  "docs": []
                },
                {
                  "name": "tally",
                  "type": 429,
                  "typeName": "TallyOf<T, I>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "The member `who` has voted for the `poll` with the given `vote` leading to an updated",
                "`tally`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 431,
    "type": {
      "path": [
        "pallet_ranked_collective",
        "VoteRecord"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Aye",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Votes",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Nay",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Votes",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 432,
    "type": {
      "path": [
        "pallet_asset_conversion",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PoolCreated",
              "fields": [
                {
                  "name": "creator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account that created the pool."
                  ]
                },
                {
                  "name": "pool_id",
                  "type": 433,
                  "typeName": "PoolIdOf<T>",
                  "docs": [
                    "The pool id associated with the pool. Note that the order of the assets may not be",
                    "the same as the order specified in the create pool extrinsic."
                  ]
                },
                {
                  "name": "pool_account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account ID of the pool."
                  ]
                },
                {
                  "name": "lp_token",
                  "type": 4,
                  "typeName": "T::PoolAssetId",
                  "docs": [
                    "The id of the liquidity tokens that will be minted when assets are added to this",
                    "pool."
                  ]
                }
              ],
              "index": 0,
              "docs": [
                "A successful call of the `CretaPool` extrinsic will create this event."
              ]
            },
            {
              "name": "LiquidityAdded",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account that the liquidity was taken from."
                  ]
                },
                {
                  "name": "mint_to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account that the liquidity tokens were minted to."
                  ]
                },
                {
                  "name": "pool_id",
                  "type": 433,
                  "typeName": "PoolIdOf<T>",
                  "docs": [
                    "The pool id of the pool that the liquidity was added to."
                  ]
                },
                {
                  "name": "amount1_provided",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": [
                    "The amount of the first asset that was added to the pool."
                  ]
                },
                {
                  "name": "amount2_provided",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": [
                    "The amount of the second asset that was added to the pool."
                  ]
                },
                {
                  "name": "lp_token",
                  "type": 4,
                  "typeName": "T::PoolAssetId",
                  "docs": [
                    "The id of the lp token that was minted."
                  ]
                },
                {
                  "name": "lp_token_minted",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": [
                    "The amount of lp tokens that were minted of that id."
                  ]
                }
              ],
              "index": 1,
              "docs": [
                "A successful call of the `AddLiquidity` extrinsic will create this event."
              ]
            },
            {
              "name": "LiquidityRemoved",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account that the liquidity tokens were burned from."
                  ]
                },
                {
                  "name": "withdraw_to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account that the assets were transferred to."
                  ]
                },
                {
                  "name": "pool_id",
                  "type": 433,
                  "typeName": "PoolIdOf<T>",
                  "docs": [
                    "The pool id that the liquidity was removed from."
                  ]
                },
                {
                  "name": "amount1",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": [
                    "The amount of the first asset that was removed from the pool."
                  ]
                },
                {
                  "name": "amount2",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": [
                    "The amount of the second asset that was removed from the pool."
                  ]
                },
                {
                  "name": "lp_token",
                  "type": 4,
                  "typeName": "T::PoolAssetId",
                  "docs": [
                    "The id of the lp token that was burned."
                  ]
                },
                {
                  "name": "lp_token_burned",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": [
                    "The amount of lp tokens that were burned of that id."
                  ]
                },
                {
                  "name": "withdrawal_fee",
                  "type": 434,
                  "typeName": "Permill",
                  "docs": [
                    "Liquidity withdrawal fee (%)."
                  ]
                }
              ],
              "index": 2,
              "docs": [
                "A successful call of the `RemoveLiquidity` extrinsic will create this event."
              ]
            },
            {
              "name": "SwapExecuted",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "Which account was the instigator of the swap."
                  ]
                },
                {
                  "name": "send_to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account that the assets were transferred to."
                  ]
                },
                {
                  "name": "path",
                  "type": 400,
                  "typeName": "BoundedVec<T::MultiAssetId, T::MaxSwapPathLength>",
                  "docs": [
                    "The route of asset ids that the swap went through.",
                    "E.g. A -> Dot -> B"
                  ]
                },
                {
                  "name": "amount_in",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": [
                    "The amount of the first asset that was swapped."
                  ]
                },
                {
                  "name": "amount_out",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": [
                    "The amount of the second asset that was received."
                  ]
                }
              ],
              "index": 3,
              "docs": [
                "Assets have been converted from one to another. Both `SwapExactTokenForToken`",
                "and `SwapTokenForExactToken` will generate this event."
              ]
            },
            {
              "name": "Transfer",
              "fields": [
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account that the assets were transferred from."
                  ]
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account that the assets were transferred to."
                  ]
                },
                {
                  "name": "asset",
                  "type": 399,
                  "typeName": "T::MultiAssetId",
                  "docs": [
                    "The asset that was transferred."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::AssetBalance",
                  "docs": [
                    "The amount of the asset that was transferred."
                  ]
                }
              ],
              "index": 4,
              "docs": [
                "An amount has been transferred from one account to another."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 433,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          399,
          399
        ]
      },
      "docs": []
    }
  },
  {
    "id": 434,
    "type": {
      "path": [
        "sp_arithmetic",
        "per_things",
        "Permill"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 435,
    "type": {
      "path": [
        "pallet_fast_unstake",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unstaked",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 31,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A staker was unstaked."
              ]
            },
            {
              "name": "Slashed",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A staker was slashed for requesting fast-unstake whilst being exposed."
              ]
            },
            {
              "name": "BatchChecked",
              "fields": [
                {
                  "name": "eras",
                  "type": 114,
                  "typeName": "Vec<EraIndex>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A batch was partially checked for the given eras, but the process did not finish."
              ]
            },
            {
              "name": "BatchFinished",
              "fields": [
                {
                  "name": "size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A batch of a given size was terminated.",
                "",
                "This is always follows by a number of `Unstaked` or `Slashed` events, marking the end",
                "of the batch. A new batch will be created upon next block."
              ]
            },
            {
              "name": "InternalError",
              "fields": [],
              "index": 4,
              "docs": [
                "An internal error happened. Operations will be paused now."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 436,
    "type": {
      "path": [
        "pallet_message_queue",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ProcessingFailed",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 4,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "error",
                  "type": 437,
                  "typeName": "ProcessMessageError",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Message discarded due to an error in the `MessageProcessor` (usually a format error)."
              ]
            },
            {
              "name": "Processed",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 4,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "weight_used",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "success",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Message is processed."
              ]
            },
            {
              "name": "OverweightEnqueued",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 4,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "page_index",
                  "type": 4,
                  "typeName": "PageIndex",
                  "docs": []
                },
                {
                  "name": "message_index",
                  "type": 4,
                  "typeName": "T::Size",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Message placed in overweight queue."
              ]
            },
            {
              "name": "PageReaped",
              "fields": [
                {
                  "name": "origin",
                  "type": 4,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "PageIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "This page was reaped."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 437,
    "type": {
      "path": [
        "frame_support",
        "traits",
        "messages",
        "ProcessMessageError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BadFormat",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Corrupt",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Unsupported",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Overweight",
              "fields": [
                {
                  "name": null,
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Yield",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 438,
    "type": {
      "path": [
        "frame_benchmarking_pallet_pov",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TestEvent",
              "fields": [],
              "index": 0,
              "docs": []
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 439,
    "type": {
      "path": [
        "pallet_tx_pause",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "CallPaused",
              "fields": [
                {
                  "name": "full_name",
                  "type": 406,
                  "typeName": "RuntimeCallNameOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "This pallet, or a specific call is now paused."
              ]
            },
            {
              "name": "CallUnpaused",
              "fields": [
                {
                  "name": "full_name",
                  "type": 406,
                  "typeName": "RuntimeCallNameOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "This pallet, or a specific call is now unpaused."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 440,
    "type": {
      "path": [
        "pallet_safe_mode",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Entered",
              "fields": [
                {
                  "name": "until",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "The safe-mode was entered until inclusively this block."
              ]
            },
            {
              "name": "Extended",
              "fields": [
                {
                  "name": "until",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "The safe-mode was extended until inclusively this block."
              ]
            },
            {
              "name": "Exited",
              "fields": [
                {
                  "name": "reason",
                  "type": 441,
                  "typeName": "ExitReason",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Exited the safe-mode for a specific reason."
              ]
            },
            {
              "name": "DepositPlaced",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "An account reserved funds for either entering or extending the safe-mode."
              ]
            },
            {
              "name": "DepositReleased",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An account had a reserve released that was reserved."
              ]
            },
            {
              "name": "DepositSlashed",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "An account had reserve slashed that was reserved."
              ]
            },
            {
              "name": "CannotDeposit",
              "fields": [],
              "index": 6,
              "docs": [
                "Could not hold funds for entering or extending the safe-mode.",
                "",
                "This error comes from the underlying `Currency`."
              ]
            },
            {
              "name": "CannotRelease",
              "fields": [],
              "index": 7,
              "docs": [
                "Could not release funds for entering or extending the safe-mode.",
                "",
                "This error comes from the underlying `Currency`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 441,
    "type": {
      "path": [
        "pallet_safe_mode",
        "pallet",
        "ExitReason"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Timeout",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Force",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 442,
    "type": {
      "path": [
        "pallet_statement",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewStatement",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "statement",
                  "type": 443,
                  "typeName": "Statement",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A new statement is submitted"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 443,
    "type": {
      "path": [
        "sp_statement_store",
        "Statement"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "proof",
              "type": 444,
              "typeName": "Option<Proof>",
              "docs": []
            },
            {
              "name": "decryption_key",
              "type": 95,
              "typeName": "Option<DecryptionKey>",
              "docs": []
            },
            {
              "name": "channel",
              "type": 95,
              "typeName": "Option<Channel>",
              "docs": []
            },
            {
              "name": "priority",
              "type": 38,
              "typeName": "Option<u32>",
              "docs": []
            },
            {
              "name": "num_topics",
              "type": 2,
              "typeName": "u8",
              "docs": []
            },
            {
              "name": "topics",
              "type": 447,
              "typeName": "[Topic; MAX_TOPICS]",
              "docs": []
            },
            {
              "name": "data",
              "type": 448,
              "typeName": "Option<Vec<u8>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 444,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 445
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 445,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 445,
    "type": {
      "path": [
        "sp_statement_store",
        "Proof"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Sr25519",
              "fields": [
                {
                  "name": "signature",
                  "type": 253,
                  "typeName": "[u8; 64]",
                  "docs": []
                },
                {
                  "name": "signer",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Ed25519",
              "fields": [
                {
                  "name": "signature",
                  "type": 253,
                  "typeName": "[u8; 64]",
                  "docs": []
                },
                {
                  "name": "signer",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Secp256k1Ecdsa",
              "fields": [
                {
                  "name": "signature",
                  "type": 351,
                  "typeName": "[u8; 65]",
                  "docs": []
                },
                {
                  "name": "signer",
                  "type": 446,
                  "typeName": "[u8; 33]",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "OnChain",
              "fields": [
                {
                  "name": "who",
                  "type": 1,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "block_hash",
                  "type": 1,
                  "typeName": "BlockHash",
                  "docs": []
                },
                {
                  "name": "event_index",
                  "type": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 446,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 33,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 447,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 4,
          "type": 1
        }
      },
      "docs": []
    }
  },
  {
    "id": 448,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 13
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 13,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 449,
    "type": {
      "path": [
        "pallet_broker",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Purchased",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The identity of the purchaser."
                  ]
                },
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": [
                    "The identity of the Region."
                  ]
                },
                {
                  "name": "price",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The price paid for this Region."
                  ]
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The duration of the Region."
                  ]
                }
              ],
              "index": 0,
              "docs": [
                "A Region of Bulk Coretime has been purchased."
              ]
            },
            {
              "name": "Renewable",
              "fields": [
                {
                  "name": "core",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "The core whose workload can be renewed."
                  ]
                },
                {
                  "name": "price",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The price at which the workload can be renewed."
                  ]
                },
                {
                  "name": "begin",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The time at which the workload would recommence of this renewal. The call to renew",
                    "cannot happen before the beginning of the interlude prior to the sale for regions",
                    "which begin at this time."
                  ]
                },
                {
                  "name": "workload",
                  "type": 410,
                  "typeName": "Schedule",
                  "docs": [
                    "The actual workload which can be renewed."
                  ]
                }
              ],
              "index": 1,
              "docs": [
                "The workload of a core has become renewable."
              ]
            },
            {
              "name": "Renewed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The identity of the renewer."
                  ]
                },
                {
                  "name": "price",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The price paid for this renewal."
                  ]
                },
                {
                  "name": "old_core",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "The index of the core on which the `workload` was previously scheduled."
                  ]
                },
                {
                  "name": "core",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "The index of the core on which the renewed `workload` has been scheduled."
                  ]
                },
                {
                  "name": "begin",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The time at which the `workload` will begin on the `core`."
                  ]
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The number of timeslices for which this `workload` is newly scheduled."
                  ]
                },
                {
                  "name": "workload",
                  "type": 410,
                  "typeName": "Schedule",
                  "docs": [
                    "The workload which was renewed."
                  ]
                }
              ],
              "index": 2,
              "docs": [
                "A workload has been renewed."
              ]
            },
            {
              "name": "Transferred",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": [
                    "The Region which has been transferred."
                  ]
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The duration of the Region."
                  ]
                },
                {
                  "name": "old_owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The old owner of the Region."
                  ]
                },
                {
                  "name": "owner",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The new owner of the Region."
                  ]
                }
              ],
              "index": 3,
              "docs": [
                "Ownership of a Region has been transferred."
              ]
            },
            {
              "name": "Partitioned",
              "fields": [
                {
                  "name": "old_region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": [
                    "The Region which was split."
                  ]
                },
                {
                  "name": "new_region_ids",
                  "type": 450,
                  "typeName": "(RegionId, RegionId)",
                  "docs": [
                    "The new Regions into which it became."
                  ]
                }
              ],
              "index": 4,
              "docs": [
                "A Region has been split into two non-overlapping Regions."
              ]
            },
            {
              "name": "Interlaced",
              "fields": [
                {
                  "name": "old_region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": [
                    "The Region which was interlaced."
                  ]
                },
                {
                  "name": "new_region_ids",
                  "type": 450,
                  "typeName": "(RegionId, RegionId)",
                  "docs": [
                    "The new Regions into which it became."
                  ]
                }
              ],
              "index": 5,
              "docs": [
                "A Region has been converted into two overlapping Regions each of lesser regularity."
              ]
            },
            {
              "name": "Assigned",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": [
                    "The Region which was assigned."
                  ]
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The duration of the assignment."
                  ]
                },
                {
                  "name": "task",
                  "type": 4,
                  "typeName": "TaskId",
                  "docs": [
                    "The task to which the Region was assigned."
                  ]
                }
              ],
              "index": 6,
              "docs": [
                "A Region has been assigned to a particular task."
              ]
            },
            {
              "name": "Pooled",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": [
                    "The Region which was added to the Instantaneous Coretime Pool."
                  ]
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The duration of the Region."
                  ]
                }
              ],
              "index": 7,
              "docs": [
                "A Region has been added to the Instantaneous Coretime Pool."
              ]
            },
            {
              "name": "CoreCountRequested",
              "fields": [
                {
                  "name": "core_count",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "The number of cores requested."
                  ]
                }
              ],
              "index": 8,
              "docs": [
                "A new number of cores has been requested."
              ]
            },
            {
              "name": "CoreCountChanged",
              "fields": [
                {
                  "name": "core_count",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "The new number of cores available for scheduling."
                  ]
                }
              ],
              "index": 9,
              "docs": [
                "The number of cores available for scheduling has changed."
              ]
            },
            {
              "name": "ReservationMade",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": [
                    "The index of the reservation."
                  ]
                },
                {
                  "name": "workload",
                  "type": 410,
                  "typeName": "Schedule",
                  "docs": [
                    "The workload of the reservation."
                  ]
                }
              ],
              "index": 10,
              "docs": [
                "There is a new reservation for a workload."
              ]
            },
            {
              "name": "ReservationCancelled",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": [
                    "The index of the reservation which was cancelled."
                  ]
                },
                {
                  "name": "workload",
                  "type": 410,
                  "typeName": "Schedule",
                  "docs": [
                    "The workload of the now cancelled reservation."
                  ]
                }
              ],
              "index": 11,
              "docs": [
                "A reservation for a workload has been cancelled."
              ]
            },
            {
              "name": "SaleInitialized",
              "fields": [
                {
                  "name": "sale_start",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": [
                    "The local block number at which the sale will/did start."
                  ]
                },
                {
                  "name": "leadin_length",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": [
                    "The length in blocks of the Leadin Period (where the price is decreasing)."
                  ]
                },
                {
                  "name": "start_price",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The price of Bulk Coretime at the beginning of the Leadin Period."
                  ]
                },
                {
                  "name": "regular_price",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The price of Bulk Coretime after the Leadin Period."
                  ]
                },
                {
                  "name": "region_begin",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The first timeslice of the Regions which are being sold in this sale."
                  ]
                },
                {
                  "name": "region_end",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The timeslice on which the Regions which are being sold in the sale terminate.",
                    "(i.e. One after the last timeslice which the Regions control.)"
                  ]
                },
                {
                  "name": "ideal_cores_sold",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "The number of cores we want to sell, ideally. Selling this amount would result in",
                    "no change to the price for the next sale."
                  ]
                },
                {
                  "name": "cores_offered",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "Number of cores which are/have been offered for sale."
                  ]
                }
              ],
              "index": 12,
              "docs": [
                "A new sale has been initialized."
              ]
            },
            {
              "name": "Leased",
              "fields": [
                {
                  "name": "task",
                  "type": 4,
                  "typeName": "TaskId",
                  "docs": [
                    "The task to which a core will be assigned."
                  ]
                },
                {
                  "name": "until",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The timeslice contained in the sale period after which this lease will",
                    "self-terminate (and therefore the earliest timeslice at which the lease may no",
                    "longer apply)."
                  ]
                }
              ],
              "index": 13,
              "docs": [
                "A new lease has been created."
              ]
            },
            {
              "name": "LeaseEnding",
              "fields": [
                {
                  "name": "task",
                  "type": 4,
                  "typeName": "TaskId",
                  "docs": [
                    "The task to which a core was assigned."
                  ]
                },
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The timeslice at which the task will no longer be scheduled."
                  ]
                }
              ],
              "index": 14,
              "docs": [
                "A lease is about to end."
              ]
            },
            {
              "name": "SalesStarted",
              "fields": [
                {
                  "name": "price",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The nominal price of an Region of Bulk Coretime."
                  ]
                },
                {
                  "name": "core_count",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "The maximum number of cores which this pallet will attempt to assign."
                  ]
                }
              ],
              "index": 15,
              "docs": [
                "The sale rotation has been started and a new sale is imminent."
              ]
            },
            {
              "name": "RevenueClaimBegun",
              "fields": [
                {
                  "name": "region",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": [
                    "The region to be claimed for."
                  ]
                },
                {
                  "name": "max_timeslices",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The maximum number of timeslices which should be searched for claimed."
                  ]
                }
              ],
              "index": 16,
              "docs": [
                "The act of claiming revenue has begun."
              ]
            },
            {
              "name": "RevenueClaimItem",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The timeslice whose claim is being processed."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The amount which was claimed at this timeslice."
                  ]
                }
              ],
              "index": 17,
              "docs": [
                "A particular timeslice has a non-zero claim."
              ]
            },
            {
              "name": "RevenueClaimPaid",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account to whom revenue has been paid."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The total amount of revenue claimed and paid."
                  ]
                },
                {
                  "name": "next",
                  "type": 451,
                  "typeName": "Option<RegionId>",
                  "docs": [
                    "The next region which should be claimed for the continuation of this contribution."
                  ]
                }
              ],
              "index": 18,
              "docs": [
                "A revenue claim has (possibly only in part) been paid."
              ]
            },
            {
              "name": "CreditPurchased",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account which purchased the credit."
                  ]
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "RelayAccountIdOf<T>",
                  "docs": [
                    "The Relay-chain account to which the credit will be made."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The amount of credit purchased."
                  ]
                }
              ],
              "index": 19,
              "docs": [
                "Some Instantaneous Coretime Pool credit has been purchased."
              ]
            },
            {
              "name": "RegionDropped",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": [
                    "The Region which no longer exists."
                  ]
                },
                {
                  "name": "duration",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The duration of the Region."
                  ]
                }
              ],
              "index": 20,
              "docs": [
                "A Region has been dropped due to being out of date."
              ]
            },
            {
              "name": "ContributionDropped",
              "fields": [
                {
                  "name": "region_id",
                  "type": 415,
                  "typeName": "RegionId",
                  "docs": [
                    "The Region whose contribution is no longer exists."
                  ]
                }
              ],
              "index": 21,
              "docs": [
                "Some historical Instantaneous Core Pool contribution record has been dropped."
              ]
            },
            {
              "name": "HistoryInitialized",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The timeslice whose history has been initialized."
                  ]
                },
                {
                  "name": "private_pool_size",
                  "type": 4,
                  "typeName": "CoreMaskBitCount",
                  "docs": [
                    "The amount of privately contributed Coretime to the Instantaneous Coretime Pool."
                  ]
                },
                {
                  "name": "system_pool_size",
                  "type": 4,
                  "typeName": "CoreMaskBitCount",
                  "docs": [
                    "The amount of Coretime contributed to the Instantaneous Coretime Pool by the",
                    "Polkadot System."
                  ]
                }
              ],
              "index": 22,
              "docs": [
                "Some historical Instantaneous Core Pool payment record has been initialized."
              ]
            },
            {
              "name": "HistoryDropped",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The timeslice whose history is no longer available."
                  ]
                },
                {
                  "name": "revenue",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The amount of revenue the system has taken."
                  ]
                }
              ],
              "index": 23,
              "docs": [
                "Some historical Instantaneous Core Pool payment record has been dropped."
              ]
            },
            {
              "name": "HistoryIgnored",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The timeslice whose history is was ignored."
                  ]
                },
                {
                  "name": "revenue",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The amount of revenue which was ignored."
                  ]
                }
              ],
              "index": 24,
              "docs": [
                "Some historical Instantaneous Core Pool payment record has been ignored because the",
                "timeslice was already known. Governance may need to intervene."
              ]
            },
            {
              "name": "ClaimsReady",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The timeslice whose history is available."
                  ]
                },
                {
                  "name": "system_payout",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The amount of revenue the Polkadot System has already taken."
                  ]
                },
                {
                  "name": "private_payout",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": [
                    "The total amount of revenue remaining to be claimed."
                  ]
                }
              ],
              "index": 25,
              "docs": [
                "Some historical Instantaneous Core Pool Revenue is ready for payout claims."
              ]
            },
            {
              "name": "CoreAssigned",
              "fields": [
                {
                  "name": "core",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "The index of the Core which has been assigned."
                  ]
                },
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "RelayBlockNumberOf<T>",
                  "docs": [
                    "The Relay-chain block at which this assignment should take effect."
                  ]
                },
                {
                  "name": "assignment",
                  "type": 452,
                  "typeName": "Vec<(CoreAssignment, PartsOf57600)>",
                  "docs": [
                    "The workload to be done on the Core."
                  ]
                }
              ],
              "index": 26,
              "docs": [
                "A Core has been assigned to one or more tasks and/or the Pool on the Relay-chain."
              ]
            },
            {
              "name": "AllowedRenewalDropped",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "Timeslice",
                  "docs": [
                    "The timeslice whose renewal is no longer available."
                  ]
                },
                {
                  "name": "core",
                  "type": 101,
                  "typeName": "CoreIndex",
                  "docs": [
                    "The core whose workload is no longer available to be renewed for `when`."
                  ]
                }
              ],
              "index": 27,
              "docs": [
                "Some historical Instantaneous Core Pool payment record has been dropped."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 450,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          415,
          415
        ]
      },
      "docs": []
    }
  },
  {
    "id": 451,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 415
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 415,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 452,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 453
        }
      },
      "docs": []
    }
  },
  {
    "id": 453,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          413,
          101
        ]
      },
      "docs": []
    }
  },
  {
    "id": 454,
    "type": {
      "path": [
        "frame_system",
        "Phase"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ApplyExtrinsic",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Finalization",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Initialization",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 455,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 12
        }
      },
      "docs": []
    }
  },
  {
    "id": 456,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 94
        }
      },
      "docs": []
    }
  },
  {
    "id": 457,
    "type": {
      "path": [
        "frame_system",
        "LastRuntimeUpgradeInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "spec_version",
              "type": 157,
              "typeName": "codec::Compact<u32>",
              "docs": []
            },
            {
              "name": "spec_name",
              "type": 458,
              "typeName": "sp_runtime::RuntimeString",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 458,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "Str"
      },
      "docs": []
    }
  },
  {
    "id": 459,
    "type": {
      "path": [
        "frame_system",
        "limits",
        "BlockWeights"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "base_block",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "max_block",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "per_class",
              "type": 460,
              "typeName": "PerDispatchClass<WeightsPerClass>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 460,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "PerDispatchClass"
      ],
      "params": [
        {
          "name": "T",
          "type": 461
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "normal",
              "type": 461,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "operational",
              "type": 461,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "mandatory",
              "type": 461,
              "typeName": "T",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 461,
    "type": {
      "path": [
        "frame_system",
        "limits",
        "WeightsPerClass"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "base_extrinsic",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "max_extrinsic",
              "type": 423,
              "typeName": "Option<Weight>",
              "docs": []
            },
            {
              "name": "max_total",
              "type": 423,
              "typeName": "Option<Weight>",
              "docs": []
            },
            {
              "name": "reserved",
              "type": 423,
              "typeName": "Option<Weight>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 462,
    "type": {
      "path": [
        "frame_system",
        "limits",
        "BlockLength"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "max",
              "type": 463,
              "typeName": "PerDispatchClass<u32>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 463,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "PerDispatchClass"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "normal",
              "type": 4,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "operational",
              "type": 4,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "mandatory",
              "type": 4,
              "typeName": "T",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 464,
    "type": {
      "path": [
        "sp_weights",
        "RuntimeDbWeight"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "read",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "write",
              "type": 11,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 465,
    "type": {
      "path": [
        "sp_version",
        "RuntimeVersion"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "spec_name",
              "type": 458,
              "typeName": "RuntimeString",
              "docs": []
            },
            {
              "name": "impl_name",
              "type": 458,
              "typeName": "RuntimeString",
              "docs": []
            },
            {
              "name": "authoring_version",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "spec_version",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "impl_version",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "apis",
              "type": 466,
              "typeName": "ApisVec",
              "docs": []
            },
            {
              "name": "transaction_version",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "state_version",
              "type": 2,
              "typeName": "u8",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 466,
    "type": {
      "path": [
        "Cow"
      ],
      "params": [
        {
          "name": "T",
          "type": 467
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 467,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 467,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 468
        }
      },
      "docs": []
    }
  },
  {
    "id": 468,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          280,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 469,
    "type": {
      "path": [
        "frame_system",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidSpecName",
              "fields": [],
              "index": 0,
              "docs": [
                "The name of specification does not match between the current runtime",
                "and the new runtime."
              ]
            },
            {
              "name": "SpecVersionNeedsToIncrease",
              "fields": [],
              "index": 1,
              "docs": [
                "The specification version is not allowed to decrease between the current runtime",
                "and the new runtime."
              ]
            },
            {
              "name": "FailedToExtractRuntimeVersion",
              "fields": [],
              "index": 2,
              "docs": [
                "Failed to extract the runtime version from the new runtime.",
                "",
                "Either calling `Core_version` or decoding `RuntimeVersion` failed."
              ]
            },
            {
              "name": "NonDefaultComposite",
              "fields": [],
              "index": 3,
              "docs": [
                "Suicide called when the account has non-default composite data."
              ]
            },
            {
              "name": "NonZeroRefCount",
              "fields": [],
              "index": 4,
              "docs": [
                "There is a non-zero reference count preventing the account from being purged."
              ]
            },
            {
              "name": "CallFiltered",
              "fields": [],
              "index": 5,
              "docs": [
                "The origin filter prevent the call to be dispatched."
              ]
            }
          ]
        }
      },
      "docs": [
        "Error for the System pallet"
      ]
    }
  },
  {
    "id": 470,
    "type": {
      "path": [
        "pallet_utility",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TooManyCalls",
              "fields": [],
              "index": 0,
              "docs": [
                "Too many calls batched."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 471,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 472
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 473,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 472,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          158,
          11
        ]
      },
      "docs": []
    }
  },
  {
    "id": 473,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 472
        }
      },
      "docs": []
    }
  },
  {
    "id": 474,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 1
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 475,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 475,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 1
        }
      },
      "docs": []
    }
  },
  {
    "id": 476,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 477
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 477,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 477,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "PreDigest"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Primary",
              "fields": [
                {
                  "name": null,
                  "type": 478,
                  "typeName": "PrimaryPreDigest",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "SecondaryPlain",
              "fields": [
                {
                  "name": null,
                  "type": 480,
                  "typeName": "SecondaryPlainPreDigest",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "SecondaryVRF",
              "fields": [
                {
                  "name": null,
                  "type": 481,
                  "typeName": "SecondaryVRFPreDigest",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 478,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "PrimaryPreDigest"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "authority_index",
              "type": 4,
              "typeName": "super::AuthorityIndex",
              "docs": []
            },
            {
              "name": "slot",
              "type": 159,
              "typeName": "Slot",
              "docs": []
            },
            {
              "name": "vrf_signature",
              "type": 479,
              "typeName": "VrfSignature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 479,
    "type": {
      "path": [
        "sp_core",
        "sr25519",
        "vrf",
        "VrfSignature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "output",
              "type": 1,
              "typeName": "VrfOutput",
              "docs": []
            },
            {
              "name": "proof",
              "type": 253,
              "typeName": "VrfProof",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 480,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "SecondaryPlainPreDigest"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "authority_index",
              "type": 4,
              "typeName": "super::AuthorityIndex",
              "docs": []
            },
            {
              "name": "slot",
              "type": 159,
              "typeName": "Slot",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 481,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "SecondaryVRFPreDigest"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "authority_index",
              "type": 4,
              "typeName": "super::AuthorityIndex",
              "docs": []
            },
            {
              "name": "slot",
              "type": 159,
              "typeName": "Slot",
              "docs": []
            },
            {
              "name": "vrf_signature",
              "type": 479,
              "typeName": "VrfSignature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 482,
    "type": {
      "path": [
        "sp_consensus_babe",
        "BabeEpochConfiguration"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "c",
              "type": 162,
              "typeName": "(u64, u64)",
              "docs": []
            },
            {
              "name": "allowed_slots",
              "type": 163,
              "typeName": "AllowedSlots",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 483,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 484
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 485,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 484,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          11,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 485,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 484
        }
      },
      "docs": []
    }
  },
  {
    "id": 486,
    "type": {
      "path": [
        "pallet_babe",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidEquivocationProof",
              "fields": [],
              "index": 0,
              "docs": [
                "An equivocation proof provided as part of an equivocation report is invalid."
              ]
            },
            {
              "name": "InvalidKeyOwnershipProof",
              "fields": [],
              "index": 1,
              "docs": [
                "A key ownership proof provided as part of an equivocation report is invalid."
              ]
            },
            {
              "name": "DuplicateOffenceReport",
              "fields": [],
              "index": 2,
              "docs": [
                "A given equivocation report is valid but already previously reported."
              ]
            },
            {
              "name": "InvalidConfiguration",
              "fields": [],
              "index": 3,
              "docs": [
                "Submitted configuration is invalid."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 487,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          6,
          43
        ]
      },
      "docs": []
    }
  },
  {
    "id": 488,
    "type": {
      "path": [
        "pallet_indices",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotAssigned",
              "fields": [],
              "index": 0,
              "docs": [
                "The index was not already assigned."
              ]
            },
            {
              "name": "NotOwner",
              "fields": [],
              "index": 1,
              "docs": [
                "The index is assigned to another account."
              ]
            },
            {
              "name": "InUse",
              "fields": [],
              "index": 2,
              "docs": [
                "The index was not available."
              ]
            },
            {
              "name": "NotTransfer",
              "fields": [],
              "index": 3,
              "docs": [
                "The source and destination accounts are identical."
              ]
            },
            {
              "name": "Permanent",
              "fields": [],
              "index": 4,
              "docs": [
                "The index is permanent and may not be freed/changed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 489,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 490
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 492,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 490,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "BalanceLock"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 280,
              "typeName": "LockIdentifier",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "reasons",
              "type": 491,
              "typeName": "Reasons",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 491,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "Reasons"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Fee",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Misc",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "All",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 492,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 490
        }
      },
      "docs": []
    }
  },
  {
    "id": 493,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 494
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 495,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 494,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "ReserveData"
      ],
      "params": [
        {
          "name": "ReserveIdentifier",
          "type": 280
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 280,
              "typeName": "ReserveIdentifier",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 495,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 494
        }
      },
      "docs": []
    }
  },
  {
    "id": 496,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 497
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 503,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 497,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "IdAmount"
      ],
      "params": [
        {
          "name": "Id",
          "type": 498
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 498,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 498,
    "type": {
      "path": [
        "kitchensink_runtime",
        "RuntimeHoldReason"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Contracts",
              "fields": [
                {
                  "name": null,
                  "type": 499,
                  "typeName": "pallet_contracts::HoldReason",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Nis",
              "fields": [
                {
                  "name": null,
                  "type": 500,
                  "typeName": "pallet_nis::HoldReason",
                  "docs": []
                }
              ],
              "index": 43,
              "docs": []
            },
            {
              "name": "NftFractionalization",
              "fields": [
                {
                  "name": null,
                  "type": 501,
                  "typeName": "pallet_nft_fractionalization::HoldReason",
                  "docs": []
                }
              ],
              "index": 46,
              "docs": []
            },
            {
              "name": "SafeMode",
              "fields": [
                {
                  "name": null,
                  "type": 502,
                  "typeName": "pallet_safe_mode::HoldReason",
                  "docs": []
                }
              ],
              "index": 68,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 499,
    "type": {
      "path": [
        "pallet_contracts",
        "pallet",
        "HoldReason"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "CodeUploadDepositReserve",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "StorageDepositReserve",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 500,
    "type": {
      "path": [
        "pallet_nis",
        "pallet",
        "HoldReason"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NftReceipt",
              "fields": [],
              "index": 0,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 501,
    "type": {
      "path": [
        "pallet_nft_fractionalization",
        "pallet",
        "HoldReason"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Fractionalized",
              "fields": [],
              "index": 0,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 502,
    "type": {
      "path": [
        "pallet_safe_mode",
        "pallet",
        "HoldReason"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "EnterOrExtend",
              "fields": [],
              "index": 0,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 503,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 497
        }
      },
      "docs": []
    }
  },
  {
    "id": 504,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 505
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 506,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 505,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "IdAmount"
      ],
      "params": [
        {
          "name": "Id",
          "type": 32
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 32,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 506,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 505
        }
      },
      "docs": []
    }
  },
  {
    "id": 507,
    "type": {
      "path": [
        "pallet_balances",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "VestingBalance",
              "fields": [],
              "index": 0,
              "docs": [
                "Vesting balance too high to send value."
              ]
            },
            {
              "name": "LiquidityRestrictions",
              "fields": [],
              "index": 1,
              "docs": [
                "Account liquidity restrictions prevent withdrawal."
              ]
            },
            {
              "name": "InsufficientBalance",
              "fields": [],
              "index": 2,
              "docs": [
                "Balance too low to send value."
              ]
            },
            {
              "name": "ExistentialDeposit",
              "fields": [],
              "index": 3,
              "docs": [
                "Value too low to create account due to existential deposit."
              ]
            },
            {
              "name": "Expendability",
              "fields": [],
              "index": 4,
              "docs": [
                "Transfer/payment would kill account."
              ]
            },
            {
              "name": "ExistingVestingSchedule",
              "fields": [],
              "index": 5,
              "docs": [
                "A vesting schedule already exists for this account."
              ]
            },
            {
              "name": "DeadAccount",
              "fields": [],
              "index": 6,
              "docs": [
                "Beneficiary account must pre-exist."
              ]
            },
            {
              "name": "TooManyReserves",
              "fields": [],
              "index": 7,
              "docs": [
                "Number of named reserves exceed `MaxReserves`."
              ]
            },
            {
              "name": "TooManyHolds",
              "fields": [],
              "index": 8,
              "docs": [
                "Number of holds exceed `MaxHolds`."
              ]
            },
            {
              "name": "TooManyFreezes",
              "fields": [],
              "index": 9,
              "docs": [
                "Number of freezes exceed `MaxFreezes`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 508,
    "type": {
      "path": [
        "pallet_transaction_payment",
        "Releases"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V1Ancient",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "V2",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 509,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "ReadySolution"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": null
        },
        {
          "name": "MaxWinners",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "supports",
              "type": 510,
              "typeName": "BoundedSupports<AccountId, MaxWinners>",
              "docs": []
            },
            {
              "name": "score",
              "type": 44,
              "typeName": "ElectionScore",
              "docs": []
            },
            {
              "name": "compute",
              "type": 41,
              "typeName": "ElectionCompute",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 510,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 225
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 224,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 511,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "RoundSnapshot"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "DataProvider",
          "type": 512
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "voters",
              "type": 514,
              "typeName": "Vec<DataProvider>",
              "docs": []
            },
            {
              "name": "targets",
              "type": 89,
              "typeName": "Vec<AccountId>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 512,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          11,
          513
        ]
      },
      "docs": []
    }
  },
  {
    "id": 513,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 89,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 514,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 512
        }
      },
      "docs": []
    }
  },
  {
    "id": 515,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 516
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 517,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 516,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          44,
          4,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 517,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 516
        }
      },
      "docs": []
    }
  },
  {
    "id": 518,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "signed",
        "SignedSubmission"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Solution",
          "type": 171
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "raw_solution",
              "type": 170,
              "typeName": "RawSolution<Solution>",
              "docs": []
            },
            {
              "name": "call_fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 519,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PreDispatchEarlySubmission",
              "fields": [],
              "index": 0,
              "docs": [
                "Submission was too early."
              ]
            },
            {
              "name": "PreDispatchWrongWinnerCount",
              "fields": [],
              "index": 1,
              "docs": [
                "Wrong number of winners presented."
              ]
            },
            {
              "name": "PreDispatchWeakSubmission",
              "fields": [],
              "index": 2,
              "docs": [
                "Submission was too weak, score-wise."
              ]
            },
            {
              "name": "SignedQueueFull",
              "fields": [],
              "index": 3,
              "docs": [
                "The queue was full, and the solution was not better than any of the existing ones."
              ]
            },
            {
              "name": "SignedCannotPayDeposit",
              "fields": [],
              "index": 4,
              "docs": [
                "The origin failed to pay the deposit."
              ]
            },
            {
              "name": "SignedInvalidWitness",
              "fields": [],
              "index": 5,
              "docs": [
                "Witness data to dispatchable is invalid."
              ]
            },
            {
              "name": "SignedTooMuchWeight",
              "fields": [],
              "index": 6,
              "docs": [
                "The signed submission consumes too much weight"
              ]
            },
            {
              "name": "OcwCallWrongEra",
              "fields": [],
              "index": 7,
              "docs": [
                "OCW submitted solution for wrong round"
              ]
            },
            {
              "name": "MissingSnapshotMetadata",
              "fields": [],
              "index": 8,
              "docs": [
                "Snapshot metadata should exist but didn't."
              ]
            },
            {
              "name": "InvalidSubmissionIndex",
              "fields": [],
              "index": 9,
              "docs": [
                "`Self::insert_submission` returned an invalid index."
              ]
            },
            {
              "name": "CallNotAllowed",
              "fields": [],
              "index": 10,
              "docs": [
                "The call is not allowed at this point."
              ]
            },
            {
              "name": "FallbackFailed",
              "fields": [],
              "index": 11,
              "docs": [
                "The fallback failed"
              ]
            },
            {
              "name": "BoundNotMet",
              "fields": [],
              "index": 12,
              "docs": [
                "Some bound not met"
              ]
            },
            {
              "name": "TooManyWinners",
              "fields": [],
              "index": 13,
              "docs": [
                "Submitted solution has too many winners"
              ]
            }
          ]
        }
      },
      "docs": [
        "Error of the pallet that can be returned in response to dispatches."
      ]
    }
  },
  {
    "id": 520,
    "type": {
      "path": [
        "pallet_staking",
        "StakingLedger"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "stash",
              "type": 0,
              "typeName": "T::AccountId",
              "docs": []
            },
            {
              "name": "total",
              "type": 82,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "active",
              "type": 82,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "unlocking",
              "type": 521,
              "typeName": "BoundedVec<UnlockChunk<BalanceOf<T>>, T::MaxUnlockingChunks>",
              "docs": []
            },
            {
              "name": "claimed_rewards",
              "type": 524,
              "typeName": "BoundedVec<EraIndex, T::HistoryDepth>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 521,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 522
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 523,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 522,
    "type": {
      "path": [
        "pallet_staking",
        "UnlockChunk"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 82,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "era",
              "type": 157,
              "typeName": "EraIndex",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 523,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 522
        }
      },
      "docs": []
    }
  },
  {
    "id": 524,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 114,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 525,
    "type": {
      "path": [
        "pallet_staking",
        "Nominations"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "targets",
              "type": 513,
              "typeName": "BoundedVec<T::AccountId, MaxNominationsOf<T>>",
              "docs": []
            },
            {
              "name": "submitted_in",
              "type": 4,
              "typeName": "EraIndex",
              "docs": []
            },
            {
              "name": "suppressed",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 526,
    "type": {
      "path": [
        "pallet_staking",
        "ActiveEraInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "index",
              "type": 4,
              "typeName": "EraIndex",
              "docs": []
            },
            {
              "name": "start",
              "type": 527,
              "typeName": "Option<u64>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 527,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 11
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 11,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 528,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          0
        ]
      },
      "docs": []
    }
  },
  {
    "id": 529,
    "type": {
      "path": [
        "pallet_staking",
        "EraRewardPoints"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "total",
              "type": 4,
              "typeName": "RewardPoint",
              "docs": []
            },
            {
              "name": "individual",
              "type": 530,
              "typeName": "BTreeMap<AccountId, RewardPoint>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 530,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 0
        },
        {
          "name": "V",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 531,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 531,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 532
        }
      },
      "docs": []
    }
  },
  {
    "id": 532,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 533,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 534
        }
      },
      "docs": []
    }
  },
  {
    "id": 534,
    "type": {
      "path": [
        "pallet_staking",
        "UnappliedSlash"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "validator",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "own",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "others",
              "type": 61,
              "typeName": "Vec<(AccountId, Balance)>",
              "docs": []
            },
            {
              "name": "reporters",
              "type": 89,
              "typeName": "Vec<AccountId>",
              "docs": []
            },
            {
              "name": "payout",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 535,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          48,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 536,
    "type": {
      "path": [
        "pallet_staking",
        "slashing",
        "SlashingSpans"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "span_index",
              "type": 4,
              "typeName": "SpanIndex",
              "docs": []
            },
            {
              "name": "last_start",
              "type": 4,
              "typeName": "EraIndex",
              "docs": []
            },
            {
              "name": "last_nonzero_slash",
              "type": 4,
              "typeName": "EraIndex",
              "docs": []
            },
            {
              "name": "prior",
              "type": 114,
              "typeName": "Vec<EraIndex>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 537,
    "type": {
      "path": [
        "pallet_staking",
        "slashing",
        "SpanRecord"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "slashed",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "paid_out",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 538,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 539
        }
      },
      "docs": []
    }
  },
  {
    "id": 539,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          43
        ]
      },
      "docs": []
    }
  },
  {
    "id": 540,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotController",
              "fields": [],
              "index": 0,
              "docs": [
                "Not a controller account."
              ]
            },
            {
              "name": "NotStash",
              "fields": [],
              "index": 1,
              "docs": [
                "Not a stash account."
              ]
            },
            {
              "name": "AlreadyBonded",
              "fields": [],
              "index": 2,
              "docs": [
                "Stash is already bonded."
              ]
            },
            {
              "name": "AlreadyPaired",
              "fields": [],
              "index": 3,
              "docs": [
                "Controller is already paired."
              ]
            },
            {
              "name": "EmptyTargets",
              "fields": [],
              "index": 4,
              "docs": [
                "Targets cannot be empty."
              ]
            },
            {
              "name": "DuplicateIndex",
              "fields": [],
              "index": 5,
              "docs": [
                "Duplicate index."
              ]
            },
            {
              "name": "InvalidSlashIndex",
              "fields": [],
              "index": 6,
              "docs": [
                "Slash record index out of bounds."
              ]
            },
            {
              "name": "InsufficientBond",
              "fields": [],
              "index": 7,
              "docs": [
                "Cannot have a validator or nominator role, with value less than the minimum defined by",
                "governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the",
                "intention, `chill` first to remove one's role as validator/nominator."
              ]
            },
            {
              "name": "NoMoreChunks",
              "fields": [],
              "index": 8,
              "docs": [
                "Can not schedule more unlock chunks."
              ]
            },
            {
              "name": "NoUnlockChunk",
              "fields": [],
              "index": 9,
              "docs": [
                "Can not rebond without unlocking chunks."
              ]
            },
            {
              "name": "FundedTarget",
              "fields": [],
              "index": 10,
              "docs": [
                "Attempting to target a stash that still has funds."
              ]
            },
            {
              "name": "InvalidEraToReward",
              "fields": [],
              "index": 11,
              "docs": [
                "Invalid era to reward."
              ]
            },
            {
              "name": "InvalidNumberOfNominations",
              "fields": [],
              "index": 12,
              "docs": [
                "Invalid number of nominations."
              ]
            },
            {
              "name": "NotSortedAndUnique",
              "fields": [],
              "index": 13,
              "docs": [
                "Items are not sorted and unique."
              ]
            },
            {
              "name": "AlreadyClaimed",
              "fields": [],
              "index": 14,
              "docs": [
                "Rewards for this era have already been claimed for this validator."
              ]
            },
            {
              "name": "IncorrectHistoryDepth",
              "fields": [],
              "index": 15,
              "docs": [
                "Incorrect previous history depth input provided."
              ]
            },
            {
              "name": "IncorrectSlashingSpans",
              "fields": [],
              "index": 16,
              "docs": [
                "Incorrect number of slashing spans provided."
              ]
            },
            {
              "name": "BadState",
              "fields": [],
              "index": 17,
              "docs": [
                "Internal state has become somehow corrupted and the operation cannot continue."
              ]
            },
            {
              "name": "TooManyTargets",
              "fields": [],
              "index": 18,
              "docs": [
                "Too many nomination targets supplied."
              ]
            },
            {
              "name": "BadTarget",
              "fields": [],
              "index": 19,
              "docs": [
                "A nomination target was supplied that was blocked or otherwise not a validator."
              ]
            },
            {
              "name": "CannotChillOther",
              "fields": [],
              "index": 20,
              "docs": [
                "The user has enough bond and thus cannot be chilled forcefully by an external person."
              ]
            },
            {
              "name": "TooManyNominators",
              "fields": [],
              "index": 21,
              "docs": [
                "There are too many nominators in the system. Governance needs to adjust the staking",
                "settings to keep things safe for the runtime."
              ]
            },
            {
              "name": "TooManyValidators",
              "fields": [],
              "index": 22,
              "docs": [
                "There are too many validator candidates in the system. Governance needs to adjust the",
                "staking settings to keep things safe for the runtime."
              ]
            },
            {
              "name": "CommissionTooLow",
              "fields": [],
              "index": 23,
              "docs": [
                "Commission is too low. Must be at least `MinCommission`."
              ]
            },
            {
              "name": "BoundNotMet",
              "fields": [],
              "index": 24,
              "docs": [
                "Some bound is not met."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 541,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 542
        }
      },
      "docs": []
    }
  },
  {
    "id": 542,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          236
        ]
      },
      "docs": []
    }
  },
  {
    "id": 543,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          544,
          13
        ]
      },
      "docs": []
    }
  },
  {
    "id": 544,
    "type": {
      "path": [
        "sp_core",
        "crypto",
        "KeyTypeId"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 17,
              "typeName": "[u8; 4]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 545,
    "type": {
      "path": [
        "pallet_session",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidProof",
              "fields": [],
              "index": 0,
              "docs": [
                "Invalid ownership proof."
              ]
            },
            {
              "name": "NoAssociatedValidatorId",
              "fields": [],
              "index": 1,
              "docs": [
                "No associated validator ID for account."
              ]
            },
            {
              "name": "DuplicatedKey",
              "fields": [],
              "index": 2,
              "docs": [
                "Registered duplicate key."
              ]
            },
            {
              "name": "NoKeys",
              "fields": [],
              "index": 3,
              "docs": [
                "No keys are associated with this account."
              ]
            },
            {
              "name": "NoAccount",
              "fields": [],
              "index": 4,
              "docs": [
                "Key setting account is not live, so it's impossible to associate keys."
              ]
            }
          ]
        }
      },
      "docs": [
        "Error for the session pallet."
      ]
    }
  },
  {
    "id": 546,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 547
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 548,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 547,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          140,
          0
        ]
      },
      "docs": []
    }
  },
  {
    "id": 548,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 547
        }
      },
      "docs": []
    }
  },
  {
    "id": 549,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          550,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 550,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 89,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 551,
    "type": {
      "path": [
        "pallet_democracy",
        "types",
        "ReferendumInfo"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Proposal",
          "type": 140
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ongoing",
              "fields": [
                {
                  "name": null,
                  "type": 552,
                  "typeName": "ReferendumStatus<BlockNumber, Proposal, Balance>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Finished",
              "fields": [
                {
                  "name": "approved",
                  "type": 43,
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "end",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 552,
    "type": {
      "path": [
        "pallet_democracy",
        "types",
        "ReferendumStatus"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Proposal",
          "type": 140
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "end",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "proposal",
              "type": 140,
              "typeName": "Proposal",
              "docs": []
            },
            {
              "name": "threshold",
              "type": 54,
              "typeName": "VoteThreshold",
              "docs": []
            },
            {
              "name": "delay",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "tally",
              "type": 553,
              "typeName": "Tally<Balance>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 553,
    "type": {
      "path": [
        "pallet_democracy",
        "types",
        "Tally"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "ayes",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "nays",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "turnout",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 554,
    "type": {
      "path": [
        "pallet_democracy",
        "vote",
        "Voting"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "MaxVotes",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Direct",
              "fields": [
                {
                  "name": "votes",
                  "type": 555,
                  "typeName": "BoundedVec<(ReferendumIndex, AccountVote<Balance>), MaxVotes>",
                  "docs": []
                },
                {
                  "name": "delegations",
                  "type": 558,
                  "typeName": "Delegations<Balance>",
                  "docs": []
                },
                {
                  "name": "prior",
                  "type": 559,
                  "typeName": "PriorLock<BlockNumber, Balance>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Delegating",
              "fields": [
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "conviction",
                  "type": 239,
                  "typeName": "Conviction",
                  "docs": []
                },
                {
                  "name": "delegations",
                  "type": 558,
                  "typeName": "Delegations<Balance>",
                  "docs": []
                },
                {
                  "name": "prior",
                  "type": 559,
                  "typeName": "PriorLock<BlockNumber, Balance>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 555,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 556
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 557,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 556,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          55
        ]
      },
      "docs": []
    }
  },
  {
    "id": 557,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 556
        }
      },
      "docs": []
    }
  },
  {
    "id": 558,
    "type": {
      "path": [
        "pallet_democracy",
        "types",
        "Delegations"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "votes",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "capital",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 559,
    "type": {
      "path": [
        "pallet_democracy",
        "vote",
        "PriorLock"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": null,
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 560,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          140,
          54
        ]
      },
      "docs": []
    }
  },
  {
    "id": 561,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          550
        ]
      },
      "docs": []
    }
  },
  {
    "id": 562,
    "type": {
      "path": [
        "pallet_democracy",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ValueLow",
              "fields": [],
              "index": 0,
              "docs": [
                "Value too low"
              ]
            },
            {
              "name": "ProposalMissing",
              "fields": [],
              "index": 1,
              "docs": [
                "Proposal does not exist"
              ]
            },
            {
              "name": "AlreadyCanceled",
              "fields": [],
              "index": 2,
              "docs": [
                "Cannot cancel the same proposal twice"
              ]
            },
            {
              "name": "DuplicateProposal",
              "fields": [],
              "index": 3,
              "docs": [
                "Proposal already made"
              ]
            },
            {
              "name": "ProposalBlacklisted",
              "fields": [],
              "index": 4,
              "docs": [
                "Proposal still blacklisted"
              ]
            },
            {
              "name": "NotSimpleMajority",
              "fields": [],
              "index": 5,
              "docs": [
                "Next external proposal not simple majority"
              ]
            },
            {
              "name": "InvalidHash",
              "fields": [],
              "index": 6,
              "docs": [
                "Invalid hash"
              ]
            },
            {
              "name": "NoProposal",
              "fields": [],
              "index": 7,
              "docs": [
                "No external proposal"
              ]
            },
            {
              "name": "AlreadyVetoed",
              "fields": [],
              "index": 8,
              "docs": [
                "Identity may not veto a proposal twice"
              ]
            },
            {
              "name": "ReferendumInvalid",
              "fields": [],
              "index": 9,
              "docs": [
                "Vote given for invalid referendum"
              ]
            },
            {
              "name": "NoneWaiting",
              "fields": [],
              "index": 10,
              "docs": [
                "No proposals waiting"
              ]
            },
            {
              "name": "NotVoter",
              "fields": [],
              "index": 11,
              "docs": [
                "The given account did not vote on the referendum."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 12,
              "docs": [
                "The actor has no permission to conduct the action."
              ]
            },
            {
              "name": "AlreadyDelegating",
              "fields": [],
              "index": 13,
              "docs": [
                "The account is already delegating."
              ]
            },
            {
              "name": "InsufficientFunds",
              "fields": [],
              "index": 14,
              "docs": [
                "Too high a balance was provided that the account cannot afford."
              ]
            },
            {
              "name": "NotDelegating",
              "fields": [],
              "index": 15,
              "docs": [
                "The account is not currently delegating."
              ]
            },
            {
              "name": "VotesExist",
              "fields": [],
              "index": 16,
              "docs": [
                "The account currently has votes attached to it and the operation cannot succeed until",
                "these are removed, either through `unvote` or `reap_vote`."
              ]
            },
            {
              "name": "InstantNotAllowed",
              "fields": [],
              "index": 17,
              "docs": [
                "The instant referendum origin is currently disallowed."
              ]
            },
            {
              "name": "Nonsense",
              "fields": [],
              "index": 18,
              "docs": [
                "Delegation to oneself makes no sense."
              ]
            },
            {
              "name": "WrongUpperBound",
              "fields": [],
              "index": 19,
              "docs": [
                "Invalid upper bound."
              ]
            },
            {
              "name": "MaxVotesReached",
              "fields": [],
              "index": 20,
              "docs": [
                "Maximum number of votes reached."
              ]
            },
            {
              "name": "TooMany",
              "fields": [],
              "index": 21,
              "docs": [
                "Maximum number of items reached."
              ]
            },
            {
              "name": "VotingPeriodLow",
              "fields": [],
              "index": 22,
              "docs": [
                "Voting period too low"
              ]
            },
            {
              "name": "PreimageNotExist",
              "fields": [],
              "index": 23,
              "docs": [
                "The preimage does not exist."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 563,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 12
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 455,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 564,
    "type": {
      "path": [
        "pallet_collective",
        "Votes"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "index",
              "type": 4,
              "typeName": "ProposalIndex",
              "docs": []
            },
            {
              "name": "threshold",
              "type": 4,
              "typeName": "MemberCount",
              "docs": []
            },
            {
              "name": "ayes",
              "type": 89,
              "typeName": "Vec<AccountId>",
              "docs": []
            },
            {
              "name": "nays",
              "type": 89,
              "typeName": "Vec<AccountId>",
              "docs": []
            },
            {
              "name": "end",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 565,
    "type": {
      "path": [
        "pallet_collective",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotMember",
              "fields": [],
              "index": 0,
              "docs": [
                "Account is not a member"
              ]
            },
            {
              "name": "DuplicateProposal",
              "fields": [],
              "index": 1,
              "docs": [
                "Duplicate proposals not allowed"
              ]
            },
            {
              "name": "ProposalMissing",
              "fields": [],
              "index": 2,
              "docs": [
                "Proposal must exist"
              ]
            },
            {
              "name": "WrongIndex",
              "fields": [],
              "index": 3,
              "docs": [
                "Mismatched index"
              ]
            },
            {
              "name": "DuplicateVote",
              "fields": [],
              "index": 4,
              "docs": [
                "Duplicate vote ignored"
              ]
            },
            {
              "name": "AlreadyInitialized",
              "fields": [],
              "index": 5,
              "docs": [
                "Members are already initialized!"
              ]
            },
            {
              "name": "TooEarly",
              "fields": [],
              "index": 6,
              "docs": [
                "The close call was made too early, before the end of the voting."
              ]
            },
            {
              "name": "TooManyProposals",
              "fields": [],
              "index": 7,
              "docs": [
                "There can only be a maximum of `MaxProposals` active proposals."
              ]
            },
            {
              "name": "WrongProposalWeight",
              "fields": [],
              "index": 8,
              "docs": [
                "The given weight bound for the proposal was too low."
              ]
            },
            {
              "name": "WrongProposalLength",
              "fields": [],
              "index": 9,
              "docs": [
                "The given length bound for the proposal was too low."
              ]
            },
            {
              "name": "PrimeAccountNotMember",
              "fields": [],
              "index": 10,
              "docs": [
                "Prime account is not a member"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 566,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 12
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 455,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 567,
    "type": {
      "path": [
        "pallet_collective",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotMember",
              "fields": [],
              "index": 0,
              "docs": [
                "Account is not a member"
              ]
            },
            {
              "name": "DuplicateProposal",
              "fields": [],
              "index": 1,
              "docs": [
                "Duplicate proposals not allowed"
              ]
            },
            {
              "name": "ProposalMissing",
              "fields": [],
              "index": 2,
              "docs": [
                "Proposal must exist"
              ]
            },
            {
              "name": "WrongIndex",
              "fields": [],
              "index": 3,
              "docs": [
                "Mismatched index"
              ]
            },
            {
              "name": "DuplicateVote",
              "fields": [],
              "index": 4,
              "docs": [
                "Duplicate vote ignored"
              ]
            },
            {
              "name": "AlreadyInitialized",
              "fields": [],
              "index": 5,
              "docs": [
                "Members are already initialized!"
              ]
            },
            {
              "name": "TooEarly",
              "fields": [],
              "index": 6,
              "docs": [
                "The close call was made too early, before the end of the voting."
              ]
            },
            {
              "name": "TooManyProposals",
              "fields": [],
              "index": 7,
              "docs": [
                "There can only be a maximum of `MaxProposals` active proposals."
              ]
            },
            {
              "name": "WrongProposalWeight",
              "fields": [],
              "index": 8,
              "docs": [
                "The given weight bound for the proposal was too low."
              ]
            },
            {
              "name": "WrongProposalLength",
              "fields": [],
              "index": 9,
              "docs": [
                "The given length bound for the proposal was too low."
              ]
            },
            {
              "name": "PrimeAccountNotMember",
              "fields": [],
              "index": 10,
              "docs": [
                "Prime account is not a member"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 568,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 569
        }
      },
      "docs": []
    }
  },
  {
    "id": 569,
    "type": {
      "path": [
        "pallet_elections_phragmen",
        "SeatHolder"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "stake",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 570,
    "type": {
      "path": [
        "pallet_elections_phragmen",
        "Voter"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "votes",
              "type": 89,
              "typeName": "Vec<AccountId>",
              "docs": []
            },
            {
              "name": "stake",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 571,
    "type": {
      "path": [
        "pallet_elections_phragmen",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "UnableToVote",
              "fields": [],
              "index": 0,
              "docs": [
                "Cannot vote when no candidates or members exist."
              ]
            },
            {
              "name": "NoVotes",
              "fields": [],
              "index": 1,
              "docs": [
                "Must vote for at least one candidate."
              ]
            },
            {
              "name": "TooManyVotes",
              "fields": [],
              "index": 2,
              "docs": [
                "Cannot vote more than candidates."
              ]
            },
            {
              "name": "MaximumVotesExceeded",
              "fields": [],
              "index": 3,
              "docs": [
                "Cannot vote more than maximum allowed."
              ]
            },
            {
              "name": "LowBalance",
              "fields": [],
              "index": 4,
              "docs": [
                "Cannot vote with stake less than minimum balance."
              ]
            },
            {
              "name": "UnableToPayBond",
              "fields": [],
              "index": 5,
              "docs": [
                "Voter can not pay voting bond."
              ]
            },
            {
              "name": "MustBeVoter",
              "fields": [],
              "index": 6,
              "docs": [
                "Must be a voter."
              ]
            },
            {
              "name": "DuplicatedCandidate",
              "fields": [],
              "index": 7,
              "docs": [
                "Duplicated candidate submission."
              ]
            },
            {
              "name": "TooManyCandidates",
              "fields": [],
              "index": 8,
              "docs": [
                "Too many candidates have been created."
              ]
            },
            {
              "name": "MemberSubmit",
              "fields": [],
              "index": 9,
              "docs": [
                "Member cannot re-submit candidacy."
              ]
            },
            {
              "name": "RunnerUpSubmit",
              "fields": [],
              "index": 10,
              "docs": [
                "Runner cannot re-submit candidacy."
              ]
            },
            {
              "name": "InsufficientCandidateFunds",
              "fields": [],
              "index": 11,
              "docs": [
                "Candidate does not have enough funds."
              ]
            },
            {
              "name": "NotMember",
              "fields": [],
              "index": 12,
              "docs": [
                "Not a member."
              ]
            },
            {
              "name": "InvalidWitnessData",
              "fields": [],
              "index": 13,
              "docs": [
                "The provided count of number of candidates is incorrect."
              ]
            },
            {
              "name": "InvalidVoteCount",
              "fields": [],
              "index": 14,
              "docs": [
                "The provided count of number of votes is incorrect."
              ]
            },
            {
              "name": "InvalidRenouncing",
              "fields": [],
              "index": 15,
              "docs": [
                "The renouncing origin presented a wrong `Renouncing` parameter."
              ]
            },
            {
              "name": "InvalidReplacement",
              "fields": [],
              "index": 16,
              "docs": [
                "Prediction regarding replacement after member removal is wrong."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 572,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 89,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 573,
    "type": {
      "path": [
        "pallet_membership",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AlreadyMember",
              "fields": [],
              "index": 0,
              "docs": [
                "Already a member."
              ]
            },
            {
              "name": "NotMember",
              "fields": [],
              "index": 1,
              "docs": [
                "Not a member."
              ]
            },
            {
              "name": "TooManyMembers",
              "fields": [],
              "index": 2,
              "docs": [
                "Too many members."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 574,
    "type": {
      "path": [
        "pallet_grandpa",
        "StoredState"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Live",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "PendingPause",
              "fields": [
                {
                  "name": "scheduled_at",
                  "type": 4,
                  "typeName": "N",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "N",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Paused",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "PendingResume",
              "fields": [
                {
                  "name": "scheduled_at",
                  "type": 4,
                  "typeName": "N",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "N",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 575,
    "type": {
      "path": [
        "pallet_grandpa",
        "StoredPendingChange"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        },
        {
          "name": "Limit",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "scheduled_at",
              "type": 4,
              "typeName": "N",
              "docs": []
            },
            {
              "name": "delay",
              "type": 4,
              "typeName": "N",
              "docs": []
            },
            {
              "name": "next_authorities",
              "type": 576,
              "typeName": "BoundedAuthorityList<Limit>",
              "docs": []
            },
            {
              "name": "forced",
              "type": 38,
              "typeName": "Option<N>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 576,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 66
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 65,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 577,
    "type": {
      "path": [
        "pallet_grandpa",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PauseFailed",
              "fields": [],
              "index": 0,
              "docs": [
                "Attempt to signal GRANDPA pause when the authority set isn't live",
                "(either paused or already pending pause)."
              ]
            },
            {
              "name": "ResumeFailed",
              "fields": [],
              "index": 1,
              "docs": [
                "Attempt to signal GRANDPA resume when the authority set isn't paused",
                "(either live or already pending resume)."
              ]
            },
            {
              "name": "ChangePending",
              "fields": [],
              "index": 2,
              "docs": [
                "Attempt to signal GRANDPA change with one already pending."
              ]
            },
            {
              "name": "TooSoon",
              "fields": [],
              "index": 3,
              "docs": [
                "Cannot signal forced change so soon after last."
              ]
            },
            {
              "name": "InvalidKeyOwnershipProof",
              "fields": [],
              "index": 4,
              "docs": [
                "A key ownership proof provided as part of an equivocation report is invalid."
              ]
            },
            {
              "name": "InvalidEquivocationProof",
              "fields": [],
              "index": 5,
              "docs": [
                "An equivocation proof provided as part of an equivocation report is invalid."
              ]
            },
            {
              "name": "DuplicateOffenceReport",
              "fields": [],
              "index": 6,
              "docs": [
                "A given equivocation report is valid but already previously reported."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 578,
    "type": {
      "path": [
        "pallet_treasury",
        "Proposal"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "proposer",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "value",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "beneficiary",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "bond",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 579,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 114,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 580,
    "type": {
      "path": [
        "frame_support",
        "PalletId"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 280,
              "typeName": "[u8; 8]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 581,
    "type": {
      "path": [
        "pallet_treasury",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InsufficientProposersBalance",
              "fields": [],
              "index": 0,
              "docs": [
                "Proposer's balance is too low."
              ]
            },
            {
              "name": "InvalidIndex",
              "fields": [],
              "index": 1,
              "docs": [
                "No proposal or bounty at that index."
              ]
            },
            {
              "name": "TooManyApprovals",
              "fields": [],
              "index": 2,
              "docs": [
                "Too many approvals in the queue."
              ]
            },
            {
              "name": "InsufficientPermission",
              "fields": [],
              "index": 3,
              "docs": [
                "The spend origin is valid but the amount it is allowed to spend is lower than the",
                "amount to be spent."
              ]
            },
            {
              "name": "ProposalNotApproved",
              "fields": [],
              "index": 4,
              "docs": [
                "Proposal has not been approved."
              ]
            }
          ]
        }
      },
      "docs": [
        "Error for the treasury pallet."
      ]
    }
  },
  {
    "id": 582,
    "type": {
      "path": [
        "pallet_asset_rate",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "UnknownAssetKind",
              "fields": [],
              "index": 0,
              "docs": [
                "The given asset ID is unknown."
              ]
            },
            {
              "name": "AlreadyExists",
              "fields": [],
              "index": 1,
              "docs": [
                "The given asset ID already has an assigned conversion rate and cannot be re-created."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 583,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 584,
    "type": {
      "path": [
        "pallet_contracts",
        "wasm",
        "CodeInfo"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "owner",
              "type": 0,
              "typeName": "AccountIdOf<T>",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 82,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "refcount",
              "type": 10,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "determinism",
              "type": 262,
              "typeName": "Determinism",
              "docs": []
            },
            {
              "name": "code_len",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 585,
    "type": {
      "path": [
        "pallet_contracts",
        "storage",
        "ContractInfo"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "trie_id",
              "type": 113,
              "typeName": "TrieId",
              "docs": []
            },
            {
              "name": "code_hash",
              "type": 12,
              "typeName": "CodeHash<T>",
              "docs": []
            },
            {
              "name": "storage_bytes",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "storage_items",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "storage_byte_deposit",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "storage_item_deposit",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "storage_base_deposit",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "delegate_dependencies",
              "type": 586,
              "typeName": "BoundedBTreeMap<CodeHash<T>, BalanceOf<T>, T::\nMaxDelegateDependencies>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 586,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_btree_map",
        "BoundedBTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 12
        },
        {
          "name": "V",
          "type": 6
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 587,
              "typeName": "BTreeMap<K, V>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 587,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 12
        },
        {
          "name": "V",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 588,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 588,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 589
        }
      },
      "docs": []
    }
  },
  {
    "id": 589,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          12,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 590,
    "type": {
      "path": [
        "pallet_contracts",
        "storage",
        "DeletionQueueManager"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "insert_counter",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "delete_counter",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 591,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 592,
    "type": {
      "path": [
        "pallet_contracts",
        "schedule",
        "Schedule"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "limits",
              "type": 593,
              "typeName": "Limits",
              "docs": []
            },
            {
              "name": "instruction_weights",
              "type": 594,
              "typeName": "InstructionWeights<T>",
              "docs": []
            },
            {
              "name": "host_fn_weights",
              "type": 595,
              "typeName": "HostFnWeights<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 593,
    "type": {
      "path": [
        "pallet_contracts",
        "schedule",
        "Limits"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "event_topics",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "globals",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "locals",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "parameters",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "memory_pages",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "table_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "br_table_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "subject_len",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "payload_len",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "runtime_memory",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 594,
    "type": {
      "path": [
        "pallet_contracts",
        "schedule",
        "InstructionWeights"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "base",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 595,
    "type": {
      "path": [
        "pallet_contracts",
        "schedule",
        "HostFnWeights"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "caller",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "is_contract",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "code_hash",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "own_code_hash",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "caller_is_origin",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "caller_is_root",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "address",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "gas_left",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "balance",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "value_transferred",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "minimum_balance",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "block_number",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "now",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "weight_to_fee",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "input",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "input_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "r#return",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "return_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "terminate",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "random",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "deposit_event",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "deposit_event_per_topic",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "deposit_event_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "debug_message",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "debug_message_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "set_storage",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "set_storage_per_new_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "set_storage_per_old_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "set_code_hash",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "clear_storage",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "clear_storage_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "contains_storage",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "contains_storage_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "get_storage",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "get_storage_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "take_storage",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "take_storage_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "transfer",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "call",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "delegate_call",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "call_transfer_surcharge",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "call_per_cloned_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "instantiate",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "instantiate_transfer_surcharge",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "instantiate_per_input_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "instantiate_per_salt_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "hash_sha2_256",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "hash_sha2_256_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "hash_keccak_256",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "hash_keccak_256_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "hash_blake2_256",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "hash_blake2_256_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "hash_blake2_128",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "hash_blake2_128_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "ecdsa_recover",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "ecdsa_to_eth_address",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "sr25519_verify",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "sr25519_verify_per_byte",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "reentrance_count",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "account_reentrance_count",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "instantiation_nonce",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "add_delegate_dependency",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "remove_delegate_dependency",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 596,
    "type": {
      "path": [
        "pallet_contracts",
        "Environment"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account_id",
              "type": 597,
              "typeName": "EnvironmentType<AccountIdOf<T>>",
              "docs": []
            },
            {
              "name": "balance",
              "type": 598,
              "typeName": "EnvironmentType<BalanceOf<T>>",
              "docs": []
            },
            {
              "name": "hash",
              "type": 599,
              "typeName": "EnvironmentType<<T as frame_system::Config>::Hash>",
              "docs": []
            },
            {
              "name": "hasher",
              "type": 600,
              "typeName": "EnvironmentType<<T as frame_system::Config>::Hashing>",
              "docs": []
            },
            {
              "name": "timestamp",
              "type": 602,
              "typeName": "EnvironmentType<MomentOf<T>>",
              "docs": []
            },
            {
              "name": "block_number",
              "type": 603,
              "typeName": "EnvironmentType<BlockNumberFor<T>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 597,
    "type": {
      "path": [
        "pallet_contracts",
        "EnvironmentType"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 598,
    "type": {
      "path": [
        "pallet_contracts",
        "EnvironmentType"
      ],
      "params": [
        {
          "name": "T",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 599,
    "type": {
      "path": [
        "pallet_contracts",
        "EnvironmentType"
      ],
      "params": [
        {
          "name": "T",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 600,
    "type": {
      "path": [
        "pallet_contracts",
        "EnvironmentType"
      ],
      "params": [
        {
          "name": "T",
          "type": 601
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 601,
    "type": {
      "path": [
        "sp_runtime",
        "traits",
        "BlakeTwo256"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 602,
    "type": {
      "path": [
        "pallet_contracts",
        "EnvironmentType"
      ],
      "params": [
        {
          "name": "T",
          "type": 11
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 603,
    "type": {
      "path": [
        "pallet_contracts",
        "EnvironmentType"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 604,
    "type": {
      "path": [
        "pallet_contracts",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidSchedule",
              "fields": [],
              "index": 0,
              "docs": [
                "Invalid schedule supplied, e.g. with zero weight of a basic operation."
              ]
            },
            {
              "name": "InvalidCallFlags",
              "fields": [],
              "index": 1,
              "docs": [
                "Invalid combination of flags supplied to `seal_call` or `seal_delegate_call`."
              ]
            },
            {
              "name": "OutOfGas",
              "fields": [],
              "index": 2,
              "docs": [
                "The executed contract exhausted its gas limit."
              ]
            },
            {
              "name": "OutputBufferTooSmall",
              "fields": [],
              "index": 3,
              "docs": [
                "The output buffer supplied to a contract API call was too small."
              ]
            },
            {
              "name": "TransferFailed",
              "fields": [],
              "index": 4,
              "docs": [
                "Performing the requested transfer failed. Probably because there isn't enough",
                "free balance in the sender's account."
              ]
            },
            {
              "name": "MaxCallDepthReached",
              "fields": [],
              "index": 5,
              "docs": [
                "Performing a call was denied because the calling depth reached the limit",
                "of what is specified in the schedule."
              ]
            },
            {
              "name": "ContractNotFound",
              "fields": [],
              "index": 6,
              "docs": [
                "No contract was found at the specified address."
              ]
            },
            {
              "name": "CodeTooLarge",
              "fields": [],
              "index": 7,
              "docs": [
                "The code supplied to `instantiate_with_code` exceeds the limit specified in the",
                "current schedule."
              ]
            },
            {
              "name": "CodeNotFound",
              "fields": [],
              "index": 8,
              "docs": [
                "No code could be found at the supplied code hash."
              ]
            },
            {
              "name": "CodeInfoNotFound",
              "fields": [],
              "index": 9,
              "docs": [
                "No code info could be found at the supplied code hash."
              ]
            },
            {
              "name": "OutOfBounds",
              "fields": [],
              "index": 10,
              "docs": [
                "A buffer outside of sandbox memory was passed to a contract API function."
              ]
            },
            {
              "name": "DecodingFailed",
              "fields": [],
              "index": 11,
              "docs": [
                "Input passed to a contract API function failed to decode as expected type."
              ]
            },
            {
              "name": "ContractTrapped",
              "fields": [],
              "index": 12,
              "docs": [
                "Contract trapped during execution."
              ]
            },
            {
              "name": "ValueTooLarge",
              "fields": [],
              "index": 13,
              "docs": [
                "The size defined in `T::MaxValueSize` was exceeded."
              ]
            },
            {
              "name": "TerminatedWhileReentrant",
              "fields": [],
              "index": 14,
              "docs": [
                "Termination of a contract is not allowed while the contract is already",
                "on the call stack. Can be triggered by `seal_terminate`."
              ]
            },
            {
              "name": "InputForwarded",
              "fields": [],
              "index": 15,
              "docs": [
                "`seal_call` forwarded this contracts input. It therefore is no longer available."
              ]
            },
            {
              "name": "RandomSubjectTooLong",
              "fields": [],
              "index": 16,
              "docs": [
                "The subject passed to `seal_random` exceeds the limit."
              ]
            },
            {
              "name": "TooManyTopics",
              "fields": [],
              "index": 17,
              "docs": [
                "The amount of topics passed to `seal_deposit_events` exceeds the limit."
              ]
            },
            {
              "name": "NoChainExtension",
              "fields": [],
              "index": 18,
              "docs": [
                "The chain does not provide a chain extension. Calling the chain extension results",
                "in this error. Note that this usually  shouldn't happen as deploying such contracts",
                "is rejected."
              ]
            },
            {
              "name": "DuplicateContract",
              "fields": [],
              "index": 19,
              "docs": [
                "A contract with the same AccountId already exists."
              ]
            },
            {
              "name": "TerminatedInConstructor",
              "fields": [],
              "index": 20,
              "docs": [
                "A contract self destructed in its constructor.",
                "",
                "This can be triggered by a call to `seal_terminate`."
              ]
            },
            {
              "name": "ReentranceDenied",
              "fields": [],
              "index": 21,
              "docs": [
                "A call tried to invoke a contract that is flagged as non-reentrant.",
                "The only other cause is that a call from a contract into the runtime tried to call back",
                "into `pallet-contracts`. This would make the whole pallet reentrant with regard to",
                "contract code execution which is not supported."
              ]
            },
            {
              "name": "StorageDepositNotEnoughFunds",
              "fields": [],
              "index": 22,
              "docs": [
                "Origin doesn't have enough balance to pay the required storage deposits."
              ]
            },
            {
              "name": "StorageDepositLimitExhausted",
              "fields": [],
              "index": 23,
              "docs": [
                "More storage was created than allowed by the storage deposit limit."
              ]
            },
            {
              "name": "CodeInUse",
              "fields": [],
              "index": 24,
              "docs": [
                "Code removal was denied because the code is still in use by at least one contract."
              ]
            },
            {
              "name": "ContractReverted",
              "fields": [],
              "index": 25,
              "docs": [
                "The contract ran to completion but decided to revert its storage changes.",
                "Please note that this error is only returned from extrinsics. When called directly",
                "or via RPC an `Ok` will be returned. In this case the caller needs to inspect the flags",
                "to determine whether a reversion has taken place."
              ]
            },
            {
              "name": "CodeRejected",
              "fields": [],
              "index": 26,
              "docs": [
                "The contract's code was found to be invalid during validation.",
                "",
                "The most likely cause of this is that an API was used which is not supported by the",
                "node. This happens if an older node is used with a new version of ink!. Try updating",
                "your node to the newest available version.",
                "",
                "A more detailed error can be found on the node console if debug messages are enabled",
                "by supplying `-lruntime::contracts=debug`."
              ]
            },
            {
              "name": "Indeterministic",
              "fields": [],
              "index": 27,
              "docs": [
                "An indetermistic code was used in a context where this is not permitted."
              ]
            },
            {
              "name": "MigrationInProgress",
              "fields": [],
              "index": 28,
              "docs": [
                "A pending migration needs to complete before the extrinsic can be called."
              ]
            },
            {
              "name": "NoMigrationPerformed",
              "fields": [],
              "index": 29,
              "docs": [
                "Migrate dispatch call was attempted but no migration was performed."
              ]
            },
            {
              "name": "MaxDelegateDependenciesReached",
              "fields": [],
              "index": 30,
              "docs": [
                "The contract has reached its maximum number of delegate dependencies."
              ]
            },
            {
              "name": "DelegateDependencyNotFound",
              "fields": [],
              "index": 31,
              "docs": [
                "The dependency was not found in the contract's delegate dependencies."
              ]
            },
            {
              "name": "DelegateDependencyAlreadyExists",
              "fields": [],
              "index": 32,
              "docs": [
                "The contract already depends on the given delegate dependency."
              ]
            },
            {
              "name": "CannotAddSelfAsDelegateDependency",
              "fields": [],
              "index": 33,
              "docs": [
                "Can not add a delegate dependency to the code hash of the contract itself."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 605,
    "type": {
      "path": [
        "pallet_sudo",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "RequireSudo",
              "fields": [],
              "index": 0,
              "docs": [
                "Sender must be the Sudo account"
              ]
            }
          ]
        }
      },
      "docs": [
        "Error for the Sudo pallet"
      ]
    }
  },
  {
    "id": 606,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 77
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 607,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 607,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 77
        }
      },
      "docs": []
    }
  },
  {
    "id": 608,
    "type": {
      "path": [
        "pallet_im_online",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidKey",
              "fields": [],
              "index": 0,
              "docs": [
                "Non existent public key."
              ]
            },
            {
              "name": "DuplicatedHeartbeat",
              "fields": [],
              "index": 1,
              "docs": [
                "Duplicated heartbeat."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 609,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 237
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 610,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 610,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 237
        }
      },
      "docs": []
    }
  },
  {
    "id": 611,
    "type": {
      "path": [
        "sp_staking",
        "offence",
        "OffenceDetails"
      ],
      "params": [
        {
          "name": "Reporter",
          "type": 0
        },
        {
          "name": "Offender",
          "type": 80
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "offender",
              "type": 80,
              "typeName": "Offender",
              "docs": []
            },
            {
              "name": "reporters",
              "type": 89,
              "typeName": "Vec<Reporter>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 612,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          86,
          13
        ]
      },
      "docs": []
    }
  },
  {
    "id": 613,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 12
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 455,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 614,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "Registration"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "MaxJudgements",
          "type": null
        },
        {
          "name": "MaxAdditionalFields",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "judgements",
              "type": 615,
              "typeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "info",
              "type": 269,
              "typeName": "IdentityInfo<MaxAdditionalFields>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 615,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 616
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 617,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 616,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          308
        ]
      },
      "docs": []
    }
  },
  {
    "id": 617,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 616
        }
      },
      "docs": []
    }
  },
  {
    "id": 618,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          6,
          619
        ]
      },
      "docs": []
    }
  },
  {
    "id": 619,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 89,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 620,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 621
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 623,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 621,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 622
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 622,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 622,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "RegistrarInfo"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "fields",
              "type": 306,
              "typeName": "IdentityFields",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 623,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 621
        }
      },
      "docs": []
    }
  },
  {
    "id": 624,
    "type": {
      "path": [
        "pallet_identity",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TooManySubAccounts",
              "fields": [],
              "index": 0,
              "docs": [
                "Too many subs-accounts."
              ]
            },
            {
              "name": "NotFound",
              "fields": [],
              "index": 1,
              "docs": [
                "Account isn't found."
              ]
            },
            {
              "name": "NotNamed",
              "fields": [],
              "index": 2,
              "docs": [
                "Account isn't named."
              ]
            },
            {
              "name": "EmptyIndex",
              "fields": [],
              "index": 3,
              "docs": [
                "Empty index."
              ]
            },
            {
              "name": "FeeChanged",
              "fields": [],
              "index": 4,
              "docs": [
                "Fee is changed."
              ]
            },
            {
              "name": "NoIdentity",
              "fields": [],
              "index": 5,
              "docs": [
                "No identity found."
              ]
            },
            {
              "name": "StickyJudgement",
              "fields": [],
              "index": 6,
              "docs": [
                "Sticky judgement."
              ]
            },
            {
              "name": "JudgementGiven",
              "fields": [],
              "index": 7,
              "docs": [
                "Judgement given."
              ]
            },
            {
              "name": "InvalidJudgement",
              "fields": [],
              "index": 8,
              "docs": [
                "Invalid judgement."
              ]
            },
            {
              "name": "InvalidIndex",
              "fields": [],
              "index": 9,
              "docs": [
                "The index is invalid."
              ]
            },
            {
              "name": "InvalidTarget",
              "fields": [],
              "index": 10,
              "docs": [
                "The target is invalid."
              ]
            },
            {
              "name": "TooManyFields",
              "fields": [],
              "index": 11,
              "docs": [
                "Too many additional fields."
              ]
            },
            {
              "name": "TooManyRegistrars",
              "fields": [],
              "index": 12,
              "docs": [
                "Maximum amount of registrars reached. Cannot add any more."
              ]
            },
            {
              "name": "AlreadyClaimed",
              "fields": [],
              "index": 13,
              "docs": [
                "Account ID is already named."
              ]
            },
            {
              "name": "NotSub",
              "fields": [],
              "index": 14,
              "docs": [
                "Sender is not a sub-account."
              ]
            },
            {
              "name": "NotOwned",
              "fields": [],
              "index": 15,
              "docs": [
                "Sub-account isn't owned by sender."
              ]
            },
            {
              "name": "JudgementForDifferentIdentity",
              "fields": [],
              "index": 16,
              "docs": [
                "The provided judgement was for a different identity."
              ]
            },
            {
              "name": "JudgementPaymentFailed",
              "fields": [],
              "index": 17,
              "docs": [
                "Error that occurs when there is an issue paying for judgement."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 625,
    "type": {
      "path": [
        "pallet_society",
        "MemberRecord"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "rank",
              "type": 4,
              "typeName": "Rank",
              "docs": []
            },
            {
              "name": "strikes",
              "type": 4,
              "typeName": "StrikeCount",
              "docs": []
            },
            {
              "name": "vouching",
              "type": 626,
              "typeName": "Option<VouchingStatus>",
              "docs": []
            },
            {
              "name": "index",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 626,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 627
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 627,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 627,
    "type": {
      "path": [
        "pallet_society",
        "VouchingStatus"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Vouching",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Banned",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 628,
    "type": {
      "path": [
        "pallet_society",
        "PayoutRecord"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "PayoutsVec",
          "type": 629
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "paid",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "payouts",
              "type": 629,
              "typeName": "PayoutsVec",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 629,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 630
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 631,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 630,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 631,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 630
        }
      },
      "docs": []
    }
  },
  {
    "id": 632,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 633
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 635,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 633,
    "type": {
      "path": [
        "pallet_society",
        "Bid"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "kind",
              "type": 634,
              "typeName": "BidKind<AccountId, Balance>",
              "docs": []
            },
            {
              "name": "value",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 634,
    "type": {
      "path": [
        "pallet_society",
        "BidKind"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Deposit",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Vouch",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 635,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 633
        }
      },
      "docs": []
    }
  },
  {
    "id": 636,
    "type": {
      "path": [
        "pallet_society",
        "Candidacy"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "round",
              "type": 4,
              "typeName": "RoundIndex",
              "docs": []
            },
            {
              "name": "kind",
              "type": 634,
              "typeName": "BidKind<AccountId, Balance>",
              "docs": []
            },
            {
              "name": "bid",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "tally",
              "type": 637,
              "typeName": "Tally",
              "docs": []
            },
            {
              "name": "skeptic_struck",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 637,
    "type": {
      "path": [
        "pallet_society",
        "Tally"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "approvals",
              "type": 4,
              "typeName": "VoteCount",
              "docs": []
            },
            {
              "name": "rejections",
              "type": 4,
              "typeName": "VoteCount",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 638,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          0
        ]
      },
      "docs": []
    }
  },
  {
    "id": 639,
    "type": {
      "path": [
        "pallet_society",
        "Vote"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "approve",
              "type": 43,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "weight",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 640,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 641,
    "type": {
      "path": [
        "pallet_society",
        "IntakeRecord"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "bid",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "round",
              "type": 4,
              "typeName": "RoundIndex",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 642,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          0,
          637
        ]
      },
      "docs": []
    }
  },
  {
    "id": 643,
    "type": {
      "path": [
        "pallet_society",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotMember",
              "fields": [],
              "index": 0,
              "docs": [
                "User is not a member."
              ]
            },
            {
              "name": "AlreadyMember",
              "fields": [],
              "index": 1,
              "docs": [
                "User is already a member."
              ]
            },
            {
              "name": "Suspended",
              "fields": [],
              "index": 2,
              "docs": [
                "User is suspended."
              ]
            },
            {
              "name": "NotSuspended",
              "fields": [],
              "index": 3,
              "docs": [
                "User is not suspended."
              ]
            },
            {
              "name": "NoPayout",
              "fields": [],
              "index": 4,
              "docs": [
                "Nothing to payout."
              ]
            },
            {
              "name": "AlreadyFounded",
              "fields": [],
              "index": 5,
              "docs": [
                "Society already founded."
              ]
            },
            {
              "name": "InsufficientPot",
              "fields": [],
              "index": 6,
              "docs": [
                "Not enough in pot to accept candidate."
              ]
            },
            {
              "name": "AlreadyVouching",
              "fields": [],
              "index": 7,
              "docs": [
                "Member is already vouching or banned from vouching again."
              ]
            },
            {
              "name": "NotVouchingOnBidder",
              "fields": [],
              "index": 8,
              "docs": [
                "Member is not vouching."
              ]
            },
            {
              "name": "Head",
              "fields": [],
              "index": 9,
              "docs": [
                "Cannot remove the head of the chain."
              ]
            },
            {
              "name": "Founder",
              "fields": [],
              "index": 10,
              "docs": [
                "Cannot remove the founder."
              ]
            },
            {
              "name": "AlreadyBid",
              "fields": [],
              "index": 11,
              "docs": [
                "User has already made a bid."
              ]
            },
            {
              "name": "AlreadyCandidate",
              "fields": [],
              "index": 12,
              "docs": [
                "User is already a candidate."
              ]
            },
            {
              "name": "NotCandidate",
              "fields": [],
              "index": 13,
              "docs": [
                "User is not a candidate."
              ]
            },
            {
              "name": "MaxMembers",
              "fields": [],
              "index": 14,
              "docs": [
                "Too many members in the society."
              ]
            },
            {
              "name": "NotFounder",
              "fields": [],
              "index": 15,
              "docs": [
                "The caller is not the founder."
              ]
            },
            {
              "name": "NotHead",
              "fields": [],
              "index": 16,
              "docs": [
                "The caller is not the head."
              ]
            },
            {
              "name": "NotApproved",
              "fields": [],
              "index": 17,
              "docs": [
                "The membership cannot be claimed as the candidate was not clearly approved."
              ]
            },
            {
              "name": "NotRejected",
              "fields": [],
              "index": 18,
              "docs": [
                "The candidate cannot be kicked as the candidate was not clearly rejected."
              ]
            },
            {
              "name": "Approved",
              "fields": [],
              "index": 19,
              "docs": [
                "The candidacy cannot be dropped as the candidate was clearly approved."
              ]
            },
            {
              "name": "Rejected",
              "fields": [],
              "index": 20,
              "docs": [
                "The candidacy cannot be bestowed as the candidate was clearly rejected."
              ]
            },
            {
              "name": "InProgress",
              "fields": [],
              "index": 21,
              "docs": [
                "The candidacy cannot be concluded as the voting is still in progress."
              ]
            },
            {
              "name": "TooEarly",
              "fields": [],
              "index": 22,
              "docs": [
                "The candidacy cannot be pruned until a full additional intake period has passed."
              ]
            },
            {
              "name": "Voted",
              "fields": [],
              "index": 23,
              "docs": [
                "The skeptic already voted."
              ]
            },
            {
              "name": "Expired",
              "fields": [],
              "index": 24,
              "docs": [
                "The skeptic need not vote on candidates from expired rounds."
              ]
            },
            {
              "name": "NotBidder",
              "fields": [],
              "index": 25,
              "docs": [
                "User is not a bidder."
              ]
            },
            {
              "name": "NoDefender",
              "fields": [],
              "index": 26,
              "docs": [
                "There is no defender currently."
              ]
            },
            {
              "name": "NotGroup",
              "fields": [],
              "index": 27,
              "docs": [
                "Group doesn't exist."
              ]
            },
            {
              "name": "AlreadyElevated",
              "fields": [],
              "index": 28,
              "docs": [
                "The member is already elevated to this rank."
              ]
            },
            {
              "name": "AlreadyPunished",
              "fields": [],
              "index": 29,
              "docs": [
                "The skeptic has already been punished for this offence."
              ]
            },
            {
              "name": "InsufficientFunds",
              "fields": [],
              "index": 30,
              "docs": [
                "Funds are insufficient to pay off society debts."
              ]
            },
            {
              "name": "NoVotes",
              "fields": [],
              "index": 31,
              "docs": [
                "The candidate/defender has no stale votes to remove."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 644,
    "type": {
      "path": [
        "pallet_recovery",
        "RecoveryConfig"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Friends",
          "type": 645
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "delay_period",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "friends",
              "type": 645,
              "typeName": "Friends",
              "docs": []
            },
            {
              "name": "threshold",
              "type": 101,
              "typeName": "u16",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 645,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 89,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 646,
    "type": {
      "path": [
        "pallet_recovery",
        "ActiveRecovery"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Friends",
          "type": 645
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "created",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "friends",
              "type": 645,
              "typeName": "Friends",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 647,
    "type": {
      "path": [
        "pallet_recovery",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotAllowed",
              "fields": [],
              "index": 0,
              "docs": [
                "User is not allowed to make a call on behalf of this account"
              ]
            },
            {
              "name": "ZeroThreshold",
              "fields": [],
              "index": 1,
              "docs": [
                "Threshold must be greater than zero"
              ]
            },
            {
              "name": "NotEnoughFriends",
              "fields": [],
              "index": 2,
              "docs": [
                "Friends list must be greater than zero and threshold"
              ]
            },
            {
              "name": "MaxFriends",
              "fields": [],
              "index": 3,
              "docs": [
                "Friends list must be less than max friends"
              ]
            },
            {
              "name": "NotSorted",
              "fields": [],
              "index": 4,
              "docs": [
                "Friends list must be sorted and free of duplicates"
              ]
            },
            {
              "name": "NotRecoverable",
              "fields": [],
              "index": 5,
              "docs": [
                "This account is not set up for recovery"
              ]
            },
            {
              "name": "AlreadyRecoverable",
              "fields": [],
              "index": 6,
              "docs": [
                "This account is already set up for recovery"
              ]
            },
            {
              "name": "AlreadyStarted",
              "fields": [],
              "index": 7,
              "docs": [
                "A recovery process has already started for this account"
              ]
            },
            {
              "name": "NotStarted",
              "fields": [],
              "index": 8,
              "docs": [
                "A recovery process has not started for this rescuer"
              ]
            },
            {
              "name": "NotFriend",
              "fields": [],
              "index": 9,
              "docs": [
                "This account is not a friend who can vouch"
              ]
            },
            {
              "name": "DelayPeriod",
              "fields": [],
              "index": 10,
              "docs": [
                "The friend must wait until the delay period to vouch for this recovery"
              ]
            },
            {
              "name": "AlreadyVouched",
              "fields": [],
              "index": 11,
              "docs": [
                "This user has already vouched for this recovery"
              ]
            },
            {
              "name": "Threshold",
              "fields": [],
              "index": 12,
              "docs": [
                "The threshold for recovering this account has not been met"
              ]
            },
            {
              "name": "StillActive",
              "fields": [],
              "index": 13,
              "docs": [
                "There are still active recovery attempts that need to be closed"
              ]
            },
            {
              "name": "AlreadyProxy",
              "fields": [],
              "index": 14,
              "docs": [
                "This account is already set up for recovery"
              ]
            },
            {
              "name": "BadState",
              "fields": [],
              "index": 15,
              "docs": [
                "Some internal state is broken."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 648,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 312
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 649,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 649,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 312
        }
      },
      "docs": []
    }
  },
  {
    "id": 650,
    "type": {
      "path": [
        "pallet_vesting",
        "Releases"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V0",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "V1",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 651,
    "type": {
      "path": [
        "pallet_vesting",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotVesting",
              "fields": [],
              "index": 0,
              "docs": [
                "The account given is not vesting."
              ]
            },
            {
              "name": "AtMaxVestingSchedules",
              "fields": [],
              "index": 1,
              "docs": [
                "The account already has `MaxVestingSchedules` count of schedules and thus",
                "cannot add another one. Consider merging existing schedules in order to add another."
              ]
            },
            {
              "name": "AmountLow",
              "fields": [],
              "index": 2,
              "docs": [
                "Amount being transferred is too low to create a vesting schedule."
              ]
            },
            {
              "name": "ScheduleIndexOutOfBounds",
              "fields": [],
              "index": 3,
              "docs": [
                "An index was out of bounds of the vesting schedules."
              ]
            },
            {
              "name": "InvalidScheduleParams",
              "fields": [],
              "index": 4,
              "docs": [
                "Failed to create a new schedule because some parameter was invalid."
              ]
            }
          ]
        }
      },
      "docs": [
        "Error for the vesting pallet."
      ]
    }
  },
  {
    "id": 652,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 653
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 655,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 653,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 654
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 654,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 654,
    "type": {
      "path": [
        "pallet_scheduler",
        "Scheduled"
      ],
      "params": [
        {
          "name": "Name",
          "type": 1
        },
        {
          "name": "Call",
          "type": 140
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "PalletsOrigin",
          "type": 148
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "maybe_id",
              "type": 95,
              "typeName": "Option<Name>",
              "docs": []
            },
            {
              "name": "priority",
              "type": 2,
              "typeName": "schedule::Priority",
              "docs": []
            },
            {
              "name": "call",
              "type": 140,
              "typeName": "Call",
              "docs": []
            },
            {
              "name": "maybe_periodic",
              "type": 314,
              "typeName": "Option<schedule::Period<BlockNumber>>",
              "docs": []
            },
            {
              "name": "origin",
              "type": 148,
              "typeName": "PalletsOrigin",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 655,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 653
        }
      },
      "docs": []
    }
  },
  {
    "id": 656,
    "type": {
      "path": [
        "pallet_scheduler",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "FailedToSchedule",
              "fields": [],
              "index": 0,
              "docs": [
                "Failed to schedule a call"
              ]
            },
            {
              "name": "NotFound",
              "fields": [],
              "index": 1,
              "docs": [
                "Cannot find the scheduled call."
              ]
            },
            {
              "name": "TargetBlockNumberInPast",
              "fields": [],
              "index": 2,
              "docs": [
                "Given target block number is in the past."
              ]
            },
            {
              "name": "RescheduleNoChange",
              "fields": [],
              "index": 3,
              "docs": [
                "Reschedule failed because it does not change scheduled time."
              ]
            },
            {
              "name": "Named",
              "fields": [],
              "index": 4,
              "docs": [
                "Attempt to use a non-named function on a named task."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 657,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 1024,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 658,
    "type": {
      "path": [
        "pallet_glutton",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AlreadyInitialized",
              "fields": [],
              "index": 0,
              "docs": [
                "The pallet was already initialized.",
                "",
                "Set `witness_count` to `Some` to bypass this error."
              ]
            },
            {
              "name": "InsaneLimit",
              "fields": [],
              "index": 1,
              "docs": [
                "The limit was over [`crate::RESOURCE_HARD_LIMIT`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 659,
    "type": {
      "path": [
        "pallet_preimage",
        "RequestStatus"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unrequested",
              "fields": [
                {
                  "name": "deposit",
                  "type": 62,
                  "typeName": "(AccountId, Balance)",
                  "docs": []
                },
                {
                  "name": "len",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Requested",
              "fields": [
                {
                  "name": "deposit",
                  "type": 660,
                  "typeName": "Option<(AccountId, Balance)>",
                  "docs": []
                },
                {
                  "name": "count",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "len",
                  "type": 38,
                  "typeName": "Option<u32>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 660,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 62
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 62,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 661,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          12,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 662,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 663,
    "type": {
      "path": [
        "pallet_preimage",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TooBig",
              "fields": [],
              "index": 0,
              "docs": [
                "Preimage is too large to store on-chain."
              ]
            },
            {
              "name": "AlreadyNoted",
              "fields": [],
              "index": 1,
              "docs": [
                "Preimage has already been noted on-chain."
              ]
            },
            {
              "name": "NotAuthorized",
              "fields": [],
              "index": 2,
              "docs": [
                "The user is not authorized to perform this action."
              ]
            },
            {
              "name": "NotNoted",
              "fields": [],
              "index": 3,
              "docs": [
                "The preimage cannot be removed since it has not yet been noted."
              ]
            },
            {
              "name": "Requested",
              "fields": [],
              "index": 4,
              "docs": [
                "A preimage may not be removed when there are outstanding requests."
              ]
            },
            {
              "name": "NotRequested",
              "fields": [],
              "index": 5,
              "docs": [
                "The preimage request cannot be removed since no outstanding requests exist."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 664,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          665,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 665,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 666
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 667,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 666,
    "type": {
      "path": [
        "pallet_proxy",
        "ProxyDefinition"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "ProxyType",
          "type": 100
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "delegate",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "proxy_type",
              "type": 100,
              "typeName": "ProxyType",
              "docs": []
            },
            {
              "name": "delay",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 667,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 666
        }
      },
      "docs": []
    }
  },
  {
    "id": 668,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          669,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 669,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 670
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 671,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 670,
    "type": {
      "path": [
        "pallet_proxy",
        "Announcement"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Hash",
          "type": 12
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "real",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "call_hash",
              "type": 12,
              "typeName": "Hash",
              "docs": []
            },
            {
              "name": "height",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 671,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 670
        }
      },
      "docs": []
    }
  },
  {
    "id": 672,
    "type": {
      "path": [
        "pallet_proxy",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TooMany",
              "fields": [],
              "index": 0,
              "docs": [
                "There are too many proxies registered or too many announcements pending."
              ]
            },
            {
              "name": "NotFound",
              "fields": [],
              "index": 1,
              "docs": [
                "Proxy registration not found."
              ]
            },
            {
              "name": "NotProxy",
              "fields": [],
              "index": 2,
              "docs": [
                "Sender is not a proxy of the account to be proxied."
              ]
            },
            {
              "name": "Unproxyable",
              "fields": [],
              "index": 3,
              "docs": [
                "A call which is incompatible with the proxy type's filter was attempted."
              ]
            },
            {
              "name": "Duplicate",
              "fields": [],
              "index": 4,
              "docs": [
                "Account is already a proxy."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 5,
              "docs": [
                "Call may not be made by proxy because it may escalate its privileges."
              ]
            },
            {
              "name": "Unannounced",
              "fields": [],
              "index": 6,
              "docs": [
                "Announcement, if made at all, was made too recently."
              ]
            },
            {
              "name": "NoSelfProxy",
              "fields": [],
              "index": 7,
              "docs": [
                "Cannot add self as proxy."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 673,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          1
        ]
      },
      "docs": []
    }
  },
  {
    "id": 674,
    "type": {
      "path": [
        "pallet_multisig",
        "Multisig"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "MaxApprovals",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "when",
              "type": 103,
              "typeName": "Timepoint<BlockNumber>",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "depositor",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "approvals",
              "type": 550,
              "typeName": "BoundedVec<AccountId, MaxApprovals>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 675,
    "type": {
      "path": [
        "pallet_multisig",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "MinimumThreshold",
              "fields": [],
              "index": 0,
              "docs": [
                "Threshold must be 2 or greater."
              ]
            },
            {
              "name": "AlreadyApproved",
              "fields": [],
              "index": 1,
              "docs": [
                "Call is already approved by this signatory."
              ]
            },
            {
              "name": "NoApprovalsNeeded",
              "fields": [],
              "index": 2,
              "docs": [
                "Call doesn't need any (more) approvals."
              ]
            },
            {
              "name": "TooFewSignatories",
              "fields": [],
              "index": 3,
              "docs": [
                "There are too few signatories in the list."
              ]
            },
            {
              "name": "TooManySignatories",
              "fields": [],
              "index": 4,
              "docs": [
                "There are too many signatories in the list."
              ]
            },
            {
              "name": "SignatoriesOutOfOrder",
              "fields": [],
              "index": 5,
              "docs": [
                "The signatories were provided out of order; they should be ordered."
              ]
            },
            {
              "name": "SenderInSignatories",
              "fields": [],
              "index": 6,
              "docs": [
                "The sender was contained in the other signatories; it shouldn't be."
              ]
            },
            {
              "name": "NotFound",
              "fields": [],
              "index": 7,
              "docs": [
                "Multisig operation not found when attempting to cancel."
              ]
            },
            {
              "name": "NotOwner",
              "fields": [],
              "index": 8,
              "docs": [
                "Only the account that originally created the multisig is able to cancel it."
              ]
            },
            {
              "name": "NoTimepoint",
              "fields": [],
              "index": 9,
              "docs": [
                "No timepoint was given, yet the multisig operation is already underway."
              ]
            },
            {
              "name": "WrongTimepoint",
              "fields": [],
              "index": 10,
              "docs": [
                "A different timepoint was given to the multisig operation that is underway."
              ]
            },
            {
              "name": "UnexpectedTimepoint",
              "fields": [],
              "index": 11,
              "docs": [
                "A timepoint was given, yet no multisig operation is underway."
              ]
            },
            {
              "name": "MaxWeightTooLow",
              "fields": [],
              "index": 12,
              "docs": [
                "The maximum weight information provided was too low."
              ]
            },
            {
              "name": "AlreadyStored",
              "fields": [],
              "index": 13,
              "docs": [
                "The data to be stored is already stored."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 676,
    "type": {
      "path": [
        "pallet_bounties",
        "Bounty"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "proposer",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "value",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "curator_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "bond",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "status",
              "type": 677,
              "typeName": "BountyStatus<AccountId, BlockNumber>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 677,
    "type": {
      "path": [
        "pallet_bounties",
        "BountyStatus"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Proposed",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Approved",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Funded",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "CuratorProposed",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Active",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "update_due",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "PendingPayout",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "unlock_at",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 678,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 679,
    "type": {
      "path": [
        "pallet_bounties",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InsufficientProposersBalance",
              "fields": [],
              "index": 0,
              "docs": [
                "Proposer's balance is too low."
              ]
            },
            {
              "name": "InvalidIndex",
              "fields": [],
              "index": 1,
              "docs": [
                "No proposal or bounty at that index."
              ]
            },
            {
              "name": "ReasonTooBig",
              "fields": [],
              "index": 2,
              "docs": [
                "The reason given is just too big."
              ]
            },
            {
              "name": "UnexpectedStatus",
              "fields": [],
              "index": 3,
              "docs": [
                "The bounty status is unexpected."
              ]
            },
            {
              "name": "RequireCurator",
              "fields": [],
              "index": 4,
              "docs": [
                "Require bounty curator."
              ]
            },
            {
              "name": "InvalidValue",
              "fields": [],
              "index": 5,
              "docs": [
                "Invalid bounty value."
              ]
            },
            {
              "name": "InvalidFee",
              "fields": [],
              "index": 6,
              "docs": [
                "Invalid bounty fee."
              ]
            },
            {
              "name": "PendingPayout",
              "fields": [],
              "index": 7,
              "docs": [
                "A bounty payout is pending.",
                "To cancel the bounty, you must unassign and slash the curator."
              ]
            },
            {
              "name": "Premature",
              "fields": [],
              "index": 8,
              "docs": [
                "The bounties cannot be claimed/closed because it's still in the countdown period."
              ]
            },
            {
              "name": "HasActiveChildBounty",
              "fields": [],
              "index": 9,
              "docs": [
                "The bounty cannot be closed because it has active child bounties."
              ]
            },
            {
              "name": "TooManyQueued",
              "fields": [],
              "index": 10,
              "docs": [
                "Too many approvals are already queued."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 680,
    "type": {
      "path": [
        "pallet_tips",
        "OpenTip"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Hash",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "reason",
              "type": 12,
              "typeName": "Hash",
              "docs": []
            },
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "finder",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "closes",
              "type": 38,
              "typeName": "Option<BlockNumber>",
              "docs": []
            },
            {
              "name": "tips",
              "type": 61,
              "typeName": "Vec<(AccountId, Balance)>",
              "docs": []
            },
            {
              "name": "finders_fee",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 681,
    "type": {
      "path": [
        "pallet_tips",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ReasonTooBig",
              "fields": [],
              "index": 0,
              "docs": [
                "The reason given is just too big."
              ]
            },
            {
              "name": "AlreadyKnown",
              "fields": [],
              "index": 1,
              "docs": [
                "The tip was already found/started."
              ]
            },
            {
              "name": "UnknownTip",
              "fields": [],
              "index": 2,
              "docs": [
                "The tip hash is unknown."
              ]
            },
            {
              "name": "NotFinder",
              "fields": [],
              "index": 3,
              "docs": [
                "The account attempting to retract the tip is not the finder of the tip."
              ]
            },
            {
              "name": "StillOpen",
              "fields": [],
              "index": 4,
              "docs": [
                "The tip cannot be claimed/closed because there are not enough tippers yet."
              ]
            },
            {
              "name": "Premature",
              "fields": [],
              "index": 5,
              "docs": [
                "The tip cannot be claimed/closed because it's still in the countdown period."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 682,
    "type": {
      "path": [
        "pallet_assets",
        "types",
        "AssetDetails"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "DepositBalance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "owner",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "issuer",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "admin",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "freezer",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "supply",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            },
            {
              "name": "min_balance",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "is_sufficient",
              "type": 43,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "accounts",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "sufficients",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "approvals",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "status",
              "type": 683,
              "typeName": "AssetStatus",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 683,
    "type": {
      "path": [
        "pallet_assets",
        "types",
        "AssetStatus"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Live",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Frozen",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Destroying",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 684,
    "type": {
      "path": [
        "pallet_assets",
        "types",
        "AssetAccount"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "DepositBalance",
          "type": 6
        },
        {
          "name": "Extra",
          "type": 32
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "balance",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "status",
              "type": 685,
              "typeName": "AccountStatus",
              "docs": []
            },
            {
              "name": "reason",
              "type": 686,
              "typeName": "ExistenceReason<DepositBalance, AccountId>",
              "docs": []
            },
            {
              "name": "extra",
              "type": 32,
              "typeName": "Extra",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 685,
    "type": {
      "path": [
        "pallet_assets",
        "types",
        "AccountStatus"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Liquid",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Frozen",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Blocked",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 686,
    "type": {
      "path": [
        "pallet_assets",
        "types",
        "ExistenceReason"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Consumer",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Sufficient",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "DepositHeld",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "DepositRefunded",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "DepositFrom",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 687,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          0,
          0
        ]
      },
      "docs": []
    }
  },
  {
    "id": 688,
    "type": {
      "path": [
        "pallet_assets",
        "types",
        "Approval"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "DepositBalance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 689,
    "type": {
      "path": [
        "pallet_assets",
        "types",
        "AssetMetadata"
      ],
      "params": [
        {
          "name": "DepositBalance",
          "type": 6
        },
        {
          "name": "BoundedString",
          "type": 690
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "deposit",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            },
            {
              "name": "name",
              "type": 690,
              "typeName": "BoundedString",
              "docs": []
            },
            {
              "name": "symbol",
              "type": 690,
              "typeName": "BoundedString",
              "docs": []
            },
            {
              "name": "decimals",
              "type": 2,
              "typeName": "u8",
              "docs": []
            },
            {
              "name": "is_frozen",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 690,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 691,
    "type": {
      "path": [
        "pallet_assets",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BalanceLow",
              "fields": [],
              "index": 0,
              "docs": [
                "Account balance must be greater than or equal to the transfer amount."
              ]
            },
            {
              "name": "NoAccount",
              "fields": [],
              "index": 1,
              "docs": [
                "The account to alter does not exist."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 2,
              "docs": [
                "The signing account has no permission to do the operation."
              ]
            },
            {
              "name": "Unknown",
              "fields": [],
              "index": 3,
              "docs": [
                "The given asset ID is unknown."
              ]
            },
            {
              "name": "Frozen",
              "fields": [],
              "index": 4,
              "docs": [
                "The origin account is frozen."
              ]
            },
            {
              "name": "InUse",
              "fields": [],
              "index": 5,
              "docs": [
                "The asset ID is already taken."
              ]
            },
            {
              "name": "BadWitness",
              "fields": [],
              "index": 6,
              "docs": [
                "Invalid witness data given."
              ]
            },
            {
              "name": "MinBalanceZero",
              "fields": [],
              "index": 7,
              "docs": [
                "Minimum balance should be non-zero."
              ]
            },
            {
              "name": "UnavailableConsumer",
              "fields": [],
              "index": 8,
              "docs": [
                "Unable to increment the consumer reference counters on the account. Either no provider",
                "reference exists to allow a non-zero balance of a non-self-sufficient asset, or one",
                "fewer then the maximum number of consumers has been reached."
              ]
            },
            {
              "name": "BadMetadata",
              "fields": [],
              "index": 9,
              "docs": [
                "Invalid metadata given."
              ]
            },
            {
              "name": "Unapproved",
              "fields": [],
              "index": 10,
              "docs": [
                "No approval exists that would allow the transfer."
              ]
            },
            {
              "name": "WouldDie",
              "fields": [],
              "index": 11,
              "docs": [
                "The source account would not survive the transfer and it needs to stay alive."
              ]
            },
            {
              "name": "AlreadyExists",
              "fields": [],
              "index": 12,
              "docs": [
                "The asset-account already exists."
              ]
            },
            {
              "name": "NoDeposit",
              "fields": [],
              "index": 13,
              "docs": [
                "The asset-account doesn't have an associated deposit."
              ]
            },
            {
              "name": "WouldBurn",
              "fields": [],
              "index": 14,
              "docs": [
                "The operation would result in funds being burned."
              ]
            },
            {
              "name": "LiveAsset",
              "fields": [],
              "index": 15,
              "docs": [
                "The asset is a live asset and is actively being used. Usually emit for operations such",
                "as `start_destroy` which require the asset to be in a destroying state."
              ]
            },
            {
              "name": "AssetNotLive",
              "fields": [],
              "index": 16,
              "docs": [
                "The asset is not live, and likely being destroyed."
              ]
            },
            {
              "name": "IncorrectStatus",
              "fields": [],
              "index": 17,
              "docs": [
                "The asset status is not the expected status."
              ]
            },
            {
              "name": "NotFrozen",
              "fields": [],
              "index": 18,
              "docs": [
                "The asset should be frozen before the given operation."
              ]
            },
            {
              "name": "CallbackFailed",
              "fields": [],
              "index": 19,
              "docs": [
                "Callback action resulted in error"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 692,
    "type": {
      "path": [
        "pallet_assets",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BalanceLow",
              "fields": [],
              "index": 0,
              "docs": [
                "Account balance must be greater than or equal to the transfer amount."
              ]
            },
            {
              "name": "NoAccount",
              "fields": [],
              "index": 1,
              "docs": [
                "The account to alter does not exist."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 2,
              "docs": [
                "The signing account has no permission to do the operation."
              ]
            },
            {
              "name": "Unknown",
              "fields": [],
              "index": 3,
              "docs": [
                "The given asset ID is unknown."
              ]
            },
            {
              "name": "Frozen",
              "fields": [],
              "index": 4,
              "docs": [
                "The origin account is frozen."
              ]
            },
            {
              "name": "InUse",
              "fields": [],
              "index": 5,
              "docs": [
                "The asset ID is already taken."
              ]
            },
            {
              "name": "BadWitness",
              "fields": [],
              "index": 6,
              "docs": [
                "Invalid witness data given."
              ]
            },
            {
              "name": "MinBalanceZero",
              "fields": [],
              "index": 7,
              "docs": [
                "Minimum balance should be non-zero."
              ]
            },
            {
              "name": "UnavailableConsumer",
              "fields": [],
              "index": 8,
              "docs": [
                "Unable to increment the consumer reference counters on the account. Either no provider",
                "reference exists to allow a non-zero balance of a non-self-sufficient asset, or one",
                "fewer then the maximum number of consumers has been reached."
              ]
            },
            {
              "name": "BadMetadata",
              "fields": [],
              "index": 9,
              "docs": [
                "Invalid metadata given."
              ]
            },
            {
              "name": "Unapproved",
              "fields": [],
              "index": 10,
              "docs": [
                "No approval exists that would allow the transfer."
              ]
            },
            {
              "name": "WouldDie",
              "fields": [],
              "index": 11,
              "docs": [
                "The source account would not survive the transfer and it needs to stay alive."
              ]
            },
            {
              "name": "AlreadyExists",
              "fields": [],
              "index": 12,
              "docs": [
                "The asset-account already exists."
              ]
            },
            {
              "name": "NoDeposit",
              "fields": [],
              "index": 13,
              "docs": [
                "The asset-account doesn't have an associated deposit."
              ]
            },
            {
              "name": "WouldBurn",
              "fields": [],
              "index": 14,
              "docs": [
                "The operation would result in funds being burned."
              ]
            },
            {
              "name": "LiveAsset",
              "fields": [],
              "index": 15,
              "docs": [
                "The asset is a live asset and is actively being used. Usually emit for operations such",
                "as `start_destroy` which require the asset to be in a destroying state."
              ]
            },
            {
              "name": "AssetNotLive",
              "fields": [],
              "index": 16,
              "docs": [
                "The asset is not live, and likely being destroyed."
              ]
            },
            {
              "name": "IncorrectStatus",
              "fields": [],
              "index": 17,
              "docs": [
                "The asset status is not the expected status."
              ]
            },
            {
              "name": "NotFrozen",
              "fields": [],
              "index": 18,
              "docs": [
                "The asset should be frozen before the given operation."
              ]
            },
            {
              "name": "CallbackFailed",
              "fields": [],
              "index": 19,
              "docs": [
                "Callback action resulted in error"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 693,
    "type": {
      "path": [
        "pallet_lottery",
        "LotteryConfig"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "price",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "start",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "length",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "delay",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "repeat",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 694,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          695
        ]
      },
      "docs": []
    }
  },
  {
    "id": 695,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 109
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 696,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 696,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 109
        }
      },
      "docs": []
    }
  },
  {
    "id": 697,
    "type": {
      "path": [
        "pallet_lottery",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotConfigured",
              "fields": [],
              "index": 0,
              "docs": [
                "A lottery has not been configured."
              ]
            },
            {
              "name": "InProgress",
              "fields": [],
              "index": 1,
              "docs": [
                "A lottery is already in progress."
              ]
            },
            {
              "name": "AlreadyEnded",
              "fields": [],
              "index": 2,
              "docs": [
                "A lottery has already ended."
              ]
            },
            {
              "name": "InvalidCall",
              "fields": [],
              "index": 3,
              "docs": [
                "The call is not valid for an open lottery."
              ]
            },
            {
              "name": "AlreadyParticipating",
              "fields": [],
              "index": 4,
              "docs": [
                "You are already participating in the lottery with this call."
              ]
            },
            {
              "name": "TooManyCalls",
              "fields": [],
              "index": 5,
              "docs": [
                "Too many calls for a single lottery."
              ]
            },
            {
              "name": "EncodingFailed",
              "fields": [],
              "index": 6,
              "docs": [
                "Failed to encode calls"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 698,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 630
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 631,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 699,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 700
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 701,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 700,
    "type": {
      "path": [
        "pallet_nis",
        "pallet",
        "Bid"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 701,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 700
        }
      },
      "docs": []
    }
  },
  {
    "id": 702,
    "type": {
      "path": [
        "pallet_nis",
        "pallet",
        "SummaryRecord"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "proportion_owed",
              "type": 111,
              "typeName": "Perquintill",
              "docs": []
            },
            {
              "name": "index",
              "type": 4,
              "typeName": "ReceiptIndex",
              "docs": []
            },
            {
              "name": "thawed",
              "type": 111,
              "typeName": "Perquintill",
              "docs": []
            },
            {
              "name": "last_period",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "receipts_on_hold",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 703,
    "type": {
      "path": [
        "pallet_nis",
        "pallet",
        "ReceiptRecord"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "proportion",
              "type": 111,
              "typeName": "Perquintill",
              "docs": []
            },
            {
              "name": "owner",
              "type": 660,
              "typeName": "Option<(AccountId, Balance)>",
              "docs": []
            },
            {
              "name": "expiry",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 704,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          111,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 705,
    "type": {
      "path": [
        "pallet_nis",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "DurationTooSmall",
              "fields": [],
              "index": 0,
              "docs": [
                "The duration of the bid is less than one."
              ]
            },
            {
              "name": "DurationTooBig",
              "fields": [],
              "index": 1,
              "docs": [
                "The duration is the bid is greater than the number of queues."
              ]
            },
            {
              "name": "AmountTooSmall",
              "fields": [],
              "index": 2,
              "docs": [
                "The amount of the bid is less than the minimum allowed."
              ]
            },
            {
              "name": "BidTooLow",
              "fields": [],
              "index": 3,
              "docs": [
                "The queue for the bid's duration is full and the amount bid is too low to get in",
                "through replacing an existing bid."
              ]
            },
            {
              "name": "UnknownReceipt",
              "fields": [],
              "index": 4,
              "docs": [
                "Receipt index is unknown."
              ]
            },
            {
              "name": "NotOwner",
              "fields": [],
              "index": 5,
              "docs": [
                "Not the owner of the receipt."
              ]
            },
            {
              "name": "NotExpired",
              "fields": [],
              "index": 6,
              "docs": [
                "Bond not yet at expiry date."
              ]
            },
            {
              "name": "UnknownBid",
              "fields": [],
              "index": 7,
              "docs": [
                "The given bid for retraction is not found."
              ]
            },
            {
              "name": "PortionTooBig",
              "fields": [],
              "index": 8,
              "docs": [
                "The portion supplied is beyond the value of the receipt."
              ]
            },
            {
              "name": "Unfunded",
              "fields": [],
              "index": 9,
              "docs": [
                "Not enough funds are held to pay out."
              ]
            },
            {
              "name": "AlreadyFunded",
              "fields": [],
              "index": 10,
              "docs": [
                "There are enough funds for what is required."
              ]
            },
            {
              "name": "Throttled",
              "fields": [],
              "index": 11,
              "docs": [
                "The thaw throttle has been reached for this period."
              ]
            },
            {
              "name": "MakesDust",
              "fields": [],
              "index": 12,
              "docs": [
                "The operation would result in a receipt worth an insignficant value."
              ]
            },
            {
              "name": "AlreadyCommunal",
              "fields": [],
              "index": 13,
              "docs": [
                "The receipt is already communal."
              ]
            },
            {
              "name": "AlreadyPrivate",
              "fields": [],
              "index": 14,
              "docs": [
                "The receipt is already private."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 706,
    "type": {
      "path": [
        "pallet_uniques",
        "types",
        "CollectionDetails"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "DepositBalance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "owner",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "issuer",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "admin",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "freezer",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "total_deposit",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            },
            {
              "name": "free_holding",
              "type": 43,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "items",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "item_metadatas",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "attributes",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "is_frozen",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 707,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          4,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 708,
    "type": {
      "path": [
        "pallet_uniques",
        "types",
        "ItemDetails"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "DepositBalance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "owner",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "approved",
              "type": 42,
              "typeName": "Option<AccountId>",
              "docs": []
            },
            {
              "name": "is_frozen",
              "type": 43,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 709,
    "type": {
      "path": [
        "pallet_uniques",
        "types",
        "CollectionMetadata"
      ],
      "params": [
        {
          "name": "DepositBalance",
          "type": 6
        },
        {
          "name": "StringLimit",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "deposit",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            },
            {
              "name": "data",
              "type": 113,
              "typeName": "BoundedVec<u8, StringLimit>",
              "docs": []
            },
            {
              "name": "is_frozen",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 710,
    "type": {
      "path": [
        "pallet_uniques",
        "types",
        "ItemMetadata"
      ],
      "params": [
        {
          "name": "DepositBalance",
          "type": 6
        },
        {
          "name": "StringLimit",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "deposit",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            },
            {
              "name": "data",
              "type": 113,
              "typeName": "BoundedVec<u8, StringLimit>",
              "docs": []
            },
            {
              "name": "is_frozen",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 711,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          38,
          115
        ]
      },
      "docs": []
    }
  },
  {
    "id": 712,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          116,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 713,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          6,
          42
        ]
      },
      "docs": []
    }
  },
  {
    "id": 714,
    "type": {
      "path": [
        "pallet_uniques",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NoPermission",
              "fields": [],
              "index": 0,
              "docs": [
                "The signing account has no permission to do the operation."
              ]
            },
            {
              "name": "UnknownCollection",
              "fields": [],
              "index": 1,
              "docs": [
                "The given item ID is unknown."
              ]
            },
            {
              "name": "AlreadyExists",
              "fields": [],
              "index": 2,
              "docs": [
                "The item ID has already been used for an item."
              ]
            },
            {
              "name": "WrongOwner",
              "fields": [],
              "index": 3,
              "docs": [
                "The owner turned out to be different to what was expected."
              ]
            },
            {
              "name": "BadWitness",
              "fields": [],
              "index": 4,
              "docs": [
                "Invalid witness data given."
              ]
            },
            {
              "name": "InUse",
              "fields": [],
              "index": 5,
              "docs": [
                "The item ID is already taken."
              ]
            },
            {
              "name": "Frozen",
              "fields": [],
              "index": 6,
              "docs": [
                "The item or collection is frozen."
              ]
            },
            {
              "name": "WrongDelegate",
              "fields": [],
              "index": 7,
              "docs": [
                "The delegate turned out to be different to what was expected."
              ]
            },
            {
              "name": "NoDelegate",
              "fields": [],
              "index": 8,
              "docs": [
                "There is no delegate approved."
              ]
            },
            {
              "name": "Unapproved",
              "fields": [],
              "index": 9,
              "docs": [
                "No approval exists that would allow the transfer."
              ]
            },
            {
              "name": "Unaccepted",
              "fields": [],
              "index": 10,
              "docs": [
                "The named owner has not signed ownership of the collection is acceptable."
              ]
            },
            {
              "name": "Locked",
              "fields": [],
              "index": 11,
              "docs": [
                "The item is locked."
              ]
            },
            {
              "name": "MaxSupplyReached",
              "fields": [],
              "index": 12,
              "docs": [
                "All items have been minted."
              ]
            },
            {
              "name": "MaxSupplyAlreadySet",
              "fields": [],
              "index": 13,
              "docs": [
                "The max supply has already been set."
              ]
            },
            {
              "name": "MaxSupplyTooSmall",
              "fields": [],
              "index": 14,
              "docs": [
                "The provided max supply is less to the amount of items a collection already has."
              ]
            },
            {
              "name": "UnknownItem",
              "fields": [],
              "index": 15,
              "docs": [
                "The given item ID is unknown."
              ]
            },
            {
              "name": "NotForSale",
              "fields": [],
              "index": 16,
              "docs": [
                "Item is not for sale."
              ]
            },
            {
              "name": "BidTooLow",
              "fields": [],
              "index": 17,
              "docs": [
                "The provided bid is too low."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 715,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "CollectionDetails"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "DepositBalance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "owner",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "owner_deposit",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            },
            {
              "name": "items",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "item_metadatas",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "item_configs",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "attributes",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 716,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "BitFlags"
      ],
      "params": [
        {
          "name": "T",
          "type": 717
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 2,
              "typeName": "CollectionRole",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 717,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "CollectionRole"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Issuer",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Freezer",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Admin",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 718,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "ItemDetails"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Deposit",
          "type": 719
        },
        {
          "name": "Approvals",
          "type": 720
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "owner",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "approvals",
              "type": 720,
              "typeName": "Approvals",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 719,
              "typeName": "Deposit",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 719,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "ItemDeposit"
      ],
      "params": [
        {
          "name": "DepositBalance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 720,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_btree_map",
        "BoundedBTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 0
        },
        {
          "name": "V",
          "type": 38
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 721,
              "typeName": "BTreeMap<K, V>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 721,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 0
        },
        {
          "name": "V",
          "type": 38
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 722,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 722,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 723
        }
      },
      "docs": []
    }
  },
  {
    "id": 723,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          38
        ]
      },
      "docs": []
    }
  },
  {
    "id": 724,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "CollectionMetadata"
      ],
      "params": [
        {
          "name": "Deposit",
          "type": 6
        },
        {
          "name": "StringLimit",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Deposit",
              "docs": []
            },
            {
              "name": "data",
              "type": 118,
              "typeName": "BoundedVec<u8, StringLimit>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 725,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "ItemMetadata"
      ],
      "params": [
        {
          "name": "Deposit",
          "type": 726
        },
        {
          "name": "StringLimit",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "deposit",
              "type": 726,
              "typeName": "Deposit",
              "docs": []
            },
            {
              "name": "data",
              "type": 118,
              "typeName": "BoundedVec<u8, StringLimit>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 726,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "ItemMetadataDeposit"
      ],
      "params": [
        {
          "name": "DepositBalance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account",
              "type": 42,
              "typeName": "Option<AccountId>",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 727,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          38,
          119,
          116
        ]
      },
      "docs": []
    }
  },
  {
    "id": 728,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          118,
          729
        ]
      },
      "docs": []
    }
  },
  {
    "id": 729,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "AttributeDeposit"
      ],
      "params": [
        {
          "name": "DepositBalance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account",
              "type": 42,
              "typeName": "Option<AccountId>",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "DepositBalance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 730,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_btree_set",
        "BoundedBTreeSet"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 731,
              "typeName": "BTreeSet<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 731,
    "type": {
      "path": [
        "BTreeSet"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 89,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 732,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "PendingSwap"
      ],
      "params": [
        {
          "name": "CollectionId",
          "type": 4
        },
        {
          "name": "ItemId",
          "type": 4
        },
        {
          "name": "ItemPriceWithDirection",
          "type": 121
        },
        {
          "name": "Deadline",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "desired_collection",
              "type": 4,
              "typeName": "CollectionId",
              "docs": []
            },
            {
              "name": "desired_item",
              "type": 38,
              "typeName": "Option<ItemId>",
              "docs": []
            },
            {
              "name": "price",
              "type": 120,
              "typeName": "Option<ItemPriceWithDirection>",
              "docs": []
            },
            {
              "name": "deadline",
              "type": 4,
              "typeName": "Deadline",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 733,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "BitFlags"
      ],
      "params": [
        {
          "name": "T",
          "type": 734
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 11,
              "typeName": "PalletFeature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 734,
    "type": {
      "path": [
        "pallet_nfts",
        "types",
        "PalletFeature"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Trading",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Attributes",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Approvals",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Swaps",
              "fields": [],
              "index": 8,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 735,
    "type": {
      "path": [
        "pallet_nfts",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NoPermission",
              "fields": [],
              "index": 0,
              "docs": [
                "The signing account has no permission to do the operation."
              ]
            },
            {
              "name": "UnknownCollection",
              "fields": [],
              "index": 1,
              "docs": [
                "The given item ID is unknown."
              ]
            },
            {
              "name": "AlreadyExists",
              "fields": [],
              "index": 2,
              "docs": [
                "The item ID has already been used for an item."
              ]
            },
            {
              "name": "ApprovalExpired",
              "fields": [],
              "index": 3,
              "docs": [
                "The approval had a deadline that expired, so the approval isn't valid anymore."
              ]
            },
            {
              "name": "WrongOwner",
              "fields": [],
              "index": 4,
              "docs": [
                "The owner turned out to be different to what was expected."
              ]
            },
            {
              "name": "BadWitness",
              "fields": [],
              "index": 5,
              "docs": [
                "The witness data given does not match the current state of the chain."
              ]
            },
            {
              "name": "CollectionIdInUse",
              "fields": [],
              "index": 6,
              "docs": [
                "Collection ID is already taken."
              ]
            },
            {
              "name": "ItemsNonTransferable",
              "fields": [],
              "index": 7,
              "docs": [
                "Items within that collection are non-transferable."
              ]
            },
            {
              "name": "NotDelegate",
              "fields": [],
              "index": 8,
              "docs": [
                "The provided account is not a delegate."
              ]
            },
            {
              "name": "WrongDelegate",
              "fields": [],
              "index": 9,
              "docs": [
                "The delegate turned out to be different to what was expected."
              ]
            },
            {
              "name": "Unapproved",
              "fields": [],
              "index": 10,
              "docs": [
                "No approval exists that would allow the transfer."
              ]
            },
            {
              "name": "Unaccepted",
              "fields": [],
              "index": 11,
              "docs": [
                "The named owner has not signed ownership acceptance of the collection."
              ]
            },
            {
              "name": "ItemLocked",
              "fields": [],
              "index": 12,
              "docs": [
                "The item is locked (non-transferable)."
              ]
            },
            {
              "name": "LockedItemAttributes",
              "fields": [],
              "index": 13,
              "docs": [
                "Item's attributes are locked."
              ]
            },
            {
              "name": "LockedCollectionAttributes",
              "fields": [],
              "index": 14,
              "docs": [
                "Collection's attributes are locked."
              ]
            },
            {
              "name": "LockedItemMetadata",
              "fields": [],
              "index": 15,
              "docs": [
                "Item's metadata is locked."
              ]
            },
            {
              "name": "LockedCollectionMetadata",
              "fields": [],
              "index": 16,
              "docs": [
                "Collection's metadata is locked."
              ]
            },
            {
              "name": "MaxSupplyReached",
              "fields": [],
              "index": 17,
              "docs": [
                "All items have been minted."
              ]
            },
            {
              "name": "MaxSupplyLocked",
              "fields": [],
              "index": 18,
              "docs": [
                "The max supply is locked and can't be changed."
              ]
            },
            {
              "name": "MaxSupplyTooSmall",
              "fields": [],
              "index": 19,
              "docs": [
                "The provided max supply is less than the number of items a collection already has."
              ]
            },
            {
              "name": "UnknownItem",
              "fields": [],
              "index": 20,
              "docs": [
                "The given item ID is unknown."
              ]
            },
            {
              "name": "UnknownSwap",
              "fields": [],
              "index": 21,
              "docs": [
                "Swap doesn't exist."
              ]
            },
            {
              "name": "MetadataNotFound",
              "fields": [],
              "index": 22,
              "docs": [
                "The given item has no metadata set."
              ]
            },
            {
              "name": "AttributeNotFound",
              "fields": [],
              "index": 23,
              "docs": [
                "The provided attribute can't be found."
              ]
            },
            {
              "name": "NotForSale",
              "fields": [],
              "index": 24,
              "docs": [
                "Item is not for sale."
              ]
            },
            {
              "name": "BidTooLow",
              "fields": [],
              "index": 25,
              "docs": [
                "The provided bid is too low."
              ]
            },
            {
              "name": "ReachedApprovalLimit",
              "fields": [],
              "index": 26,
              "docs": [
                "The item has reached its approval limit."
              ]
            },
            {
              "name": "DeadlineExpired",
              "fields": [],
              "index": 27,
              "docs": [
                "The deadline has already expired."
              ]
            },
            {
              "name": "WrongDuration",
              "fields": [],
              "index": 28,
              "docs": [
                "The duration provided should be less than or equal to `MaxDeadlineDuration`."
              ]
            },
            {
              "name": "MethodDisabled",
              "fields": [],
              "index": 29,
              "docs": [
                "The method is disabled by system settings."
              ]
            },
            {
              "name": "WrongSetting",
              "fields": [],
              "index": 30,
              "docs": [
                "The provided setting can't be set."
              ]
            },
            {
              "name": "InconsistentItemConfig",
              "fields": [],
              "index": 31,
              "docs": [
                "Item's config already exists and should be equal to the provided one."
              ]
            },
            {
              "name": "NoConfig",
              "fields": [],
              "index": 32,
              "docs": [
                "Config for a collection or an item can't be found."
              ]
            },
            {
              "name": "RolesNotCleared",
              "fields": [],
              "index": 33,
              "docs": [
                "Some roles were not cleared."
              ]
            },
            {
              "name": "MintNotStarted",
              "fields": [],
              "index": 34,
              "docs": [
                "Mint has not started yet."
              ]
            },
            {
              "name": "MintEnded",
              "fields": [],
              "index": 35,
              "docs": [
                "Mint has already ended."
              ]
            },
            {
              "name": "AlreadyClaimed",
              "fields": [],
              "index": 36,
              "docs": [
                "The provided Item was already used for claiming."
              ]
            },
            {
              "name": "IncorrectData",
              "fields": [],
              "index": 37,
              "docs": [
                "The provided data is incorrect."
              ]
            },
            {
              "name": "WrongOrigin",
              "fields": [],
              "index": 38,
              "docs": [
                "The extrinsic was sent by the wrong origin."
              ]
            },
            {
              "name": "WrongSignature",
              "fields": [],
              "index": 39,
              "docs": [
                "The provided signature is incorrect."
              ]
            },
            {
              "name": "IncorrectMetadata",
              "fields": [],
              "index": 40,
              "docs": [
                "The provided metadata might be too long."
              ]
            },
            {
              "name": "MaxAttributesLimitReached",
              "fields": [],
              "index": 41,
              "docs": [
                "Can't set more attributes per one call."
              ]
            },
            {
              "name": "WrongNamespace",
              "fields": [],
              "index": 42,
              "docs": [
                "The provided namespace isn't supported in this call."
              ]
            },
            {
              "name": "CollectionNotEmpty",
              "fields": [],
              "index": 43,
              "docs": [
                "Can't delete non-empty collections."
              ]
            },
            {
              "name": "WitnessRequired",
              "fields": [],
              "index": 44,
              "docs": [
                "The witness data should be provided."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 736,
    "type": {
      "path": [
        "pallet_nft_fractionalization",
        "types",
        "Details"
      ],
      "params": [
        {
          "name": "AssetId",
          "type": 4
        },
        {
          "name": "Fractions",
          "type": 6
        },
        {
          "name": "Deposit",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "asset",
              "type": 4,
              "typeName": "AssetId",
              "docs": []
            },
            {
              "name": "fractions",
              "type": 6,
              "typeName": "Fractions",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Deposit",
              "docs": []
            },
            {
              "name": "asset_creator",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 737,
    "type": {
      "path": [
        "pallet_nft_fractionalization",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "IncorrectAssetId",
              "fields": [],
              "index": 0,
              "docs": [
                "Asset ID does not correspond to locked NFT."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 1,
              "docs": [
                "The signing account has no permission to do the operation."
              ]
            },
            {
              "name": "NftNotFound",
              "fields": [],
              "index": 2,
              "docs": [
                "NFT doesn't exist."
              ]
            },
            {
              "name": "NftNotFractionalized",
              "fields": [],
              "index": 3,
              "docs": [
                "NFT has not yet been fractionalised."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 738,
    "type": {
      "path": [
        "pallet_salary",
        "StatusType"
      ],
      "params": [
        {
          "name": "CycleIndex",
          "type": 4
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "cycle_index",
              "type": 4,
              "typeName": "CycleIndex",
              "docs": []
            },
            {
              "name": "cycle_start",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "budget",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "total_registrations",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "total_unregistered_paid",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 739,
    "type": {
      "path": [
        "pallet_salary",
        "ClaimantStatus"
      ],
      "params": [
        {
          "name": "CycleIndex",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Id",
          "type": 32
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "last_active",
              "type": 4,
              "typeName": "CycleIndex",
              "docs": []
            },
            {
              "name": "status",
              "type": 740,
              "typeName": "ClaimState<Balance, Id>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 740,
    "type": {
      "path": [
        "pallet_salary",
        "ClaimState"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Id",
          "type": 32
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Nothing",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Registered",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Attempted",
              "fields": [
                {
                  "name": "registered",
                  "type": 331,
                  "typeName": "Option<Balance>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 32,
                  "typeName": "Id",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 741,
    "type": {
      "path": [
        "pallet_salary",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AlreadyStarted",
              "fields": [],
              "index": 0,
              "docs": [
                "The salary system has already been started."
              ]
            },
            {
              "name": "NotMember",
              "fields": [],
              "index": 1,
              "docs": [
                "The account is not a ranked member."
              ]
            },
            {
              "name": "AlreadyInducted",
              "fields": [],
              "index": 2,
              "docs": [
                "The account is already inducted."
              ]
            },
            {
              "name": "NotInducted",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "NoClaim",
              "fields": [],
              "index": 4,
              "docs": [
                "The member does not have a current valid claim."
              ]
            },
            {
              "name": "ClaimZero",
              "fields": [],
              "index": 5,
              "docs": [
                "The member's claim is zero."
              ]
            },
            {
              "name": "TooLate",
              "fields": [],
              "index": 6,
              "docs": [
                "Current cycle's registration period is over."
              ]
            },
            {
              "name": "TooEarly",
              "fields": [],
              "index": 7,
              "docs": [
                "Current cycle's payment period is not yet begun."
              ]
            },
            {
              "name": "NotYet",
              "fields": [],
              "index": 8,
              "docs": [
                "Cycle is not yet over."
              ]
            },
            {
              "name": "NotStarted",
              "fields": [],
              "index": 9,
              "docs": [
                "The payout cycles have not yet started."
              ]
            },
            {
              "name": "Bankrupt",
              "fields": [],
              "index": 10,
              "docs": [
                "There is no budget left for the payout."
              ]
            },
            {
              "name": "PayError",
              "fields": [],
              "index": 11,
              "docs": [
                "There was some issue with the mechanism of payment."
              ]
            },
            {
              "name": "Inconclusive",
              "fields": [],
              "index": 12,
              "docs": [
                "The payment has neither failed nor succeeded yet."
              ]
            },
            {
              "name": "NotCurrent",
              "fields": [],
              "index": 13,
              "docs": [
                "The cycle is after that in which the payment was made."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 742,
    "type": {
      "path": [
        "pallet_core_fellowship",
        "MemberStatus"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "is_active",
              "type": 43,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "last_promotion",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "last_proof",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 743,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          130,
          131
        ]
      },
      "docs": []
    }
  },
  {
    "id": 744,
    "type": {
      "path": [
        "pallet_core_fellowship",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unranked",
              "fields": [],
              "index": 0,
              "docs": [
                "Member's rank is too low."
              ]
            },
            {
              "name": "Ranked",
              "fields": [],
              "index": 1,
              "docs": [
                "Member's rank is not zero."
              ]
            },
            {
              "name": "UnexpectedRank",
              "fields": [],
              "index": 2,
              "docs": [
                "Member's rank is not as expected - generally means that the rank provided to the call",
                "does not agree with the state of the system."
              ]
            },
            {
              "name": "InvalidRank",
              "fields": [],
              "index": 3,
              "docs": [
                "The given rank is invalid - this generally means it's not between 1 and `RANK_COUNT`."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 4,
              "docs": [
                "The origin does not have enough permission to do this operation."
              ]
            },
            {
              "name": "NothingDoing",
              "fields": [],
              "index": 5,
              "docs": [
                "No work needs to be done at present for this member."
              ]
            },
            {
              "name": "AlreadyInducted",
              "fields": [],
              "index": 6,
              "docs": [
                "The candidate has already been inducted. This should never happen since it would",
                "require a candidate (rank 0) to already be tracked in the pallet."
              ]
            },
            {
              "name": "NotTracked",
              "fields": [],
              "index": 7,
              "docs": [
                "The candidate has not been inducted, so cannot be offboarded from this pallet."
              ]
            },
            {
              "name": "TooSoon",
              "fields": [],
              "index": 8,
              "docs": [
                "Operation cannot be done yet since not enough time has passed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 745,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 746
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 747,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 746,
    "type": {
      "path": [
        "pallet_transaction_storage",
        "TransactionInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "chunk_root",
              "type": 12,
              "typeName": "<BlakeTwo256 as Hash>::Output",
              "docs": []
            },
            {
              "name": "content_hash",
              "type": 12,
              "typeName": "<BlakeTwo256 as Hash>::Output",
              "docs": []
            },
            {
              "name": "size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "block_chunks",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 747,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 746
        }
      },
      "docs": []
    }
  },
  {
    "id": 748,
    "type": {
      "path": [
        "pallet_transaction_storage",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InsufficientFunds",
              "fields": [],
              "index": 0,
              "docs": [
                "Insufficient account balance."
              ]
            },
            {
              "name": "NotConfigured",
              "fields": [],
              "index": 1,
              "docs": [
                "Invalid configuration."
              ]
            },
            {
              "name": "RenewedNotFound",
              "fields": [],
              "index": 2,
              "docs": [
                "Renewed extrinsic is not found."
              ]
            },
            {
              "name": "EmptyTransaction",
              "fields": [],
              "index": 3,
              "docs": [
                "Attempting to store empty transaction"
              ]
            },
            {
              "name": "UnexpectedProof",
              "fields": [],
              "index": 4,
              "docs": [
                "Proof was not expected in this block."
              ]
            },
            {
              "name": "InvalidProof",
              "fields": [],
              "index": 5,
              "docs": [
                "Proof failed verification."
              ]
            },
            {
              "name": "MissingProof",
              "fields": [],
              "index": 6,
              "docs": [
                "Missing storage proof."
              ]
            },
            {
              "name": "MissingStateData",
              "fields": [],
              "index": 7,
              "docs": [
                "Unable to verify proof becasue state data is missing."
              ]
            },
            {
              "name": "DoubleCheck",
              "fields": [],
              "index": 8,
              "docs": [
                "Double proof check in the block."
              ]
            },
            {
              "name": "ProofNotChecked",
              "fields": [],
              "index": 9,
              "docs": [
                "Storage proof was not checked in the block."
              ]
            },
            {
              "name": "TransactionTooLarge",
              "fields": [],
              "index": 10,
              "docs": [
                "Transaction is too large."
              ]
            },
            {
              "name": "TooManyTransactions",
              "fields": [],
              "index": 11,
              "docs": [
                "Too many transactions in the block."
              ]
            },
            {
              "name": "BadContext",
              "fields": [],
              "index": 12,
              "docs": [
                "Attempted to call `store` outside of block execution."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 749,
    "type": {
      "path": [
        "pallet_bags_list",
        "list",
        "Node"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 0,
              "typeName": "T::AccountId",
              "docs": []
            },
            {
              "name": "prev",
              "type": 42,
              "typeName": "Option<T::AccountId>",
              "docs": []
            },
            {
              "name": "next",
              "type": 42,
              "typeName": "Option<T::AccountId>",
              "docs": []
            },
            {
              "name": "bag_upper",
              "type": 11,
              "typeName": "T::Score",
              "docs": []
            },
            {
              "name": "score",
              "type": 11,
              "typeName": "T::Score",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 750,
    "type": {
      "path": [
        "pallet_bags_list",
        "list",
        "Bag"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "head",
              "type": 42,
              "typeName": "Option<T::AccountId>",
              "docs": []
            },
            {
              "name": "tail",
              "type": 42,
              "typeName": "Option<T::AccountId>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 751,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 11
        }
      },
      "docs": []
    }
  },
  {
    "id": 752,
    "type": {
      "path": [
        "pallet_bags_list",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "List",
              "fields": [
                {
                  "name": null,
                  "type": 753,
                  "typeName": "ListError",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A error in the list interface implementation."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 753,
    "type": {
      "path": [
        "pallet_bags_list",
        "list",
        "ListError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Duplicate",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NotHeavier",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "NotInSameBag",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "NodeNotFound",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 754,
    "type": {
      "path": [
        "pallet_child_bounties",
        "ChildBounty"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "parent_bounty",
              "type": 4,
              "typeName": "BountyIndex",
              "docs": []
            },
            {
              "name": "value",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "curator_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "status",
              "type": 755,
              "typeName": "ChildBountyStatus<AccountId, BlockNumber>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 755,
    "type": {
      "path": [
        "pallet_child_bounties",
        "ChildBountyStatus"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Added",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "CuratorProposed",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Active",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "PendingPayout",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "unlock_at",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 756,
    "type": {
      "path": [
        "pallet_child_bounties",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ParentBountyNotActive",
              "fields": [],
              "index": 0,
              "docs": [
                "The parent bounty is not in active state."
              ]
            },
            {
              "name": "InsufficientBountyBalance",
              "fields": [],
              "index": 1,
              "docs": [
                "The bounty balance is not enough to add new child-bounty."
              ]
            },
            {
              "name": "TooManyChildBounties",
              "fields": [],
              "index": 2,
              "docs": [
                "Number of child bounties exceeds limit `MaxActiveChildBountyCount`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 757,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "ReferendumInfo"
      ],
      "params": [
        {
          "name": "TrackId",
          "type": 101
        },
        {
          "name": "RuntimeOrigin",
          "type": 148
        },
        {
          "name": "Moment",
          "type": 4
        },
        {
          "name": "Call",
          "type": 140
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Tally",
          "type": 417
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "ScheduleAddress",
          "type": 94
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ongoing",
              "fields": [
                {
                  "name": null,
                  "type": 758,
                  "typeName": "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Approved",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Rejected",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Cancelled",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "TimedOut",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Killed",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 758,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "ReferendumStatus"
      ],
      "params": [
        {
          "name": "TrackId",
          "type": 101
        },
        {
          "name": "RuntimeOrigin",
          "type": 148
        },
        {
          "name": "Moment",
          "type": 4
        },
        {
          "name": "Call",
          "type": 140
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Tally",
          "type": 417
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "ScheduleAddress",
          "type": 94
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "track",
              "type": 101,
              "typeName": "TrackId",
              "docs": []
            },
            {
              "name": "origin",
              "type": 148,
              "typeName": "RuntimeOrigin",
              "docs": []
            },
            {
              "name": "proposal",
              "type": 140,
              "typeName": "Call",
              "docs": []
            },
            {
              "name": "enactment",
              "type": 367,
              "typeName": "DispatchTime<Moment>",
              "docs": []
            },
            {
              "name": "submitted",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "submission_deposit",
              "type": 759,
              "typeName": "Deposit<AccountId, Balance>",
              "docs": []
            },
            {
              "name": "decision_deposit",
              "type": 760,
              "typeName": "Option<Deposit<AccountId, Balance>>",
              "docs": []
            },
            {
              "name": "deciding",
              "type": 761,
              "typeName": "Option<DecidingStatus<Moment>>",
              "docs": []
            },
            {
              "name": "tally",
              "type": 417,
              "typeName": "Tally",
              "docs": []
            },
            {
              "name": "in_queue",
              "type": 43,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "alarm",
              "type": 763,
              "typeName": "Option<(Moment, ScheduleAddress)>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 759,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "Deposit"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 760,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 759
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 759,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 761,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 762
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 762,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 762,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "DecidingStatus"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "since",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "confirming",
              "type": 38,
              "typeName": "Option<BlockNumber>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 763,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 764
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 764,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 764,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          94
        ]
      },
      "docs": []
    }
  },
  {
    "id": 765,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 630
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 631,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 766,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 767
        }
      },
      "docs": []
    }
  },
  {
    "id": 767,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          101,
          768
        ]
      },
      "docs": []
    }
  },
  {
    "id": 768,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "TrackInfo"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Moment",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "name",
              "type": 458,
              "typeName": "&'static str",
              "docs": []
            },
            {
              "name": "max_deciding",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "decision_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "prepare_period",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "decision_period",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "confirm_period",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "min_enactment_period",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "min_approval",
              "type": 769,
              "typeName": "Curve",
              "docs": []
            },
            {
              "name": "min_support",
              "type": 769,
              "typeName": "Curve",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 769,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "Curve"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "LinearDecreasing",
              "fields": [
                {
                  "name": "length",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "floor",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "ceil",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "SteppedDecreasing",
              "fields": [
                {
                  "name": "begin",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "end",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "step",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "period",
                  "type": 48,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Reciprocal",
              "fields": [
                {
                  "name": "factor",
                  "type": 770,
                  "typeName": "FixedI64",
                  "docs": []
                },
                {
                  "name": "x_offset",
                  "type": 770,
                  "typeName": "FixedI64",
                  "docs": []
                },
                {
                  "name": "y_offset",
                  "type": 770,
                  "typeName": "FixedI64",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 770,
    "type": {
      "path": [
        "sp_arithmetic",
        "fixed_point",
        "FixedI64"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 771,
              "typeName": "i64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 771,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "I64"
      },
      "docs": []
    }
  },
  {
    "id": 772,
    "type": {
      "path": [
        "pallet_referenda",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotOngoing",
              "fields": [],
              "index": 0,
              "docs": [
                "Referendum is not ongoing."
              ]
            },
            {
              "name": "HasDeposit",
              "fields": [],
              "index": 1,
              "docs": [
                "Referendum's decision deposit is already paid."
              ]
            },
            {
              "name": "BadTrack",
              "fields": [],
              "index": 2,
              "docs": [
                "The track identifier given was invalid."
              ]
            },
            {
              "name": "Full",
              "fields": [],
              "index": 3,
              "docs": [
                "There are already a full complement of referenda in progress for this track."
              ]
            },
            {
              "name": "QueueEmpty",
              "fields": [],
              "index": 4,
              "docs": [
                "The queue of the track is empty."
              ]
            },
            {
              "name": "BadReferendum",
              "fields": [],
              "index": 5,
              "docs": [
                "The referendum index provided is invalid in this context."
              ]
            },
            {
              "name": "NothingToDo",
              "fields": [],
              "index": 6,
              "docs": [
                "There was nothing to do in the advancement."
              ]
            },
            {
              "name": "NoTrack",
              "fields": [],
              "index": 7,
              "docs": [
                "No track exists for the proposal origin."
              ]
            },
            {
              "name": "Unfinished",
              "fields": [],
              "index": 8,
              "docs": [
                "Any deposit cannot be refunded until after the decision is over."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 9,
              "docs": [
                "The deposit refunder is not the depositor."
              ]
            },
            {
              "name": "NoDeposit",
              "fields": [],
              "index": 10,
              "docs": [
                "The deposit cannot be refunded since none was made."
              ]
            },
            {
              "name": "BadStatus",
              "fields": [],
              "index": 11,
              "docs": [
                "The referendum status is invalid for this operation."
              ]
            },
            {
              "name": "PreimageNotExist",
              "fields": [],
              "index": 12,
              "docs": [
                "The preimage does not exist."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 773,
    "type": {
      "path": [
        "pallet_remark",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Empty",
              "fields": [],
              "index": 0,
              "docs": [
                "Attempting to store empty data."
              ]
            },
            {
              "name": "BadContext",
              "fields": [],
              "index": 1,
              "docs": [
                "Attempted to call `store` outside of block execution."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 774,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          101
        ]
      },
      "docs": []
    }
  },
  {
    "id": 775,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "Voting"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "PollIndex",
          "type": 4
        },
        {
          "name": "MaxVotes",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Casting",
              "fields": [
                {
                  "name": null,
                  "type": 776,
                  "typeName": "Casting<Balance, BlockNumber, PollIndex, MaxVotes>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Delegating",
              "fields": [
                {
                  "name": null,
                  "type": 782,
                  "typeName": "Delegating<Balance, AccountId, BlockNumber>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 776,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "Casting"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "PollIndex",
          "type": 4
        },
        {
          "name": "MaxVotes",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "votes",
              "type": 777,
              "typeName": "BoundedVec<(PollIndex, AccountVote<Balance>), MaxVotes>",
              "docs": []
            },
            {
              "name": "delegations",
              "type": 780,
              "typeName": "Delegations<Balance>",
              "docs": []
            },
            {
              "name": "prior",
              "type": 781,
              "typeName": "PriorLock<BlockNumber, Balance>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 777,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 778
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 779,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 778,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          371
        ]
      },
      "docs": []
    }
  },
  {
    "id": 779,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 778
        }
      },
      "docs": []
    }
  },
  {
    "id": 780,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "types",
        "Delegations"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "votes",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "capital",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 781,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "PriorLock"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": null,
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 782,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "Delegating"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "balance",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "target",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "conviction",
              "type": 373,
              "typeName": "Conviction",
              "docs": []
            },
            {
              "name": "delegations",
              "type": 780,
              "typeName": "Delegations<Balance>",
              "docs": []
            },
            {
              "name": "prior",
              "type": 781,
              "typeName": "PriorLock<BlockNumber, Balance>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 783,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 784
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 785,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 784,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          101,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 785,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 784
        }
      },
      "docs": []
    }
  },
  {
    "id": 786,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotOngoing",
              "fields": [],
              "index": 0,
              "docs": [
                "Poll is not ongoing."
              ]
            },
            {
              "name": "NotVoter",
              "fields": [],
              "index": 1,
              "docs": [
                "The given account did not vote on the poll."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 2,
              "docs": [
                "The actor has no permission to conduct the action."
              ]
            },
            {
              "name": "NoPermissionYet",
              "fields": [],
              "index": 3,
              "docs": [
                "The actor has no permission to conduct the action right now but will do in the future."
              ]
            },
            {
              "name": "AlreadyDelegating",
              "fields": [],
              "index": 4,
              "docs": [
                "The account is already delegating."
              ]
            },
            {
              "name": "AlreadyVoting",
              "fields": [],
              "index": 5,
              "docs": [
                "The account currently has votes attached to it and the operation cannot succeed until",
                "these are removed, either through `unvote` or `reap_vote`."
              ]
            },
            {
              "name": "InsufficientFunds",
              "fields": [],
              "index": 6,
              "docs": [
                "Too high a balance was provided that the account cannot afford."
              ]
            },
            {
              "name": "NotDelegating",
              "fields": [],
              "index": 7,
              "docs": [
                "The account is not currently delegating."
              ]
            },
            {
              "name": "Nonsense",
              "fields": [],
              "index": 8,
              "docs": [
                "Delegation to oneself makes no sense."
              ]
            },
            {
              "name": "MaxVotesReached",
              "fields": [],
              "index": 9,
              "docs": [
                "Maximum number of votes reached."
              ]
            },
            {
              "name": "ClassNeeded",
              "fields": [],
              "index": 10,
              "docs": [
                "The class must be supplied since it is not easily determinable from the state."
              ]
            },
            {
              "name": "BadClass",
              "fields": [],
              "index": 11,
              "docs": [
                "The class ID supplied is invalid."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 787,
    "type": {
      "path": [
        "pallet_whitelist",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "UnavailablePreImage",
              "fields": [],
              "index": 0,
              "docs": [
                "The preimage of the call hash could not be loaded."
              ]
            },
            {
              "name": "UndecodableCall",
              "fields": [],
              "index": 1,
              "docs": [
                "The call could not be decoded."
              ]
            },
            {
              "name": "InvalidCallWeightWitness",
              "fields": [],
              "index": 2,
              "docs": [
                "The weight of the decoded call was higher than the witness."
              ]
            },
            {
              "name": "CallIsNotWhitelisted",
              "fields": [],
              "index": 3,
              "docs": [
                "The call was not whitelisted."
              ]
            },
            {
              "name": "CallAlreadyWhitelisted",
              "fields": [],
              "index": 4,
              "docs": [
                "The call was already whitelisted; No-Op."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 788,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 12
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 455,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 789,
    "type": {
      "path": [
        "pallet_collective",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotMember",
              "fields": [],
              "index": 0,
              "docs": [
                "Account is not a member"
              ]
            },
            {
              "name": "DuplicateProposal",
              "fields": [],
              "index": 1,
              "docs": [
                "Duplicate proposals not allowed"
              ]
            },
            {
              "name": "ProposalMissing",
              "fields": [],
              "index": 2,
              "docs": [
                "Proposal must exist"
              ]
            },
            {
              "name": "WrongIndex",
              "fields": [],
              "index": 3,
              "docs": [
                "Mismatched index"
              ]
            },
            {
              "name": "DuplicateVote",
              "fields": [],
              "index": 4,
              "docs": [
                "Duplicate vote ignored"
              ]
            },
            {
              "name": "AlreadyInitialized",
              "fields": [],
              "index": 5,
              "docs": [
                "Members are already initialized!"
              ]
            },
            {
              "name": "TooEarly",
              "fields": [],
              "index": 6,
              "docs": [
                "The close call was made too early, before the end of the voting."
              ]
            },
            {
              "name": "TooManyProposals",
              "fields": [],
              "index": 7,
              "docs": [
                "There can only be a maximum of `MaxProposals` active proposals."
              ]
            },
            {
              "name": "WrongProposalWeight",
              "fields": [],
              "index": 8,
              "docs": [
                "The given weight bound for the proposal was too low."
              ]
            },
            {
              "name": "WrongProposalLength",
              "fields": [],
              "index": 9,
              "docs": [
                "The given length bound for the proposal was too low."
              ]
            },
            {
              "name": "PrimeAccountNotMember",
              "fields": [],
              "index": 10,
              "docs": [
                "Prime account is not a member"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 790,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 378
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 791,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 791,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 378
        }
      },
      "docs": []
    }
  },
  {
    "id": 792,
    "type": {
      "path": [
        "pallet_alliance",
        "MemberRole"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Fellow",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Ally",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Retiring",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 793,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 89,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 794,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 384
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 795,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 795,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 384
        }
      },
      "docs": []
    }
  },
  {
    "id": 796,
    "type": {
      "path": [
        "pallet_alliance",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AllianceNotYetInitialized",
              "fields": [],
              "index": 0,
              "docs": [
                "The Alliance has not been initialized yet, therefore accounts cannot join it."
              ]
            },
            {
              "name": "AllianceAlreadyInitialized",
              "fields": [],
              "index": 1,
              "docs": [
                "The Alliance has been initialized, therefore cannot be initialized again."
              ]
            },
            {
              "name": "AlreadyMember",
              "fields": [],
              "index": 2,
              "docs": [
                "Account is already a member."
              ]
            },
            {
              "name": "NotMember",
              "fields": [],
              "index": 3,
              "docs": [
                "Account is not a member."
              ]
            },
            {
              "name": "NotAlly",
              "fields": [],
              "index": 4,
              "docs": [
                "Account is not an ally."
              ]
            },
            {
              "name": "NoVotingRights",
              "fields": [],
              "index": 5,
              "docs": [
                "Account does not have voting rights."
              ]
            },
            {
              "name": "AlreadyElevated",
              "fields": [],
              "index": 6,
              "docs": [
                "Account is already an elevated (fellow) member."
              ]
            },
            {
              "name": "AlreadyUnscrupulous",
              "fields": [],
              "index": 7,
              "docs": [
                "Item is already listed as unscrupulous."
              ]
            },
            {
              "name": "AccountNonGrata",
              "fields": [],
              "index": 8,
              "docs": [
                "Account has been deemed unscrupulous by the Alliance and is not welcome to join or be",
                "nominated."
              ]
            },
            {
              "name": "NotListedAsUnscrupulous",
              "fields": [],
              "index": 9,
              "docs": [
                "Item has not been deemed unscrupulous."
              ]
            },
            {
              "name": "TooManyUnscrupulousItems",
              "fields": [],
              "index": 10,
              "docs": [
                "The number of unscrupulous items exceeds `MaxUnscrupulousItems`."
              ]
            },
            {
              "name": "TooLongWebsiteUrl",
              "fields": [],
              "index": 11,
              "docs": [
                "Length of website URL exceeds `MaxWebsiteUrlLength`."
              ]
            },
            {
              "name": "InsufficientFunds",
              "fields": [],
              "index": 12,
              "docs": [
                "Balance is insufficient for the required deposit."
              ]
            },
            {
              "name": "WithoutIdentityDisplayAndWebsite",
              "fields": [],
              "index": 13,
              "docs": [
                "The account's identity does not have display field and website field."
              ]
            },
            {
              "name": "WithoutGoodIdentityJudgement",
              "fields": [],
              "index": 14,
              "docs": [
                "The account's identity has no good judgement."
              ]
            },
            {
              "name": "MissingProposalHash",
              "fields": [],
              "index": 15,
              "docs": [
                "The proposal hash is not found."
              ]
            },
            {
              "name": "MissingAnnouncement",
              "fields": [],
              "index": 16,
              "docs": [
                "The announcement is not found."
              ]
            },
            {
              "name": "TooManyMembers",
              "fields": [],
              "index": 17,
              "docs": [
                "Number of members exceeds `MaxMembersCount`."
              ]
            },
            {
              "name": "TooManyAnnouncements",
              "fields": [],
              "index": 18,
              "docs": [
                "Number of announcements exceeds `MaxAnnouncementsCount`."
              ]
            },
            {
              "name": "BadWitness",
              "fields": [],
              "index": 19,
              "docs": [
                "Invalid witness data given."
              ]
            },
            {
              "name": "AlreadyRetiring",
              "fields": [],
              "index": 20,
              "docs": [
                "Account already gave retirement notice"
              ]
            },
            {
              "name": "RetirementNoticeNotGiven",
              "fields": [],
              "index": 21,
              "docs": [
                "Account did not give a retirement notice required to retire."
              ]
            },
            {
              "name": "RetirementPeriodNotPassed",
              "fields": [],
              "index": 22,
              "docs": [
                "Retirement period has not passed."
              ]
            },
            {
              "name": "FellowsMissing",
              "fields": [],
              "index": 23,
              "docs": [
                "Fellows must be provided to initialize the Alliance."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 797,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "PoolMember"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "pool_id",
              "type": 4,
              "typeName": "PoolId",
              "docs": []
            },
            {
              "name": "points",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "last_recorded_reward_counter",
              "type": 71,
              "typeName": "T::RewardCounter",
              "docs": []
            },
            {
              "name": "unbonding_eras",
              "type": 798,
              "typeName": "BoundedBTreeMap<EraIndex, BalanceOf<T>, T::MaxUnbonding>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 798,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_btree_map",
        "BoundedBTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 4
        },
        {
          "name": "V",
          "type": 6
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 799,
              "typeName": "BTreeMap<K, V>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 799,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 4
        },
        {
          "name": "V",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 631,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 800,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "BondedPoolInner"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "commission",
              "type": 801,
              "typeName": "Commission<T>",
              "docs": []
            },
            {
              "name": "member_counter",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "points",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "roles",
              "type": 804,
              "typeName": "PoolRoles<T::AccountId>",
              "docs": []
            },
            {
              "name": "state",
              "type": 387,
              "typeName": "PoolState",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 801,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "Commission"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "current",
              "type": 393,
              "typeName": "Option<(Perbill, T::AccountId)>",
              "docs": []
            },
            {
              "name": "max",
              "type": 802,
              "typeName": "Option<Perbill>",
              "docs": []
            },
            {
              "name": "change_rate",
              "type": 803,
              "typeName": "Option<CommissionChangeRate<BlockNumberFor<T>>>",
              "docs": []
            },
            {
              "name": "throttle_from",
              "type": 38,
              "typeName": "Option<BlockNumberFor<T>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 802,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 48
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 48,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 803,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 395
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 395,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 804,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "PoolRoles"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "depositor",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "root",
              "type": 42,
              "typeName": "Option<AccountId>",
              "docs": []
            },
            {
              "name": "nominator",
              "type": 42,
              "typeName": "Option<AccountId>",
              "docs": []
            },
            {
              "name": "bouncer",
              "type": 42,
              "typeName": "Option<AccountId>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 805,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "RewardPool"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "last_recorded_reward_counter",
              "type": 71,
              "typeName": "T::RewardCounter",
              "docs": []
            },
            {
              "name": "last_recorded_total_payouts",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "total_rewards_claimed",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "total_commission_pending",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "total_commission_claimed",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 806,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "SubPools"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "no_era",
              "type": 807,
              "typeName": "UnbondPool<T>",
              "docs": []
            },
            {
              "name": "with_era",
              "type": 808,
              "typeName": "BoundedBTreeMap<EraIndex, UnbondPool<T>, TotalUnbondingPools<T>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 807,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "UnbondPool"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "points",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "balance",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 808,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_btree_map",
        "BoundedBTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 4
        },
        {
          "name": "V",
          "type": 807
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 809,
              "typeName": "BTreeMap<K, V>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 809,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 4
        },
        {
          "name": "V",
          "type": 807
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 810,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 810,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 811
        }
      },
      "docs": []
    }
  },
  {
    "id": 811,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          807
        ]
      },
      "docs": []
    }
  },
  {
    "id": 812,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PoolNotFound",
              "fields": [],
              "index": 0,
              "docs": [
                "A (bonded) pool id does not exist."
              ]
            },
            {
              "name": "PoolMemberNotFound",
              "fields": [],
              "index": 1,
              "docs": [
                "An account is not a member."
              ]
            },
            {
              "name": "RewardPoolNotFound",
              "fields": [],
              "index": 2,
              "docs": [
                "A reward pool does not exist. In all cases this is a system logic error."
              ]
            },
            {
              "name": "SubPoolsNotFound",
              "fields": [],
              "index": 3,
              "docs": [
                "A sub pool does not exist."
              ]
            },
            {
              "name": "AccountBelongsToOtherPool",
              "fields": [],
              "index": 4,
              "docs": [
                "An account is already delegating in another pool. An account may only belong to one",
                "pool at a time."
              ]
            },
            {
              "name": "FullyUnbonding",
              "fields": [],
              "index": 5,
              "docs": [
                "The member is fully unbonded (and thus cannot access the bonded and reward pool",
                "anymore to, for example, collect rewards)."
              ]
            },
            {
              "name": "MaxUnbondingLimit",
              "fields": [],
              "index": 6,
              "docs": [
                "The member cannot unbond further chunks due to reaching the limit."
              ]
            },
            {
              "name": "CannotWithdrawAny",
              "fields": [],
              "index": 7,
              "docs": [
                "None of the funds can be withdrawn yet because the bonding duration has not passed."
              ]
            },
            {
              "name": "MinimumBondNotMet",
              "fields": [],
              "index": 8,
              "docs": [
                "The amount does not meet the minimum bond to either join or create a pool.",
                "",
                "The depositor can never unbond to a value less than",
                "`Pallet::depositor_min_bond`. The caller does not have nominating",
                "permissions for the pool. Members can never unbond to a value below `MinJoinBond`."
              ]
            },
            {
              "name": "OverflowRisk",
              "fields": [],
              "index": 9,
              "docs": [
                "The transaction could not be executed due to overflow risk for the pool."
              ]
            },
            {
              "name": "NotDestroying",
              "fields": [],
              "index": 10,
              "docs": [
                "A pool must be in [`PoolState::Destroying`] in order for the depositor to unbond or for",
                "other members to be permissionlessly unbonded."
              ]
            },
            {
              "name": "NotNominator",
              "fields": [],
              "index": 11,
              "docs": [
                "The caller does not have nominating permissions for the pool."
              ]
            },
            {
              "name": "NotKickerOrDestroying",
              "fields": [],
              "index": 12,
              "docs": [
                "Either a) the caller cannot make a valid kick or b) the pool is not destroying."
              ]
            },
            {
              "name": "NotOpen",
              "fields": [],
              "index": 13,
              "docs": [
                "The pool is not open to join"
              ]
            },
            {
              "name": "MaxPools",
              "fields": [],
              "index": 14,
              "docs": [
                "The system is maxed out on pools."
              ]
            },
            {
              "name": "MaxPoolMembers",
              "fields": [],
              "index": 15,
              "docs": [
                "Too many members in the pool or system."
              ]
            },
            {
              "name": "CanNotChangeState",
              "fields": [],
              "index": 16,
              "docs": [
                "The pools state cannot be changed."
              ]
            },
            {
              "name": "DoesNotHavePermission",
              "fields": [],
              "index": 17,
              "docs": [
                "The caller does not have adequate permissions."
              ]
            },
            {
              "name": "MetadataExceedsMaxLen",
              "fields": [],
              "index": 18,
              "docs": [
                "Metadata exceeds [`Config::MaxMetadataLen`]"
              ]
            },
            {
              "name": "Defensive",
              "fields": [
                {
                  "name": null,
                  "type": 813,
                  "typeName": "DefensiveError",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "Some error occurred that should never happen. This should be reported to the",
                "maintainers."
              ]
            },
            {
              "name": "PartialUnbondNotAllowedPermissionlessly",
              "fields": [],
              "index": 20,
              "docs": [
                "Partial unbonding now allowed permissionlessly."
              ]
            },
            {
              "name": "MaxCommissionRestricted",
              "fields": [],
              "index": 21,
              "docs": [
                "The pool's max commission cannot be set higher than the existing value."
              ]
            },
            {
              "name": "CommissionExceedsMaximum",
              "fields": [],
              "index": 22,
              "docs": [
                "The supplied commission exceeds the max allowed commission."
              ]
            },
            {
              "name": "CommissionExceedsGlobalMaximum",
              "fields": [],
              "index": 23,
              "docs": [
                "The supplied commission exceeds global maximum commission."
              ]
            },
            {
              "name": "CommissionChangeThrottled",
              "fields": [],
              "index": 24,
              "docs": [
                "Not enough blocks have surpassed since the last commission update."
              ]
            },
            {
              "name": "CommissionChangeRateNotAllowed",
              "fields": [],
              "index": 25,
              "docs": [
                "The submitted changes to commission change rate are not allowed."
              ]
            },
            {
              "name": "NoPendingCommission",
              "fields": [],
              "index": 26,
              "docs": [
                "There is no pending commission to claim."
              ]
            },
            {
              "name": "NoCommissionCurrentSet",
              "fields": [],
              "index": 27,
              "docs": [
                "No commission current has been set."
              ]
            },
            {
              "name": "PoolIdInUse",
              "fields": [],
              "index": 28,
              "docs": [
                "Pool id currently in use."
              ]
            },
            {
              "name": "InvalidPoolId",
              "fields": [],
              "index": 29,
              "docs": [
                "Pool id provided is not correct/usable."
              ]
            },
            {
              "name": "BondExtraRestricted",
              "fields": [],
              "index": 30,
              "docs": [
                "Bonding extra is restricted to the exact pending reward amount."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 813,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "pallet",
        "DefensiveError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotEnoughSpaceInUnbondPool",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "PoolNotFound",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "RewardPoolNotFound",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "SubPoolsNotFound",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "BondedStashKilledPrematurely",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 814,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "ReferendumInfo"
      ],
      "params": [
        {
          "name": "TrackId",
          "type": 101
        },
        {
          "name": "RuntimeOrigin",
          "type": 148
        },
        {
          "name": "Moment",
          "type": 4
        },
        {
          "name": "Call",
          "type": 140
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Tally",
          "type": 429
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "ScheduleAddress",
          "type": 94
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ongoing",
              "fields": [
                {
                  "name": null,
                  "type": 815,
                  "typeName": "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Approved",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Rejected",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Cancelled",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "TimedOut",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 760,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Killed",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 815,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "ReferendumStatus"
      ],
      "params": [
        {
          "name": "TrackId",
          "type": 101
        },
        {
          "name": "RuntimeOrigin",
          "type": 148
        },
        {
          "name": "Moment",
          "type": 4
        },
        {
          "name": "Call",
          "type": 140
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Tally",
          "type": 429
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "ScheduleAddress",
          "type": 94
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "track",
              "type": 101,
              "typeName": "TrackId",
              "docs": []
            },
            {
              "name": "origin",
              "type": 148,
              "typeName": "RuntimeOrigin",
              "docs": []
            },
            {
              "name": "proposal",
              "type": 140,
              "typeName": "Call",
              "docs": []
            },
            {
              "name": "enactment",
              "type": 367,
              "typeName": "DispatchTime<Moment>",
              "docs": []
            },
            {
              "name": "submitted",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "submission_deposit",
              "type": 759,
              "typeName": "Deposit<AccountId, Balance>",
              "docs": []
            },
            {
              "name": "decision_deposit",
              "type": 760,
              "typeName": "Option<Deposit<AccountId, Balance>>",
              "docs": []
            },
            {
              "name": "deciding",
              "type": 761,
              "typeName": "Option<DecidingStatus<Moment>>",
              "docs": []
            },
            {
              "name": "tally",
              "type": 429,
              "typeName": "Tally",
              "docs": []
            },
            {
              "name": "in_queue",
              "type": 43,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "alarm",
              "type": 763,
              "typeName": "Option<(Moment, ScheduleAddress)>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 816,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 94
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 456,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 817,
    "type": {
      "path": [
        "pallet_referenda",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotOngoing",
              "fields": [],
              "index": 0,
              "docs": [
                "Referendum is not ongoing."
              ]
            },
            {
              "name": "HasDeposit",
              "fields": [],
              "index": 1,
              "docs": [
                "Referendum's decision deposit is already paid."
              ]
            },
            {
              "name": "BadTrack",
              "fields": [],
              "index": 2,
              "docs": [
                "The track identifier given was invalid."
              ]
            },
            {
              "name": "Full",
              "fields": [],
              "index": 3,
              "docs": [
                "There are already a full complement of referenda in progress for this track."
              ]
            },
            {
              "name": "QueueEmpty",
              "fields": [],
              "index": 4,
              "docs": [
                "The queue of the track is empty."
              ]
            },
            {
              "name": "BadReferendum",
              "fields": [],
              "index": 5,
              "docs": [
                "The referendum index provided is invalid in this context."
              ]
            },
            {
              "name": "NothingToDo",
              "fields": [],
              "index": 6,
              "docs": [
                "There was nothing to do in the advancement."
              ]
            },
            {
              "name": "NoTrack",
              "fields": [],
              "index": 7,
              "docs": [
                "No track exists for the proposal origin."
              ]
            },
            {
              "name": "Unfinished",
              "fields": [],
              "index": 8,
              "docs": [
                "Any deposit cannot be refunded until after the decision is over."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 9,
              "docs": [
                "The deposit refunder is not the depositor."
              ]
            },
            {
              "name": "NoDeposit",
              "fields": [],
              "index": 10,
              "docs": [
                "The deposit cannot be refunded since none was made."
              ]
            },
            {
              "name": "BadStatus",
              "fields": [],
              "index": 11,
              "docs": [
                "The referendum status is invalid for this operation."
              ]
            },
            {
              "name": "PreimageNotExist",
              "fields": [],
              "index": 12,
              "docs": [
                "The preimage does not exist."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 818,
    "type": {
      "path": [
        "pallet_ranked_collective",
        "MemberRecord"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "rank",
              "type": 101,
              "typeName": "Rank",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 819,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          101,
          0
        ]
      },
      "docs": []
    }
  },
  {
    "id": 820,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          101,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 821,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 822,
    "type": {
      "path": [
        "pallet_ranked_collective",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AlreadyMember",
              "fields": [],
              "index": 0,
              "docs": [
                "Account is already a member."
              ]
            },
            {
              "name": "NotMember",
              "fields": [],
              "index": 1,
              "docs": [
                "Account is not a member."
              ]
            },
            {
              "name": "NotPolling",
              "fields": [],
              "index": 2,
              "docs": [
                "The given poll index is unknown or has closed."
              ]
            },
            {
              "name": "Ongoing",
              "fields": [],
              "index": 3,
              "docs": [
                "The given poll is still ongoing."
              ]
            },
            {
              "name": "NoneRemaining",
              "fields": [],
              "index": 4,
              "docs": [
                "There are no further records to be removed."
              ]
            },
            {
              "name": "Corruption",
              "fields": [],
              "index": 5,
              "docs": [
                "Unexpected error in state."
              ]
            },
            {
              "name": "RankTooLow",
              "fields": [],
              "index": 6,
              "docs": [
                "The member's rank is too low to vote."
              ]
            },
            {
              "name": "InvalidWitness",
              "fields": [],
              "index": 7,
              "docs": [
                "The information provided is incorrect."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 8,
              "docs": [
                "The origin is not sufficiently privileged to do the operation."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 823,
    "type": {
      "path": [
        "pallet_asset_conversion",
        "types",
        "PoolInfo"
      ],
      "params": [
        {
          "name": "PoolAssetId",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "lp_token",
              "type": 4,
              "typeName": "PoolAssetId",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 824,
    "type": {
      "path": [
        "pallet_asset_conversion",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "EqualAssets",
              "fields": [],
              "index": 0,
              "docs": [
                "Provided assets are equal."
              ]
            },
            {
              "name": "UnsupportedAsset",
              "fields": [],
              "index": 1,
              "docs": [
                "Provided asset is not supported for pool."
              ]
            },
            {
              "name": "PoolExists",
              "fields": [],
              "index": 2,
              "docs": [
                "Pool already exists."
              ]
            },
            {
              "name": "WrongDesiredAmount",
              "fields": [],
              "index": 3,
              "docs": [
                "Desired amount can't be zero."
              ]
            },
            {
              "name": "AmountOneLessThanMinimal",
              "fields": [],
              "index": 4,
              "docs": [
                "Provided amount should be greater than or equal to the existential deposit/asset's",
                "minimal amount."
              ]
            },
            {
              "name": "AmountTwoLessThanMinimal",
              "fields": [],
              "index": 5,
              "docs": [
                "Provided amount should be greater than or equal to the existential deposit/asset's",
                "minimal amount."
              ]
            },
            {
              "name": "ReserveLeftLessThanMinimal",
              "fields": [],
              "index": 6,
              "docs": [
                "Reserve needs to always be greater than or equal to the existential deposit/asset's",
                "minimal amount."
              ]
            },
            {
              "name": "AmountOutTooHigh",
              "fields": [],
              "index": 7,
              "docs": [
                "Desired amount can't be equal to the pool reserve."
              ]
            },
            {
              "name": "PoolNotFound",
              "fields": [],
              "index": 8,
              "docs": [
                "The pool doesn't exist."
              ]
            },
            {
              "name": "Overflow",
              "fields": [],
              "index": 9,
              "docs": [
                "An overflow happened."
              ]
            },
            {
              "name": "AssetOneDepositDidNotMeetMinimum",
              "fields": [],
              "index": 10,
              "docs": [
                "The minimal amount requirement for the first token in the pair wasn't met."
              ]
            },
            {
              "name": "AssetTwoDepositDidNotMeetMinimum",
              "fields": [],
              "index": 11,
              "docs": [
                "The minimal amount requirement for the second token in the pair wasn't met."
              ]
            },
            {
              "name": "AssetOneWithdrawalDidNotMeetMinimum",
              "fields": [],
              "index": 12,
              "docs": [
                "The minimal amount requirement for the first token in the pair wasn't met."
              ]
            },
            {
              "name": "AssetTwoWithdrawalDidNotMeetMinimum",
              "fields": [],
              "index": 13,
              "docs": [
                "The minimal amount requirement for the second token in the pair wasn't met."
              ]
            },
            {
              "name": "OptimalAmountLessThanDesired",
              "fields": [],
              "index": 14,
              "docs": [
                "Optimal calculated amount is less than desired."
              ]
            },
            {
              "name": "InsufficientLiquidityMinted",
              "fields": [],
              "index": 15,
              "docs": [
                "Insufficient liquidity minted."
              ]
            },
            {
              "name": "ZeroLiquidity",
              "fields": [],
              "index": 16,
              "docs": [
                "Requested liquidity can't be zero."
              ]
            },
            {
              "name": "ZeroAmount",
              "fields": [],
              "index": 17,
              "docs": [
                "Amount can't be zero."
              ]
            },
            {
              "name": "InsufficientLiquidity",
              "fields": [],
              "index": 18,
              "docs": [
                "Insufficient liquidity in the pool."
              ]
            },
            {
              "name": "ProvidedMinimumNotSufficientForSwap",
              "fields": [],
              "index": 19,
              "docs": [
                "Calculated amount out is less than provided minimum amount."
              ]
            },
            {
              "name": "ProvidedMaximumNotSufficientForSwap",
              "fields": [],
              "index": 20,
              "docs": [
                "Provided maximum amount is not sufficient for swap."
              ]
            },
            {
              "name": "PoolMustContainNativeCurrency",
              "fields": [],
              "index": 21,
              "docs": [
                "Only pools with native on one side are valid."
              ]
            },
            {
              "name": "InvalidPath",
              "fields": [],
              "index": 22,
              "docs": [
                "The provided path must consists of 2 assets at least."
              ]
            },
            {
              "name": "PathError",
              "fields": [],
              "index": 23,
              "docs": [
                "It was not possible to calculate path data."
              ]
            },
            {
              "name": "NonUniquePath",
              "fields": [],
              "index": 24,
              "docs": [
                "The provided path must consists of unique assets."
              ]
            },
            {
              "name": "IncorrectPoolAssetId",
              "fields": [],
              "index": 25,
              "docs": [
                "It was not possible to get or increment the Id of the pool."
              ]
            },
            {
              "name": "CorrespondenceError",
              "fields": [],
              "index": 26,
              "docs": [
                "Unable to find an element in an array/vec that should have one-to-one correspondence",
                "with another. For example, an array of assets constituting a `path` should have a",
                "corresponding array of `amounts` along the path."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 825,
    "type": {
      "path": [
        "pallet_fast_unstake",
        "types",
        "UnstakeRequest"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "stashes",
              "type": 826,
              "typeName": "BoundedVec<(T::AccountId, BalanceOf<T>), T::BatchSize>",
              "docs": []
            },
            {
              "name": "checked",
              "type": 827,
              "typeName": "BoundedVec<EraIndex, MaxChecking<T>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 826,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 62
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 61,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 827,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 114,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 828,
    "type": {
      "path": [
        "pallet_fast_unstake",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotController",
              "fields": [],
              "index": 0,
              "docs": [
                "The provided Controller account was not found.",
                "",
                "This means that the given account is not bonded."
              ]
            },
            {
              "name": "AlreadyQueued",
              "fields": [],
              "index": 1,
              "docs": [
                "The bonded account has already been queued."
              ]
            },
            {
              "name": "NotFullyBonded",
              "fields": [],
              "index": 2,
              "docs": [
                "The bonded account has active unlocking chunks."
              ]
            },
            {
              "name": "NotQueued",
              "fields": [],
              "index": 3,
              "docs": [
                "The provided un-staker is not in the `Queue`."
              ]
            },
            {
              "name": "AlreadyHead",
              "fields": [],
              "index": 4,
              "docs": [
                "The provided un-staker is already in Head, and cannot deregister."
              ]
            },
            {
              "name": "CallNotAllowed",
              "fields": [],
              "index": 5,
              "docs": [
                "The call is not allowed at this point because the pallet is not active."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 829,
    "type": {
      "path": [
        "pallet_message_queue",
        "BookState"
      ],
      "params": [
        {
          "name": "MessageOrigin",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "begin",
              "type": 4,
              "typeName": "PageIndex",
              "docs": []
            },
            {
              "name": "end",
              "type": 4,
              "typeName": "PageIndex",
              "docs": []
            },
            {
              "name": "count",
              "type": 4,
              "typeName": "PageIndex",
              "docs": []
            },
            {
              "name": "ready_neighbours",
              "type": 830,
              "typeName": "Option<Neighbours<MessageOrigin>>",
              "docs": []
            },
            {
              "name": "message_count",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "size",
              "type": 11,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 830,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 831
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 831,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 831,
    "type": {
      "path": [
        "pallet_message_queue",
        "Neighbours"
      ],
      "params": [
        {
          "name": "MessageOrigin",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "prev",
              "type": 4,
              "typeName": "MessageOrigin",
              "docs": []
            },
            {
              "name": "next",
              "type": 4,
              "typeName": "MessageOrigin",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 832,
    "type": {
      "path": [
        "pallet_message_queue",
        "Page"
      ],
      "params": [
        {
          "name": "Size",
          "type": 4
        },
        {
          "name": "HeapSize",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "remaining",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "remaining_size",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "first_index",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "first",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "last",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "heap",
              "type": 833,
              "typeName": "BoundedVec<u8, IntoU32<HeapSize, Size>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 833,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 834,
    "type": {
      "path": [
        "pallet_message_queue",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotReapable",
              "fields": [],
              "index": 0,
              "docs": [
                "Page is not reapable because it has items remaining to be processed and is not old",
                "enough."
              ]
            },
            {
              "name": "NoPage",
              "fields": [],
              "index": 1,
              "docs": [
                "Page to be reaped does not exist."
              ]
            },
            {
              "name": "NoMessage",
              "fields": [],
              "index": 2,
              "docs": [
                "The referenced message could not be found."
              ]
            },
            {
              "name": "AlreadyProcessed",
              "fields": [],
              "index": 3,
              "docs": [
                "The message was already processed and cannot be processed again."
              ]
            },
            {
              "name": "Queued",
              "fields": [],
              "index": 4,
              "docs": [
                "The message is queued for future execution."
              ]
            },
            {
              "name": "InsufficientWeight",
              "fields": [],
              "index": 5,
              "docs": [
                "There is temporarily not enough weight to continue servicing messages."
              ]
            },
            {
              "name": "TemporarilyUnprocessable",
              "fields": [],
              "index": 6,
              "docs": [
                "This message is temporarily unprocessable.",
                "",
                "Such errors are expected, but not guaranteed, to resolve themselves eventually through",
                "retrying."
              ]
            },
            {
              "name": "QueuePaused",
              "fields": [],
              "index": 7,
              "docs": [
                "The queue is paused and no message can be executed from it.",
                "",
                "This can change at any time and may resolve in the future by re-trying."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 835,
    "type": {
      "path": [
        "pallet_tx_pause",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "IsPaused",
              "fields": [],
              "index": 0,
              "docs": [
                "The call is paused."
              ]
            },
            {
              "name": "IsUnpaused",
              "fields": [],
              "index": 1,
              "docs": [
                "The call is unpaused."
              ]
            },
            {
              "name": "Unpausable",
              "fields": [],
              "index": 2,
              "docs": [
                "The call is whitelisted and cannot be paused."
              ]
            },
            {
              "name": "NotFound",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 836,
    "type": {
      "path": [
        "pallet_safe_mode",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Entered",
              "fields": [],
              "index": 0,
              "docs": [
                "The safe-mode is (already or still) entered."
              ]
            },
            {
              "name": "Exited",
              "fields": [],
              "index": 1,
              "docs": [
                "The safe-mode is (already or still) exited."
              ]
            },
            {
              "name": "NotConfigured",
              "fields": [],
              "index": 2,
              "docs": [
                "This functionality of the pallet is disabled by the configuration."
              ]
            },
            {
              "name": "NoDeposit",
              "fields": [],
              "index": 3,
              "docs": [
                "There is no balance reserved."
              ]
            },
            {
              "name": "AlreadyDeposited",
              "fields": [],
              "index": 4,
              "docs": [
                "The account already has a deposit reserved and can therefore not enter or extend again."
              ]
            },
            {
              "name": "CannotReleaseYet",
              "fields": [],
              "index": 5,
              "docs": [
                "This deposit cannot be released yet."
              ]
            },
            {
              "name": "CurrencyError",
              "fields": [],
              "index": 6,
              "docs": [
                "An error from the underlying `Currency`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 837,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 410
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 838,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 838,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 410
        }
      },
      "docs": []
    }
  },
  {
    "id": 839,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 840
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 841,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 840,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "LeaseRecordItem"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "until",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            },
            {
              "name": "task",
              "type": 4,
              "typeName": "TaskId",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 841,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 840
        }
      },
      "docs": []
    }
  },
  {
    "id": 842,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "StatusRecord"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "core_count",
              "type": 101,
              "typeName": "CoreIndex",
              "docs": []
            },
            {
              "name": "private_pool_size",
              "type": 4,
              "typeName": "CoreMaskBitCount",
              "docs": []
            },
            {
              "name": "system_pool_size",
              "type": 4,
              "typeName": "CoreMaskBitCount",
              "docs": []
            },
            {
              "name": "last_committed_timeslice",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            },
            {
              "name": "last_timeslice",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 843,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "SaleInfoRecord"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "sale_start",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "leadin_length",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "price",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "region_begin",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            },
            {
              "name": "region_end",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            },
            {
              "name": "ideal_cores_sold",
              "type": 101,
              "typeName": "CoreIndex",
              "docs": []
            },
            {
              "name": "cores_offered",
              "type": 101,
              "typeName": "CoreIndex",
              "docs": []
            },
            {
              "name": "first_core",
              "type": 101,
              "typeName": "CoreIndex",
              "docs": []
            },
            {
              "name": "sellout_price",
              "type": 331,
              "typeName": "Option<Balance>",
              "docs": []
            },
            {
              "name": "cores_sold",
              "type": 101,
              "typeName": "CoreIndex",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 844,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "AllowedRenewalId"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "core",
              "type": 101,
              "typeName": "CoreIndex",
              "docs": []
            },
            {
              "name": "when",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 845,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "AllowedRenewalRecord"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "price",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "completion",
              "type": 846,
              "typeName": "CompletionStatus",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 846,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "CompletionStatus"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Partial",
              "fields": [
                {
                  "name": null,
                  "type": 412,
                  "typeName": "CoreMask",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Complete",
              "fields": [
                {
                  "name": null,
                  "type": 410,
                  "typeName": "Schedule",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 847,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "RegionRecord"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "end",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            },
            {
              "name": "owner",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "paid",
              "type": 331,
              "typeName": "Option<Balance>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 848,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          101
        ]
      },
      "docs": []
    }
  },
  {
    "id": 849,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "ContributionRecord"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "length",
              "type": 4,
              "typeName": "Timeslice",
              "docs": []
            },
            {
              "name": "payee",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 850,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "PoolIoRecord"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "private",
              "type": 851,
              "typeName": "SignedCoreMaskBitCount",
              "docs": []
            },
            {
              "name": "system",
              "type": 851,
              "typeName": "SignedCoreMaskBitCount",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 851,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "I32"
      },
      "docs": []
    }
  },
  {
    "id": 852,
    "type": {
      "path": [
        "pallet_broker",
        "types",
        "InstaPoolHistoryRecord"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "private_contributions",
              "type": 4,
              "typeName": "CoreMaskBitCount",
              "docs": []
            },
            {
              "name": "system_contributions",
              "type": 4,
              "typeName": "CoreMaskBitCount",
              "docs": []
            },
            {
              "name": "maybe_payout",
              "type": 331,
              "typeName": "Option<Balance>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 853,
    "type": {
      "path": [
        "pallet_broker",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "UnknownRegion",
              "fields": [],
              "index": 0,
              "docs": [
                "The given region identity is not known."
              ]
            },
            {
              "name": "NotOwner",
              "fields": [],
              "index": 1,
              "docs": [
                "The owner of the region is not the origin."
              ]
            },
            {
              "name": "PivotTooLate",
              "fields": [],
              "index": 2,
              "docs": [
                "The pivot point of the partition at or after the end of the region."
              ]
            },
            {
              "name": "PivotTooEarly",
              "fields": [],
              "index": 3,
              "docs": [
                "The pivot point of the partition at the beginning of the region."
              ]
            },
            {
              "name": "ExteriorPivot",
              "fields": [],
              "index": 4,
              "docs": [
                "The pivot mask for the interlacing is not contained within the region's interlace mask."
              ]
            },
            {
              "name": "VoidPivot",
              "fields": [],
              "index": 5,
              "docs": [
                "The pivot mask for the interlacing is void (and therefore unschedulable)."
              ]
            },
            {
              "name": "CompletePivot",
              "fields": [],
              "index": 6,
              "docs": [
                "The pivot mask for the interlacing is complete (and therefore not a strict subset)."
              ]
            },
            {
              "name": "CorruptWorkplan",
              "fields": [],
              "index": 7,
              "docs": [
                "The workplan of the pallet's state is invalid. This indicates a state corruption."
              ]
            },
            {
              "name": "NoSales",
              "fields": [],
              "index": 8,
              "docs": [
                "There is no sale happening currently."
              ]
            },
            {
              "name": "Overpriced",
              "fields": [],
              "index": 9,
              "docs": [
                "The price limit is exceeded."
              ]
            },
            {
              "name": "Unavailable",
              "fields": [],
              "index": 10,
              "docs": [
                "There are no cores available."
              ]
            },
            {
              "name": "SoldOut",
              "fields": [],
              "index": 11,
              "docs": [
                "The sale limit has been reached."
              ]
            },
            {
              "name": "WrongTime",
              "fields": [],
              "index": 12,
              "docs": [
                "The renewal operation is not valid at the current time (it may become valid in the next",
                "sale)."
              ]
            },
            {
              "name": "NotAllowed",
              "fields": [],
              "index": 13,
              "docs": [
                "Invalid attempt to renew."
              ]
            },
            {
              "name": "Uninitialized",
              "fields": [],
              "index": 14,
              "docs": [
                "This pallet has not yet been initialized."
              ]
            },
            {
              "name": "TooEarly",
              "fields": [],
              "index": 15,
              "docs": [
                "The purchase cannot happen yet as the sale period is yet to begin."
              ]
            },
            {
              "name": "NothingToDo",
              "fields": [],
              "index": 16,
              "docs": [
                "There is no work to be done."
              ]
            },
            {
              "name": "TooManyReservations",
              "fields": [],
              "index": 17,
              "docs": [
                "The maximum amount of reservations has already been reached."
              ]
            },
            {
              "name": "TooManyLeases",
              "fields": [],
              "index": 18,
              "docs": [
                "The maximum amount of leases has already been reached."
              ]
            },
            {
              "name": "UnknownRevenue",
              "fields": [],
              "index": 19,
              "docs": [
                "The revenue for the Instantaneous Core Sales of this period is not (yet) known and thus",
                "this operation cannot proceed."
              ]
            },
            {
              "name": "UnknownContribution",
              "fields": [],
              "index": 20,
              "docs": [
                "The identified contribution to the Instantaneous Core Pool is unknown."
              ]
            },
            {
              "name": "IncompleteAssignment",
              "fields": [],
              "index": 21,
              "docs": [
                "The workload assigned for renewal is incomplete. This is unexpected and indicates a",
                "logic error."
              ]
            },
            {
              "name": "StillValid",
              "fields": [],
              "index": 22,
              "docs": [
                "An item cannot be dropped because it is still valid."
              ]
            },
            {
              "name": "NoHistory",
              "fields": [],
              "index": 23,
              "docs": [
                "The history item does not exist."
              ]
            },
            {
              "name": "UnknownReservation",
              "fields": [],
              "index": 24,
              "docs": [
                "No reservation of the given index exists."
              ]
            },
            {
              "name": "UnknownRenewal",
              "fields": [],
              "index": 25,
              "docs": [
                "The renewal record cannot be found."
              ]
            },
            {
              "name": "AlreadyExpired",
              "fields": [],
              "index": 26,
              "docs": [
                "The lease expiry time has already passed."
              ]
            },
            {
              "name": "InvalidConfig",
              "fields": [],
              "index": 27,
              "docs": [
                "The configuration could not be applied because it is invalid."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 854,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          855,
          856,
          857,
          858,
          859,
          861,
          862,
          863
        ]
      },
      "docs": []
    }
  },
  {
    "id": 855,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_non_zero_sender",
        "CheckNonZeroSender"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 856,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_spec_version",
        "CheckSpecVersion"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 857,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_tx_version",
        "CheckTxVersion"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 858,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_genesis",
        "CheckGenesis"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 859,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_mortality",
        "CheckMortality"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 860,
              "typeName": "Era",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 860,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "era",
        "Era"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Immortal",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Mortal1",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Mortal2",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Mortal3",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Mortal4",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Mortal5",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Mortal6",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "Mortal7",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "Mortal8",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "Mortal9",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "Mortal10",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 10,
              "docs": []
            },
            {
              "name": "Mortal11",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "Mortal12",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "Mortal13",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "Mortal14",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "Mortal15",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "Mortal16",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "Mortal17",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "Mortal18",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "Mortal19",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "Mortal20",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 20,
              "docs": []
            },
            {
              "name": "Mortal21",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Mortal22",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "Mortal23",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Mortal24",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Mortal25",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "Mortal26",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "Mortal27",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 27,
              "docs": []
            },
            {
              "name": "Mortal28",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "Mortal29",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "Mortal30",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "Mortal31",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 31,
              "docs": []
            },
            {
              "name": "Mortal32",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "Mortal33",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 33,
              "docs": []
            },
            {
              "name": "Mortal34",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "Mortal35",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 35,
              "docs": []
            },
            {
              "name": "Mortal36",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "Mortal37",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            },
            {
              "name": "Mortal38",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 38,
              "docs": []
            },
            {
              "name": "Mortal39",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 39,
              "docs": []
            },
            {
              "name": "Mortal40",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 40,
              "docs": []
            },
            {
              "name": "Mortal41",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 41,
              "docs": []
            },
            {
              "name": "Mortal42",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 42,
              "docs": []
            },
            {
              "name": "Mortal43",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 43,
              "docs": []
            },
            {
              "name": "Mortal44",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 44,
              "docs": []
            },
            {
              "name": "Mortal45",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 45,
              "docs": []
            },
            {
              "name": "Mortal46",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 46,
              "docs": []
            },
            {
              "name": "Mortal47",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 47,
              "docs": []
            },
            {
              "name": "Mortal48",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 48,
              "docs": []
            },
            {
              "name": "Mortal49",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 49,
              "docs": []
            },
            {
              "name": "Mortal50",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 50,
              "docs": []
            },
            {
              "name": "Mortal51",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 51,
              "docs": []
            },
            {
              "name": "Mortal52",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 52,
              "docs": []
            },
            {
              "name": "Mortal53",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 53,
              "docs": []
            },
            {
              "name": "Mortal54",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 54,
              "docs": []
            },
            {
              "name": "Mortal55",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 55,
              "docs": []
            },
            {
              "name": "Mortal56",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 56,
              "docs": []
            },
            {
              "name": "Mortal57",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 57,
              "docs": []
            },
            {
              "name": "Mortal58",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 58,
              "docs": []
            },
            {
              "name": "Mortal59",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 59,
              "docs": []
            },
            {
              "name": "Mortal60",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 60,
              "docs": []
            },
            {
              "name": "Mortal61",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 61,
              "docs": []
            },
            {
              "name": "Mortal62",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 62,
              "docs": []
            },
            {
              "name": "Mortal63",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 63,
              "docs": []
            },
            {
              "name": "Mortal64",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 64,
              "docs": []
            },
            {
              "name": "Mortal65",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 65,
              "docs": []
            },
            {
              "name": "Mortal66",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 66,
              "docs": []
            },
            {
              "name": "Mortal67",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 67,
              "docs": []
            },
            {
              "name": "Mortal68",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 68,
              "docs": []
            },
            {
              "name": "Mortal69",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 69,
              "docs": []
            },
            {
              "name": "Mortal70",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 70,
              "docs": []
            },
            {
              "name": "Mortal71",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 71,
              "docs": []
            },
            {
              "name": "Mortal72",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 72,
              "docs": []
            },
            {
              "name": "Mortal73",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 73,
              "docs": []
            },
            {
              "name": "Mortal74",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 74,
              "docs": []
            },
            {
              "name": "Mortal75",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 75,
              "docs": []
            },
            {
              "name": "Mortal76",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 76,
              "docs": []
            },
            {
              "name": "Mortal77",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 77,
              "docs": []
            },
            {
              "name": "Mortal78",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 78,
              "docs": []
            },
            {
              "name": "Mortal79",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 79,
              "docs": []
            },
            {
              "name": "Mortal80",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 80,
              "docs": []
            },
            {
              "name": "Mortal81",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 81,
              "docs": []
            },
            {
              "name": "Mortal82",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 82,
              "docs": []
            },
            {
              "name": "Mortal83",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 83,
              "docs": []
            },
            {
              "name": "Mortal84",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 84,
              "docs": []
            },
            {
              "name": "Mortal85",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 85,
              "docs": []
            },
            {
              "name": "Mortal86",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 86,
              "docs": []
            },
            {
              "name": "Mortal87",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 87,
              "docs": []
            },
            {
              "name": "Mortal88",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 88,
              "docs": []
            },
            {
              "name": "Mortal89",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 89,
              "docs": []
            },
            {
              "name": "Mortal90",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 90,
              "docs": []
            },
            {
              "name": "Mortal91",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 91,
              "docs": []
            },
            {
              "name": "Mortal92",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 92,
              "docs": []
            },
            {
              "name": "Mortal93",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 93,
              "docs": []
            },
            {
              "name": "Mortal94",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 94,
              "docs": []
            },
            {
              "name": "Mortal95",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 95,
              "docs": []
            },
            {
              "name": "Mortal96",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 96,
              "docs": []
            },
            {
              "name": "Mortal97",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 97,
              "docs": []
            },
            {
              "name": "Mortal98",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 98,
              "docs": []
            },
            {
              "name": "Mortal99",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 99,
              "docs": []
            },
            {
              "name": "Mortal100",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 100,
              "docs": []
            },
            {
              "name": "Mortal101",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 101,
              "docs": []
            },
            {
              "name": "Mortal102",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 102,
              "docs": []
            },
            {
              "name": "Mortal103",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 103,
              "docs": []
            },
            {
              "name": "Mortal104",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 104,
              "docs": []
            },
            {
              "name": "Mortal105",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 105,
              "docs": []
            },
            {
              "name": "Mortal106",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 106,
              "docs": []
            },
            {
              "name": "Mortal107",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 107,
              "docs": []
            },
            {
              "name": "Mortal108",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 108,
              "docs": []
            },
            {
              "name": "Mortal109",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 109,
              "docs": []
            },
            {
              "name": "Mortal110",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 110,
              "docs": []
            },
            {
              "name": "Mortal111",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 111,
              "docs": []
            },
            {
              "name": "Mortal112",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 112,
              "docs": []
            },
            {
              "name": "Mortal113",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 113,
              "docs": []
            },
            {
              "name": "Mortal114",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 114,
              "docs": []
            },
            {
              "name": "Mortal115",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 115,
              "docs": []
            },
            {
              "name": "Mortal116",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 116,
              "docs": []
            },
            {
              "name": "Mortal117",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 117,
              "docs": []
            },
            {
              "name": "Mortal118",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 118,
              "docs": []
            },
            {
              "name": "Mortal119",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 119,
              "docs": []
            },
            {
              "name": "Mortal120",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 120,
              "docs": []
            },
            {
              "name": "Mortal121",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 121,
              "docs": []
            },
            {
              "name": "Mortal122",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 122,
              "docs": []
            },
            {
              "name": "Mortal123",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 123,
              "docs": []
            },
            {
              "name": "Mortal124",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 124,
              "docs": []
            },
            {
              "name": "Mortal125",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 125,
              "docs": []
            },
            {
              "name": "Mortal126",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 126,
              "docs": []
            },
            {
              "name": "Mortal127",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 127,
              "docs": []
            },
            {
              "name": "Mortal128",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 128,
              "docs": []
            },
            {
              "name": "Mortal129",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 129,
              "docs": []
            },
            {
              "name": "Mortal130",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 130,
              "docs": []
            },
            {
              "name": "Mortal131",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 131,
              "docs": []
            },
            {
              "name": "Mortal132",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 132,
              "docs": []
            },
            {
              "name": "Mortal133",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 133,
              "docs": []
            },
            {
              "name": "Mortal134",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 134,
              "docs": []
            },
            {
              "name": "Mortal135",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 135,
              "docs": []
            },
            {
              "name": "Mortal136",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 136,
              "docs": []
            },
            {
              "name": "Mortal137",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 137,
              "docs": []
            },
            {
              "name": "Mortal138",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 138,
              "docs": []
            },
            {
              "name": "Mortal139",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 139,
              "docs": []
            },
            {
              "name": "Mortal140",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 140,
              "docs": []
            },
            {
              "name": "Mortal141",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 141,
              "docs": []
            },
            {
              "name": "Mortal142",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 142,
              "docs": []
            },
            {
              "name": "Mortal143",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 143,
              "docs": []
            },
            {
              "name": "Mortal144",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 144,
              "docs": []
            },
            {
              "name": "Mortal145",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 145,
              "docs": []
            },
            {
              "name": "Mortal146",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 146,
              "docs": []
            },
            {
              "name": "Mortal147",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 147,
              "docs": []
            },
            {
              "name": "Mortal148",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 148,
              "docs": []
            },
            {
              "name": "Mortal149",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 149,
              "docs": []
            },
            {
              "name": "Mortal150",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 150,
              "docs": []
            },
            {
              "name": "Mortal151",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 151,
              "docs": []
            },
            {
              "name": "Mortal152",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 152,
              "docs": []
            },
            {
              "name": "Mortal153",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 153,
              "docs": []
            },
            {
              "name": "Mortal154",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 154,
              "docs": []
            },
            {
              "name": "Mortal155",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 155,
              "docs": []
            },
            {
              "name": "Mortal156",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 156,
              "docs": []
            },
            {
              "name": "Mortal157",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 157,
              "docs": []
            },
            {
              "name": "Mortal158",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 158,
              "docs": []
            },
            {
              "name": "Mortal159",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 159,
              "docs": []
            },
            {
              "name": "Mortal160",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 160,
              "docs": []
            },
            {
              "name": "Mortal161",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 161,
              "docs": []
            },
            {
              "name": "Mortal162",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 162,
              "docs": []
            },
            {
              "name": "Mortal163",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 163,
              "docs": []
            },
            {
              "name": "Mortal164",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 164,
              "docs": []
            },
            {
              "name": "Mortal165",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 165,
              "docs": []
            },
            {
              "name": "Mortal166",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 166,
              "docs": []
            },
            {
              "name": "Mortal167",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 167,
              "docs": []
            },
            {
              "name": "Mortal168",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 168,
              "docs": []
            },
            {
              "name": "Mortal169",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 169,
              "docs": []
            },
            {
              "name": "Mortal170",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 170,
              "docs": []
            },
            {
              "name": "Mortal171",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 171,
              "docs": []
            },
            {
              "name": "Mortal172",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 172,
              "docs": []
            },
            {
              "name": "Mortal173",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 173,
              "docs": []
            },
            {
              "name": "Mortal174",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 174,
              "docs": []
            },
            {
              "name": "Mortal175",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 175,
              "docs": []
            },
            {
              "name": "Mortal176",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 176,
              "docs": []
            },
            {
              "name": "Mortal177",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 177,
              "docs": []
            },
            {
              "name": "Mortal178",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 178,
              "docs": []
            },
            {
              "name": "Mortal179",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 179,
              "docs": []
            },
            {
              "name": "Mortal180",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 180,
              "docs": []
            },
            {
              "name": "Mortal181",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 181,
              "docs": []
            },
            {
              "name": "Mortal182",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 182,
              "docs": []
            },
            {
              "name": "Mortal183",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 183,
              "docs": []
            },
            {
              "name": "Mortal184",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 184,
              "docs": []
            },
            {
              "name": "Mortal185",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 185,
              "docs": []
            },
            {
              "name": "Mortal186",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 186,
              "docs": []
            },
            {
              "name": "Mortal187",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 187,
              "docs": []
            },
            {
              "name": "Mortal188",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 188,
              "docs": []
            },
            {
              "name": "Mortal189",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 189,
              "docs": []
            },
            {
              "name": "Mortal190",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 190,
              "docs": []
            },
            {
              "name": "Mortal191",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 191,
              "docs": []
            },
            {
              "name": "Mortal192",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 192,
              "docs": []
            },
            {
              "name": "Mortal193",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 193,
              "docs": []
            },
            {
              "name": "Mortal194",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 194,
              "docs": []
            },
            {
              "name": "Mortal195",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 195,
              "docs": []
            },
            {
              "name": "Mortal196",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 196,
              "docs": []
            },
            {
              "name": "Mortal197",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 197,
              "docs": []
            },
            {
              "name": "Mortal198",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 198,
              "docs": []
            },
            {
              "name": "Mortal199",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 199,
              "docs": []
            },
            {
              "name": "Mortal200",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 200,
              "docs": []
            },
            {
              "name": "Mortal201",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 201,
              "docs": []
            },
            {
              "name": "Mortal202",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 202,
              "docs": []
            },
            {
              "name": "Mortal203",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 203,
              "docs": []
            },
            {
              "name": "Mortal204",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 204,
              "docs": []
            },
            {
              "name": "Mortal205",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 205,
              "docs": []
            },
            {
              "name": "Mortal206",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 206,
              "docs": []
            },
            {
              "name": "Mortal207",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 207,
              "docs": []
            },
            {
              "name": "Mortal208",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 208,
              "docs": []
            },
            {
              "name": "Mortal209",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 209,
              "docs": []
            },
            {
              "name": "Mortal210",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 210,
              "docs": []
            },
            {
              "name": "Mortal211",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 211,
              "docs": []
            },
            {
              "name": "Mortal212",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 212,
              "docs": []
            },
            {
              "name": "Mortal213",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 213,
              "docs": []
            },
            {
              "name": "Mortal214",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 214,
              "docs": []
            },
            {
              "name": "Mortal215",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 215,
              "docs": []
            },
            {
              "name": "Mortal216",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 216,
              "docs": []
            },
            {
              "name": "Mortal217",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 217,
              "docs": []
            },
            {
              "name": "Mortal218",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 218,
              "docs": []
            },
            {
              "name": "Mortal219",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 219,
              "docs": []
            },
            {
              "name": "Mortal220",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 220,
              "docs": []
            },
            {
              "name": "Mortal221",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 221,
              "docs": []
            },
            {
              "name": "Mortal222",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 222,
              "docs": []
            },
            {
              "name": "Mortal223",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 223,
              "docs": []
            },
            {
              "name": "Mortal224",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 224,
              "docs": []
            },
            {
              "name": "Mortal225",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 225,
              "docs": []
            },
            {
              "name": "Mortal226",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 226,
              "docs": []
            },
            {
              "name": "Mortal227",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 227,
              "docs": []
            },
            {
              "name": "Mortal228",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 228,
              "docs": []
            },
            {
              "name": "Mortal229",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 229,
              "docs": []
            },
            {
              "name": "Mortal230",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 230,
              "docs": []
            },
            {
              "name": "Mortal231",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 231,
              "docs": []
            },
            {
              "name": "Mortal232",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 232,
              "docs": []
            },
            {
              "name": "Mortal233",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 233,
              "docs": []
            },
            {
              "name": "Mortal234",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 234,
              "docs": []
            },
            {
              "name": "Mortal235",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 235,
              "docs": []
            },
            {
              "name": "Mortal236",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 236,
              "docs": []
            },
            {
              "name": "Mortal237",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 237,
              "docs": []
            },
            {
              "name": "Mortal238",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 238,
              "docs": []
            },
            {
              "name": "Mortal239",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 239,
              "docs": []
            },
            {
              "name": "Mortal240",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 240,
              "docs": []
            },
            {
              "name": "Mortal241",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 241,
              "docs": []
            },
            {
              "name": "Mortal242",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 242,
              "docs": []
            },
            {
              "name": "Mortal243",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 243,
              "docs": []
            },
            {
              "name": "Mortal244",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 244,
              "docs": []
            },
            {
              "name": "Mortal245",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 245,
              "docs": []
            },
            {
              "name": "Mortal246",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 246,
              "docs": []
            },
            {
              "name": "Mortal247",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 247,
              "docs": []
            },
            {
              "name": "Mortal248",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 248,
              "docs": []
            },
            {
              "name": "Mortal249",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 249,
              "docs": []
            },
            {
              "name": "Mortal250",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 250,
              "docs": []
            },
            {
              "name": "Mortal251",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 251,
              "docs": []
            },
            {
              "name": "Mortal252",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 252,
              "docs": []
            },
            {
              "name": "Mortal253",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 253,
              "docs": []
            },
            {
              "name": "Mortal254",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 254,
              "docs": []
            },
            {
              "name": "Mortal255",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 255,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 861,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_nonce",
        "CheckNonce"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 157,
              "typeName": "T::Nonce",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 862,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_weight",
        "CheckWeight"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 863,
    "type": {
      "path": [
        "pallet_asset_conversion_tx_payment",
        "ChargeAssetTxPayment"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "tip",
              "type": 82,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "asset_id",
              "type": 38,
              "typeName": "Option<ChargeAssetIdOf<T>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 864,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "block",
        "Block"
      ],
      "params": [
        {
          "name": "Header",
          "type": 156
        },
        {
          "name": "Extrinsic",
          "type": 865
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "header",
              "type": 156,
              "typeName": "Header",
              "docs": []
            },
            {
              "name": "extrinsics",
              "type": 866,
              "typeName": "Vec<Extrinsic>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 865,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "unchecked_extrinsic",
        "UncheckedExtrinsic"
      ],
      "params": [
        {
          "name": "Address",
          "type": 166
        },
        {
          "name": "Call",
          "type": 141
        },
        {
          "name": "Signature",
          "type": 349
        },
        {
          "name": "Extra",
          "type": 854
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 866,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 865
        }
      },
      "docs": []
    }
  },
  {
    "id": 867,
    "type": {
      "path": [
        "sp_core",
        "OpaqueMetadata"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 868,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 867
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 867,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 869,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 31
        },
        {
          "name": "E",
          "type": 870
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 31,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 870,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 870,
    "type": {
      "path": [
        "sp_runtime",
        "transaction_validity",
        "TransactionValidityError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Invalid",
              "fields": [
                {
                  "name": null,
                  "type": 871,
                  "typeName": "InvalidTransaction",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Unknown",
              "fields": [
                {
                  "name": null,
                  "type": 872,
                  "typeName": "UnknownTransaction",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 871,
    "type": {
      "path": [
        "sp_runtime",
        "transaction_validity",
        "InvalidTransaction"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Call",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Payment",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Future",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Stale",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "BadProof",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "AncientBirthBlock",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "ExhaustsResources",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "Custom",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "BadMandatory",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "MandatoryValidation",
              "fields": [],
              "index": 9,
              "docs": []
            },
            {
              "name": "BadSigner",
              "fields": [],
              "index": 10,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 872,
    "type": {
      "path": [
        "sp_runtime",
        "transaction_validity",
        "UnknownTransaction"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "CannotLookup",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NoUnsignedValidator",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Custom",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 873,
    "type": {
      "path": [
        "sp_inherents",
        "InherentData"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "data",
              "type": 874,
              "typeName": "BTreeMap<InherentIdentifier, Vec<u8>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 874,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 280
        },
        {
          "name": "V",
          "type": 13
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 875,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 875,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 876
        }
      },
      "docs": []
    }
  },
  {
    "id": 876,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          280,
          13
        ]
      },
      "docs": []
    }
  },
  {
    "id": 877,
    "type": {
      "path": [
        "sp_inherents",
        "CheckInherentsResult"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "okay",
              "type": 43,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "fatal_error",
              "type": 43,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "errors",
              "type": 873,
              "typeName": "InherentData",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 878,
    "type": {
      "path": [
        "sp_runtime",
        "transaction_validity",
        "TransactionSource"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InBlock",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Local",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "External",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 879,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 880
        },
        {
          "name": "E",
          "type": 870
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 880,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 870,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 880,
    "type": {
      "path": [
        "sp_runtime",
        "transaction_validity",
        "ValidTransaction"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "priority",
              "type": 11,
              "typeName": "TransactionPriority",
              "docs": []
            },
            {
              "name": "requires",
              "type": 145,
              "typeName": "Vec<TransactionTag>",
              "docs": []
            },
            {
              "name": "provides",
              "type": 145,
              "typeName": "Vec<TransactionTag>",
              "docs": []
            },
            {
              "name": "longevity",
              "type": 11,
              "typeName": "TransactionLongevity",
              "docs": []
            },
            {
              "name": "propagate",
              "type": 43,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 881,
    "type": {
      "path": [
        "sp_statement_store",
        "runtime_api",
        "StatementSource"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Chain",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Network",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Local",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 882,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 883
        },
        {
          "name": "E",
          "type": 884
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 883,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 884,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 883,
    "type": {
      "path": [
        "sp_statement_store",
        "runtime_api",
        "ValidStatement"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "max_count",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 884,
    "type": {
      "path": [
        "sp_statement_store",
        "runtime_api",
        "InvalidStatement"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BadProof",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NoProof",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "InternalError",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 885,
    "type": {
      "path": [
        "sp_consensus_grandpa",
        "OpaqueKeyOwnershipProof"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 886,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 32
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 32,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 887,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 885
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 885,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 888,
    "type": {
      "path": [
        "sp_consensus_babe",
        "BabeConfiguration"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "slot_duration",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "epoch_length",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "c",
              "type": 162,
              "typeName": "(u64, u64)",
              "docs": []
            },
            {
              "name": "authorities",
              "type": 473,
              "typeName": "Vec<(AuthorityId, BabeAuthorityWeight)>",
              "docs": []
            },
            {
              "name": "randomness",
              "type": 1,
              "typeName": "Randomness",
              "docs": []
            },
            {
              "name": "allowed_slots",
              "type": 163,
              "typeName": "AllowedSlots",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 889,
    "type": {
      "path": [
        "sp_consensus_babe",
        "Epoch"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "epoch_index",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "start_slot",
              "type": 159,
              "typeName": "Slot",
              "docs": []
            },
            {
              "name": "duration",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "authorities",
              "type": 473,
              "typeName": "Vec<(AuthorityId, BabeAuthorityWeight)>",
              "docs": []
            },
            {
              "name": "randomness",
              "type": 1,
              "typeName": "Randomness",
              "docs": []
            },
            {
              "name": "config",
              "type": 482,
              "typeName": "BabeEpochConfiguration",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 890,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 891
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 891,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 891,
    "type": {
      "path": [
        "sp_consensus_babe",
        "OpaqueKeyOwnershipProof"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 892,
    "type": {
      "path": [
        "pallet_contracts_primitives",
        "ContractResult"
      ],
      "params": [
        {
          "name": "R",
          "type": 893
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "EventRecord",
          "type": 19
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "gas_consumed",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "gas_required",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "storage_deposit",
              "type": 896,
              "typeName": "StorageDeposit<Balance>",
              "docs": []
            },
            {
              "name": "debug_message",
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            },
            {
              "name": "result",
              "type": 893,
              "typeName": "R",
              "docs": []
            },
            {
              "name": "events",
              "type": 897,
              "typeName": "Option<Vec<EventRecord>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 893,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 894
        },
        {
          "name": "E",
          "type": 25
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 894,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 25,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 894,
    "type": {
      "path": [
        "pallet_contracts_primitives",
        "ExecReturnValue"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "flags",
              "type": 895,
              "typeName": "ReturnFlags",
              "docs": []
            },
            {
              "name": "data",
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 895,
    "type": {
      "path": [
        "pallet_contracts_primitives",
        "ReturnFlags"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "bits",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 896,
    "type": {
      "path": [
        "pallet_contracts_primitives",
        "StorageDeposit"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Refund",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Charge",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 897,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 898
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 898,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 898,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 19
        }
      },
      "docs": []
    }
  },
  {
    "id": 899,
    "type": {
      "path": [
        "pallet_contracts_primitives",
        "Code"
      ],
      "params": [
        {
          "name": "Hash",
          "type": 12
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Upload",
              "fields": [
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Existing",
              "fields": [
                {
                  "name": null,
                  "type": 12,
                  "typeName": "Hash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 900,
    "type": {
      "path": [
        "pallet_contracts_primitives",
        "ContractResult"
      ],
      "params": [
        {
          "name": "R",
          "type": 901
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "EventRecord",
          "type": 19
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "gas_consumed",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "gas_required",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "storage_deposit",
              "type": 896,
              "typeName": "StorageDeposit<Balance>",
              "docs": []
            },
            {
              "name": "debug_message",
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            },
            {
              "name": "result",
              "type": 901,
              "typeName": "R",
              "docs": []
            },
            {
              "name": "events",
              "type": 897,
              "typeName": "Option<Vec<EventRecord>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 901,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 902
        },
        {
          "name": "E",
          "type": 25
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 902,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 25,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 902,
    "type": {
      "path": [
        "pallet_contracts_primitives",
        "InstantiateReturnValue"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "result",
              "type": 894,
              "typeName": "ExecReturnValue",
              "docs": []
            },
            {
              "name": "account_id",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 903,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 904
        },
        {
          "name": "E",
          "type": 25
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 904,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 25,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 904,
    "type": {
      "path": [
        "pallet_contracts_primitives",
        "CodeUploadReturnValue"
      ],
      "params": [
        {
          "name": "CodeHash",
          "type": 12
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "code_hash",
              "type": 12,
              "typeName": "CodeHash",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 905,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 448
        },
        {
          "name": "E",
          "type": 906
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 448,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 906,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 906,
    "type": {
      "path": [
        "pallet_contracts_primitives",
        "ContractAccessError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "DoesntExist",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "KeyDecodingFailed",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "MigrationInProgress",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 907,
    "type": {
      "path": [
        "pallet_transaction_payment",
        "types",
        "RuntimeDispatchInfo"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Weight",
          "type": 9
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "weight",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "class",
              "type": 23,
              "typeName": "DispatchClass",
              "docs": []
            },
            {
              "name": "partial_fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 908,
    "type": {
      "path": [
        "pallet_transaction_payment",
        "types",
        "FeeDetails"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "inclusion_fee",
              "type": 909,
              "typeName": "Option<InclusionFee<Balance>>",
              "docs": []
            },
            {
              "name": "tip",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 909,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 910
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 910,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 910,
    "type": {
      "path": [
        "pallet_transaction_payment",
        "types",
        "InclusionFee"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "base_fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "len_fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "adjusted_weight_fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 911,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 912
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 912,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 912,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          6,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 913,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 12
        },
        {
          "name": "E",
          "type": 914
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 12,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 914,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 914,
    "type": {
      "path": [
        "sp_mmr_primitives",
        "Error"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidNumericOp",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Push",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "GetRoot",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Commit",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "GenerateProof",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Verify",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "LeafNotFound",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "PalletNotIncluded",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "InvalidLeafIndex",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "InvalidBestKnownBlock",
              "fields": [],
              "index": 9,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 915,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 11
        },
        {
          "name": "E",
          "type": 914
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 11,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 914,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 916,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 917
        },
        {
          "name": "E",
          "type": 914
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 917,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 914,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 917,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          918,
          920
        ]
      },
      "docs": []
    }
  },
  {
    "id": 918,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 919
        }
      },
      "docs": []
    }
  },
  {
    "id": 919,
    "type": {
      "path": [
        "sp_mmr_primitives",
        "EncodableOpaqueLeaf"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 920,
    "type": {
      "path": [
        "sp_mmr_primitives",
        "Proof"
      ],
      "params": [
        {
          "name": "Hash",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "leaf_indices",
              "type": 751,
              "typeName": "Vec<LeafIndex>",
              "docs": []
            },
            {
              "name": "leaf_count",
              "type": 11,
              "typeName": "NodeIndex",
              "docs": []
            },
            {
              "name": "items",
              "type": 455,
              "typeName": "Vec<Hash>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 921,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 32
        },
        {
          "name": "E",
          "type": 914
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 32,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 914,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 922,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 923
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 923,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 923,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 924
        }
      },
      "docs": []
    }
  },
  {
    "id": 924,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          13,
          544
        ]
      },
      "docs": []
    }
  },
  {
    "id": 925,
    "type": {
      "path": [
        "kitchensink_runtime",
        "RuntimeError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "System",
              "fields": [
                {
                  "name": null,
                  "type": 469,
                  "typeName": "frame_system::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Utility",
              "fields": [
                {
                  "name": null,
                  "type": 470,
                  "typeName": "pallet_utility::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Babe",
              "fields": [
                {
                  "name": null,
                  "type": 486,
                  "typeName": "pallet_babe::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Indices",
              "fields": [
                {
                  "name": null,
                  "type": 488,
                  "typeName": "pallet_indices::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Balances",
              "fields": [
                {
                  "name": null,
                  "type": 507,
                  "typeName": "pallet_balances::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "ElectionProviderMultiPhase",
              "fields": [
                {
                  "name": null,
                  "type": 519,
                  "typeName": "pallet_election_provider_multi_phase::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": []
            },
            {
              "name": "Staking",
              "fields": [
                {
                  "name": null,
                  "type": 540,
                  "typeName": "pallet_staking::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "Session",
              "fields": [
                {
                  "name": null,
                  "type": 545,
                  "typeName": "pallet_session::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "Democracy",
              "fields": [
                {
                  "name": null,
                  "type": 562,
                  "typeName": "pallet_democracy::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "Council",
              "fields": [
                {
                  "name": null,
                  "type": 565,
                  "typeName": "pallet_collective::Error<Runtime, pallet_collective::Instance1>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "TechnicalCommittee",
              "fields": [
                {
                  "name": null,
                  "type": 567,
                  "typeName": "pallet_collective::Error<Runtime, pallet_collective::Instance2>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "Elections",
              "fields": [
                {
                  "name": null,
                  "type": 571,
                  "typeName": "pallet_elections_phragmen::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "TechnicalMembership",
              "fields": [
                {
                  "name": null,
                  "type": 573,
                  "typeName": "pallet_membership::Error<Runtime, pallet_membership::Instance1>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "Grandpa",
              "fields": [
                {
                  "name": null,
                  "type": 577,
                  "typeName": "pallet_grandpa::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "Treasury",
              "fields": [
                {
                  "name": null,
                  "type": 581,
                  "typeName": "pallet_treasury::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "AssetRate",
              "fields": [
                {
                  "name": null,
                  "type": 582,
                  "typeName": "pallet_asset_rate::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": []
            },
            {
              "name": "Contracts",
              "fields": [
                {
                  "name": null,
                  "type": 604,
                  "typeName": "pallet_contracts::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Sudo",
              "fields": [
                {
                  "name": null,
                  "type": 605,
                  "typeName": "pallet_sudo::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "ImOnline",
              "fields": [
                {
                  "name": null,
                  "type": 608,
                  "typeName": "pallet_im_online::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Identity",
              "fields": [
                {
                  "name": null,
                  "type": 624,
                  "typeName": "pallet_identity::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "Society",
              "fields": [
                {
                  "name": null,
                  "type": 643,
                  "typeName": "pallet_society::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "Recovery",
              "fields": [
                {
                  "name": null,
                  "type": 647,
                  "typeName": "pallet_recovery::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "Vesting",
              "fields": [
                {
                  "name": null,
                  "type": 651,
                  "typeName": "pallet_vesting::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": []
            },
            {
              "name": "Scheduler",
              "fields": [
                {
                  "name": null,
                  "type": 656,
                  "typeName": "pallet_scheduler::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "Glutton",
              "fields": [
                {
                  "name": null,
                  "type": 658,
                  "typeName": "pallet_glutton::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 33,
              "docs": []
            },
            {
              "name": "Preimage",
              "fields": [
                {
                  "name": null,
                  "type": 663,
                  "typeName": "pallet_preimage::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "Proxy",
              "fields": [
                {
                  "name": null,
                  "type": 672,
                  "typeName": "pallet_proxy::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 35,
              "docs": []
            },
            {
              "name": "Multisig",
              "fields": [
                {
                  "name": null,
                  "type": 675,
                  "typeName": "pallet_multisig::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "Bounties",
              "fields": [
                {
                  "name": null,
                  "type": 679,
                  "typeName": "pallet_bounties::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            },
            {
              "name": "Tips",
              "fields": [
                {
                  "name": null,
                  "type": 681,
                  "typeName": "pallet_tips::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 38,
              "docs": []
            },
            {
              "name": "Assets",
              "fields": [
                {
                  "name": null,
                  "type": 691,
                  "typeName": "pallet_assets::Error<Runtime, pallet_assets::Instance1>",
                  "docs": []
                }
              ],
              "index": 39,
              "docs": []
            },
            {
              "name": "PoolAssets",
              "fields": [
                {
                  "name": null,
                  "type": 692,
                  "typeName": "pallet_assets::Error<Runtime, pallet_assets::Instance2>",
                  "docs": []
                }
              ],
              "index": 40,
              "docs": []
            },
            {
              "name": "Lottery",
              "fields": [
                {
                  "name": null,
                  "type": 697,
                  "typeName": "pallet_lottery::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 42,
              "docs": []
            },
            {
              "name": "Nis",
              "fields": [
                {
                  "name": null,
                  "type": 705,
                  "typeName": "pallet_nis::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 43,
              "docs": []
            },
            {
              "name": "Uniques",
              "fields": [
                {
                  "name": null,
                  "type": 714,
                  "typeName": "pallet_uniques::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 44,
              "docs": []
            },
            {
              "name": "Nfts",
              "fields": [
                {
                  "name": null,
                  "type": 735,
                  "typeName": "pallet_nfts::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 45,
              "docs": []
            },
            {
              "name": "NftFractionalization",
              "fields": [
                {
                  "name": null,
                  "type": 737,
                  "typeName": "pallet_nft_fractionalization::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 46,
              "docs": []
            },
            {
              "name": "Salary",
              "fields": [
                {
                  "name": null,
                  "type": 741,
                  "typeName": "pallet_salary::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 47,
              "docs": []
            },
            {
              "name": "CoreFellowship",
              "fields": [
                {
                  "name": null,
                  "type": 744,
                  "typeName": "pallet_core_fellowship::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 48,
              "docs": []
            },
            {
              "name": "TransactionStorage",
              "fields": [
                {
                  "name": null,
                  "type": 748,
                  "typeName": "pallet_transaction_storage::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 49,
              "docs": []
            },
            {
              "name": "VoterList",
              "fields": [
                {
                  "name": null,
                  "type": 752,
                  "typeName": "pallet_bags_list::Error<Runtime, pallet_bags_list::Instance1>",
                  "docs": []
                }
              ],
              "index": 50,
              "docs": []
            },
            {
              "name": "StateTrieMigration",
              "fields": [
                {
                  "name": null,
                  "type": 137,
                  "typeName": "pallet_state_trie_migration::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 51,
              "docs": []
            },
            {
              "name": "ChildBounties",
              "fields": [
                {
                  "name": null,
                  "type": 756,
                  "typeName": "pallet_child_bounties::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 52,
              "docs": []
            },
            {
              "name": "Referenda",
              "fields": [
                {
                  "name": null,
                  "type": 772,
                  "typeName": "pallet_referenda::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 53,
              "docs": []
            },
            {
              "name": "Remark",
              "fields": [
                {
                  "name": null,
                  "type": 773,
                  "typeName": "pallet_remark::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 54,
              "docs": []
            },
            {
              "name": "ConvictionVoting",
              "fields": [
                {
                  "name": null,
                  "type": 786,
                  "typeName": "pallet_conviction_voting::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 56,
              "docs": []
            },
            {
              "name": "Whitelist",
              "fields": [
                {
                  "name": null,
                  "type": 787,
                  "typeName": "pallet_whitelist::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 57,
              "docs": []
            },
            {
              "name": "AllianceMotion",
              "fields": [
                {
                  "name": null,
                  "type": 789,
                  "typeName": "pallet_collective::Error<Runtime, pallet_collective::Instance3>",
                  "docs": []
                }
              ],
              "index": 58,
              "docs": []
            },
            {
              "name": "Alliance",
              "fields": [
                {
                  "name": null,
                  "type": 796,
                  "typeName": "pallet_alliance::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 59,
              "docs": []
            },
            {
              "name": "NominationPools",
              "fields": [
                {
                  "name": null,
                  "type": 812,
                  "typeName": "pallet_nomination_pools::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 60,
              "docs": []
            },
            {
              "name": "RankedPolls",
              "fields": [
                {
                  "name": null,
                  "type": 817,
                  "typeName": "pallet_referenda::Error<Runtime, pallet_referenda::Instance2>",
                  "docs": []
                }
              ],
              "index": 61,
              "docs": []
            },
            {
              "name": "RankedCollective",
              "fields": [
                {
                  "name": null,
                  "type": 822,
                  "typeName": "pallet_ranked_collective::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 62,
              "docs": []
            },
            {
              "name": "AssetConversion",
              "fields": [
                {
                  "name": null,
                  "type": 824,
                  "typeName": "pallet_asset_conversion::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 63,
              "docs": []
            },
            {
              "name": "FastUnstake",
              "fields": [
                {
                  "name": null,
                  "type": 828,
                  "typeName": "pallet_fast_unstake::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 64,
              "docs": []
            },
            {
              "name": "MessageQueue",
              "fields": [
                {
                  "name": null,
                  "type": 834,
                  "typeName": "pallet_message_queue::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 65,
              "docs": []
            },
            {
              "name": "TxPause",
              "fields": [
                {
                  "name": null,
                  "type": 835,
                  "typeName": "pallet_tx_pause::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 67,
              "docs": []
            },
            {
              "name": "SafeMode",
              "fields": [
                {
                  "name": null,
                  "type": 836,
                  "typeName": "pallet_safe_mode::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 68,
              "docs": []
            },
            {
              "name": "Broker",
              "fields": [
                {
                  "name": null,
                  "type": 853,
                  "typeName": "pallet_broker::Error<Runtime>",
                  "docs": []
                }
              ],
              "index": 70,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  }
]