[
  {
    "id": 0,
    "type": {
      "path": [
        "sp_core",
        "crypto",
        "AccountId32"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 1,
              "typeName": "[u8; 32]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 1,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 32,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 2,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U8"
      },
      "docs": []
    }
  },
  {
    "id": 3,
    "type": {
      "path": [
        "frame_system",
        "AccountInfo"
      ],
      "params": [
        {
          "name": "Nonce",
          "type": 4
        },
        {
          "name": "AccountData",
          "type": 5
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "nonce",
              "type": 4,
              "typeName": "Nonce",
              "docs": []
            },
            {
              "name": "consumers",
              "type": 4,
              "typeName": "RefCount",
              "docs": []
            },
            {
              "name": "providers",
              "type": 4,
              "typeName": "RefCount",
              "docs": []
            },
            {
              "name": "sufficients",
              "type": 4,
              "typeName": "RefCount",
              "docs": []
            },
            {
              "name": "data",
              "type": 5,
              "typeName": "AccountData",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 4,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U32"
      },
      "docs": []
    }
  },
  {
    "id": 5,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "AccountData"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "free",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "reserved",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "frozen",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "flags",
              "type": 7,
              "typeName": "ExtraFlags",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 6,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U128"
      },
      "docs": []
    }
  },
  {
    "id": 7,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "ExtraFlags"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 6,
              "typeName": "u128",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 8,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "PerDispatchClass"
      ],
      "params": [
        {
          "name": "T",
          "type": 9
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "normal",
              "type": 9,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "operational",
              "type": 9,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "mandatory",
              "type": 9,
              "typeName": "T",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 9,
    "type": {
      "path": [
        "sp_weights",
        "weight_v2",
        "Weight"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "ref_time",
              "type": 10,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "proof_size",
              "type": 10,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 10,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 11
        }
      },
      "docs": []
    }
  },
  {
    "id": 11,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U64"
      },
      "docs": []
    }
  },
  {
    "id": 12,
    "type": {
      "path": [
        "primitive_types",
        "H256"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 1,
              "typeName": "[u8; 32]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 13,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 14,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "digest",
        "Digest"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "logs",
              "type": 15,
              "typeName": "Vec<DigestItem>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 15,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 16
        }
      },
      "docs": []
    }
  },
  {
    "id": 16,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "digest",
        "DigestItem"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PreRuntime",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": "ConsensusEngineId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "Consensus",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": "ConsensusEngineId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Seal",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": "ConsensusEngineId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Other",
              "fields": [
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "RuntimeEnvironmentUpdated",
              "fields": [],
              "index": 8,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 17,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 4,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 18,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 19
        }
      },
      "docs": []
    }
  },
  {
    "id": 19,
    "type": {
      "path": [
        "frame_system",
        "EventRecord"
      ],
      "params": [
        {
          "name": "E",
          "type": 20
        },
        {
          "name": "T",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "phase",
              "type": 454,
              "typeName": "Phase",
              "docs": []
            },
            {
              "name": "event",
              "type": 20,
              "typeName": "E",
              "docs": []
            },
            {
              "name": "topics",
              "type": 455,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 20,
    "type": {
      "path": [
        "polkadot_runtime",
        "RuntimeEvent"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "System",
              "fields": [
                {
                  "name": null,
                  "type": 21,
                  "typeName": "frame_system::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Scheduler",
              "fields": [
                {
                  "name": null,
                  "type": 30,
                  "typeName": "pallet_scheduler::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Preimage",
              "fields": [
                {
                  "name": null,
                  "type": 35,
                  "typeName": "pallet_preimage::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": []
            },
            {
              "name": "Indices",
              "fields": [
                {
                  "name": null,
                  "type": 36,
                  "typeName": "pallet_indices::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Balances",
              "fields": [
                {
                  "name": null,
                  "type": 37,
                  "typeName": "pallet_balances::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "TransactionPayment",
              "fields": [
                {
                  "name": null,
                  "type": 39,
                  "typeName": "pallet_transaction_payment::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "Staking",
              "fields": [
                {
                  "name": null,
                  "type": 40,
                  "typeName": "pallet_staking::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "Offences",
              "fields": [
                {
                  "name": null,
                  "type": 46,
                  "typeName": "pallet_offences::Event",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "Session",
              "fields": [
                {
                  "name": null,
                  "type": 48,
                  "typeName": "pallet_session::Event",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "Grandpa",
              "fields": [
                {
                  "name": null,
                  "type": 49,
                  "typeName": "pallet_grandpa::Event",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "ImOnline",
              "fields": [
                {
                  "name": null,
                  "type": 54,
                  "typeName": "pallet_im_online::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "Treasury",
              "fields": [
                {
                  "name": null,
                  "type": 63,
                  "typeName": "pallet_treasury::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "ConvictionVoting",
              "fields": [
                {
                  "name": null,
                  "type": 64,
                  "typeName": "pallet_conviction_voting::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": []
            },
            {
              "name": "Referenda",
              "fields": [
                {
                  "name": null,
                  "type": 65,
                  "typeName": "pallet_referenda::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Whitelist",
              "fields": [
                {
                  "name": null,
                  "type": 417,
                  "typeName": "pallet_whitelist::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Claims",
              "fields": [
                {
                  "name": null,
                  "type": 422,
                  "typeName": "claims::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Vesting",
              "fields": [
                {
                  "name": null,
                  "type": 423,
                  "typeName": "pallet_vesting::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "Utility",
              "fields": [
                {
                  "name": null,
                  "type": 424,
                  "typeName": "pallet_utility::Event",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "Identity",
              "fields": [
                {
                  "name": null,
                  "type": 425,
                  "typeName": "pallet_identity::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "Proxy",
              "fields": [
                {
                  "name": null,
                  "type": 426,
                  "typeName": "pallet_proxy::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "Multisig",
              "fields": [
                {
                  "name": null,
                  "type": 427,
                  "typeName": "pallet_multisig::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "Bounties",
              "fields": [
                {
                  "name": null,
                  "type": 428,
                  "typeName": "pallet_bounties::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "ChildBounties",
              "fields": [
                {
                  "name": null,
                  "type": 429,
                  "typeName": "pallet_child_bounties::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 38,
              "docs": []
            },
            {
              "name": "ElectionProviderMultiPhase",
              "fields": [
                {
                  "name": null,
                  "type": 430,
                  "typeName": "pallet_election_provider_multi_phase::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "VoterList",
              "fields": [
                {
                  "name": null,
                  "type": 434,
                  "typeName": "pallet_bags_list::Event<Runtime, pallet_bags_list::Instance1>",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            },
            {
              "name": "NominationPools",
              "fields": [
                {
                  "name": null,
                  "type": 435,
                  "typeName": "pallet_nomination_pools::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 39,
              "docs": []
            },
            {
              "name": "FastUnstake",
              "fields": [
                {
                  "name": null,
                  "type": 436,
                  "typeName": "pallet_fast_unstake::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 40,
              "docs": []
            },
            {
              "name": "ParaInclusion",
              "fields": [
                {
                  "name": null,
                  "type": 437,
                  "typeName": "parachains_inclusion::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 53,
              "docs": []
            },
            {
              "name": "Paras",
              "fields": [
                {
                  "name": null,
                  "type": 441,
                  "typeName": "parachains_paras::Event",
                  "docs": []
                }
              ],
              "index": 56,
              "docs": []
            },
            {
              "name": "Hrmp",
              "fields": [
                {
                  "name": null,
                  "type": 442,
                  "typeName": "parachains_hrmp::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 60,
              "docs": []
            },
            {
              "name": "ParasDisputes",
              "fields": [
                {
                  "name": null,
                  "type": 443,
                  "typeName": "parachains_disputes::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 62,
              "docs": []
            },
            {
              "name": "Registrar",
              "fields": [
                {
                  "name": null,
                  "type": 446,
                  "typeName": "paras_registrar::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 70,
              "docs": []
            },
            {
              "name": "Slots",
              "fields": [
                {
                  "name": null,
                  "type": 447,
                  "typeName": "slots::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 71,
              "docs": []
            },
            {
              "name": "Auctions",
              "fields": [
                {
                  "name": null,
                  "type": 448,
                  "typeName": "auctions::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 72,
              "docs": []
            },
            {
              "name": "Crowdloan",
              "fields": [
                {
                  "name": null,
                  "type": 449,
                  "typeName": "crowdloan::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 73,
              "docs": []
            },
            {
              "name": "XcmPallet",
              "fields": [
                {
                  "name": null,
                  "type": 450,
                  "typeName": "pallet_xcm::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 99,
              "docs": []
            },
            {
              "name": "MessageQueue",
              "fields": [
                {
                  "name": null,
                  "type": 452,
                  "typeName": "pallet_message_queue::Event<Runtime>",
                  "docs": []
                }
              ],
              "index": 100,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 21,
    "type": {
      "path": [
        "frame_system",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ExtrinsicSuccess",
              "fields": [
                {
                  "name": "dispatch_info",
                  "type": 22,
                  "typeName": "DispatchInfo",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "An extrinsic completed successfully."
              ]
            },
            {
              "name": "ExtrinsicFailed",
              "fields": [
                {
                  "name": "dispatch_error",
                  "type": 25,
                  "typeName": "DispatchError",
                  "docs": []
                },
                {
                  "name": "dispatch_info",
                  "type": 22,
                  "typeName": "DispatchInfo",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An extrinsic failed."
              ]
            },
            {
              "name": "CodeUpdated",
              "fields": [],
              "index": 2,
              "docs": [
                "`:code` was updated."
              ]
            },
            {
              "name": "NewAccount",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A new account was created."
              ]
            },
            {
              "name": "KilledAccount",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An account was reaped."
              ]
            },
            {
              "name": "Remarked",
              "fields": [
                {
                  "name": "sender",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "On on-chain remark happened."
              ]
            }
          ]
        }
      },
      "docs": [
        "Event for the System pallet."
      ]
    }
  },
  {
    "id": 22,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "DispatchInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "weight",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "class",
              "type": 23,
              "typeName": "DispatchClass",
              "docs": []
            },
            {
              "name": "pays_fee",
              "type": 24,
              "typeName": "Pays",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 23,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "DispatchClass"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Normal",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Operational",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Mandatory",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 24,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "Pays"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Yes",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "No",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 25,
    "type": {
      "path": [
        "sp_runtime",
        "DispatchError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Other",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "CannotLookup",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "BadOrigin",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Module",
              "fields": [
                {
                  "name": null,
                  "type": 26,
                  "typeName": "ModuleError",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "ConsumerRemaining",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "NoProviders",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "TooManyConsumers",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "Token",
              "fields": [
                {
                  "name": null,
                  "type": 27,
                  "typeName": "TokenError",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "Arithmetic",
              "fields": [
                {
                  "name": null,
                  "type": 28,
                  "typeName": "ArithmeticError",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "Transactional",
              "fields": [
                {
                  "name": null,
                  "type": 29,
                  "typeName": "TransactionalError",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "Exhausted",
              "fields": [],
              "index": 10,
              "docs": []
            },
            {
              "name": "Corruption",
              "fields": [],
              "index": 11,
              "docs": []
            },
            {
              "name": "Unavailable",
              "fields": [],
              "index": 12,
              "docs": []
            },
            {
              "name": "RootNotAllowed",
              "fields": [],
              "index": 13,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 26,
    "type": {
      "path": [
        "sp_runtime",
        "ModuleError"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "index",
              "type": 2,
              "typeName": "u8",
              "docs": []
            },
            {
              "name": "error",
              "type": 17,
              "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 27,
    "type": {
      "path": [
        "sp_runtime",
        "TokenError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "FundsUnavailable",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "OnlyProvider",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "BelowMinimum",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "CannotCreate",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "UnknownAsset",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Frozen",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Unsupported",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "CannotCreateHold",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "NotExpendable",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "Blocked",
              "fields": [],
              "index": 9,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 28,
    "type": {
      "path": [
        "sp_arithmetic",
        "ArithmeticError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Underflow",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Overflow",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "DivisionByZero",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 29,
    "type": {
      "path": [
        "sp_runtime",
        "TransactionalError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "LimitReached",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NoLayer",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 30,
    "type": {
      "path": [
        "pallet_scheduler",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Scheduled",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Scheduled some task."
              ]
            },
            {
              "name": "Canceled",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Canceled some task."
              ]
            },
            {
              "name": "Dispatched",
              "fields": [
                {
                  "name": "task",
                  "type": 31,
                  "typeName": "TaskAddress<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 32,
                  "typeName": "Option<TaskName>",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 33,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Dispatched some task."
              ]
            },
            {
              "name": "CallUnavailable",
              "fields": [
                {
                  "name": "task",
                  "type": 31,
                  "typeName": "TaskAddress<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 32,
                  "typeName": "Option<TaskName>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "The call for the provided hash was not found so the task has been aborted."
              ]
            },
            {
              "name": "PeriodicFailed",
              "fields": [
                {
                  "name": "task",
                  "type": 31,
                  "typeName": "TaskAddress<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 32,
                  "typeName": "Option<TaskName>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "The given task was unable to be renewed since the agenda is full at that block."
              ]
            },
            {
              "name": "PermanentlyOverweight",
              "fields": [
                {
                  "name": "task",
                  "type": 31,
                  "typeName": "TaskAddress<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 32,
                  "typeName": "Option<TaskName>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "The given task can never be executed since it is overweight."
              ]
            }
          ]
        }
      },
      "docs": [
        "Events type."
      ]
    }
  },
  {
    "id": 31,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 32,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 1
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 33,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 34
        },
        {
          "name": "E",
          "type": 25
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 34,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 25,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 34,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": []
      },
      "docs": []
    }
  },
  {
    "id": 35,
    "type": {
      "path": [
        "pallet_preimage",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noted",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A preimage has been noted."
              ]
            },
            {
              "name": "Requested",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A preimage has been requested."
              ]
            },
            {
              "name": "Cleared",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A preimage has ben cleared."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 36,
    "type": {
      "path": [
        "pallet_indices",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "IndexAssigned",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A account index was assigned."
              ]
            },
            {
              "name": "IndexFreed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A account index has been freed up (unassigned)."
              ]
            },
            {
              "name": "IndexFrozen",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A account index has been frozen to its current account ID."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 37,
    "type": {
      "path": [
        "pallet_balances",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Endowed",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "free_balance",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "An account was created with some free balance."
              ]
            },
            {
              "name": "DustLost",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                "resulting in an outright loss."
              ]
            },
            {
              "name": "Transfer",
              "fields": [
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Transfer succeeded."
              ]
            },
            {
              "name": "BalanceSet",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "free",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A balance was set by root."
              ]
            },
            {
              "name": "Reserved",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "Some balance was reserved (moved from free to reserved)."
              ]
            },
            {
              "name": "Unreserved",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "Some balance was unreserved (moved from reserved to free)."
              ]
            },
            {
              "name": "ReserveRepatriated",
              "fields": [
                {
                  "name": "from",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                },
                {
                  "name": "destination_status",
                  "type": 38,
                  "typeName": "Status",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "Some balance was moved from the reserve of the first account to the second account.",
                "Final argument indicates the destination balance type."
              ]
            },
            {
              "name": "Deposit",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "Some amount was deposited (e.g. for transaction fees)."
              ]
            },
            {
              "name": "Withdraw",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "Some amount was withdrawn from the account (e.g. for transaction fees)."
              ]
            },
            {
              "name": "Slashed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Some amount was removed from the account (e.g. for misbehavior)."
              ]
            },
            {
              "name": "Minted",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "Some amount was minted into an account."
              ]
            },
            {
              "name": "Burned",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "Some amount was burned from an account."
              ]
            },
            {
              "name": "Suspended",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "Some amount was suspended from an account (it can be restored later)."
              ]
            },
            {
              "name": "Restored",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "Some amount was restored into an account."
              ]
            },
            {
              "name": "Upgraded",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "An account was upgraded."
              ]
            },
            {
              "name": "Issued",
              "fields": [
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "Total issuance was increased by `amount`, creating a credit to be balanced."
              ]
            },
            {
              "name": "Rescinded",
              "fields": [
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "Total issuance was decreased by `amount`, creating a debt to be balanced."
              ]
            },
            {
              "name": "Locked",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "Some balance was locked."
              ]
            },
            {
              "name": "Unlocked",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "Some balance was unlocked."
              ]
            },
            {
              "name": "Frozen",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "Some balance was frozen."
              ]
            },
            {
              "name": "Thawed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "Some balance was thawed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 38,
    "type": {
      "path": [
        "frame_support",
        "traits",
        "tokens",
        "misc",
        "BalanceStatus"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Free",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Reserved",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 39,
    "type": {
      "path": [
        "pallet_transaction_payment",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TransactionFeePaid",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "actual_fee",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "tip",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                "has been paid by `who`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 40,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "EraPaid",
              "fields": [
                {
                  "name": "era_index",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                },
                {
                  "name": "validator_payout",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "remainder",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "The era payout has been set; the first balance is the validator-payout; the second is",
                "the remainder from the maximum amount of reward."
              ]
            },
            {
              "name": "Rewarded",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "The nominator has been rewarded by this amount."
              ]
            },
            {
              "name": "Slashed",
              "fields": [
                {
                  "name": "staker",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A staker (validator or nominator) has been slashed by the given amount."
              ]
            },
            {
              "name": "SlashReported",
              "fields": [
                {
                  "name": "validator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "fraction",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "slash_era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A slash for the given validator, for the given percentage of their stake, at the given",
                "era as been reported."
              ]
            },
            {
              "name": "OldSlashingReportDiscarded",
              "fields": [
                {
                  "name": "session_index",
                  "type": 4,
                  "typeName": "SessionIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An old slashing report from a prior era was discarded because it could",
                "not be processed."
              ]
            },
            {
              "name": "StakersElected",
              "fields": [],
              "index": 5,
              "docs": [
                "A new set of stakers was elected."
              ]
            },
            {
              "name": "Bonded",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "An account has bonded this amount. \\[stash, amount\\]",
                "",
                "NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably,",
                "it will not be emitted for staking rewards when they are added to stake."
              ]
            },
            {
              "name": "Unbonded",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "An account has unbonded this amount."
              ]
            },
            {
              "name": "Withdrawn",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance`",
                "from the unlocking queue."
              ]
            },
            {
              "name": "Kicked",
              "fields": [
                {
                  "name": "nominator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "A nominator has been kicked from a validator."
              ]
            },
            {
              "name": "StakingElectionFailed",
              "fields": [],
              "index": 10,
              "docs": [
                "The election failed. No new era is planned."
              ]
            },
            {
              "name": "Chilled",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "An account has stopped participating as either a validator or nominator."
              ]
            },
            {
              "name": "PayoutStarted",
              "fields": [
                {
                  "name": "era_index",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                },
                {
                  "name": "validator_stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "The stakers' rewards are getting paid."
              ]
            },
            {
              "name": "ValidatorPrefsSet",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "prefs",
                  "type": 42,
                  "typeName": "ValidatorPrefs",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "A validator has set their preferences."
              ]
            },
            {
              "name": "SnapshotVotersSizeExceeded",
              "fields": [
                {
                  "name": "size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "Voters size limit reached."
              ]
            },
            {
              "name": "SnapshotTargetsSizeExceeded",
              "fields": [
                {
                  "name": "size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "Targets size limit reached."
              ]
            },
            {
              "name": "ForceEra",
              "fields": [
                {
                  "name": "mode",
                  "type": 45,
                  "typeName": "Forcing",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "A new force era mode was set."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 41,
    "type": {
      "path": [
        "sp_arithmetic",
        "per_things",
        "Perbill"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 42,
    "type": {
      "path": [
        "pallet_staking",
        "ValidatorPrefs"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "commission",
              "type": 43,
              "typeName": "Perbill",
              "docs": []
            },
            {
              "name": "blocked",
              "type": 44,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 43,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 41
        }
      },
      "docs": []
    }
  },
  {
    "id": 44,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "Bool"
      },
      "docs": []
    }
  },
  {
    "id": 45,
    "type": {
      "path": [
        "pallet_staking",
        "Forcing"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotForcing",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "ForceNew",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "ForceNone",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "ForceAlways",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 46,
    "type": {
      "path": [
        "pallet_offences",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Offence",
              "fields": [
                {
                  "name": "kind",
                  "type": 47,
                  "typeName": "Kind",
                  "docs": []
                },
                {
                  "name": "timeslot",
                  "type": 13,
                  "typeName": "OpaqueTimeSlot",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "There is an offence reported of the given `kind` happened at the `session_index` and",
                "(kind-specific) time slot. This event is not deposited for duplicate slashes.",
                "\\[kind, timeslot\\]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Events type."
      ]
    }
  },
  {
    "id": 47,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 16,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 48,
    "type": {
      "path": [
        "pallet_session",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewSession",
              "fields": [
                {
                  "name": "session_index",
                  "type": 4,
                  "typeName": "SessionIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "New session has happened. Note that the argument is the session index, not the",
                "block number as the type might suggest."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 49,
    "type": {
      "path": [
        "pallet_grandpa",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewAuthorities",
              "fields": [
                {
                  "name": "authority_set",
                  "type": 50,
                  "typeName": "AuthorityList",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "New authority set has been applied."
              ]
            },
            {
              "name": "Paused",
              "fields": [],
              "index": 1,
              "docs": [
                "Current authority set has been paused."
              ]
            },
            {
              "name": "Resumed",
              "fields": [],
              "index": 2,
              "docs": [
                "Current authority set has been resumed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 50,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 51
        }
      },
      "docs": []
    }
  },
  {
    "id": 51,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          52,
          11
        ]
      },
      "docs": []
    }
  },
  {
    "id": 52,
    "type": {
      "path": [
        "sp_consensus_grandpa",
        "app",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 53,
              "typeName": "ed25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 53,
    "type": {
      "path": [
        "sp_core",
        "ed25519",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 1,
              "typeName": "[u8; 32]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 54,
    "type": {
      "path": [
        "pallet_im_online",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "HeartbeatReceived",
              "fields": [
                {
                  "name": "authority_id",
                  "type": 55,
                  "typeName": "T::AuthorityId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A new heartbeat was received from `AuthorityId`."
              ]
            },
            {
              "name": "AllGood",
              "fields": [],
              "index": 1,
              "docs": [
                "At the end of the session, no offence was committed."
              ]
            },
            {
              "name": "SomeOffline",
              "fields": [
                {
                  "name": "offline",
                  "type": 57,
                  "typeName": "Vec<IdentificationTuple<T>>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "At the end of the session, at least one validator was found to be offline."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 55,
    "type": {
      "path": [
        "pallet_im_online",
        "sr25519",
        "app_sr25519",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 56,
              "typeName": "sr25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 56,
    "type": {
      "path": [
        "sp_core",
        "sr25519",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 1,
              "typeName": "[u8; 32]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 57,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 58
        }
      },
      "docs": []
    }
  },
  {
    "id": 58,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          59
        ]
      },
      "docs": []
    }
  },
  {
    "id": 59,
    "type": {
      "path": [
        "pallet_staking",
        "Exposure"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "total",
              "type": 60,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "own",
              "type": 60,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "others",
              "type": 61,
              "typeName": "Vec<IndividualExposure<AccountId, Balance>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 60,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 6
        }
      },
      "docs": []
    }
  },
  {
    "id": 61,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 62
        }
      },
      "docs": []
    }
  },
  {
    "id": 62,
    "type": {
      "path": [
        "pallet_staking",
        "IndividualExposure"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "value",
              "type": 60,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 63,
    "type": {
      "path": [
        "pallet_treasury",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Proposed",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "New proposal."
              ]
            },
            {
              "name": "Spending",
              "fields": [
                {
                  "name": "budget_remaining",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "We have ended a spend period and will now allocate funds."
              ]
            },
            {
              "name": "Awarded",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "award",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Some funds have been allocated."
              ]
            },
            {
              "name": "Rejected",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "slashed",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A proposal was rejected; funds were slashed."
              ]
            },
            {
              "name": "Burnt",
              "fields": [
                {
                  "name": "burnt_funds",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "Some of our funds have been burnt."
              ]
            },
            {
              "name": "Rollover",
              "fields": [
                {
                  "name": "rollover_balance",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "Spending has finished; this is the amount that rolls over until next spend."
              ]
            },
            {
              "name": "Deposit",
              "fields": [
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "Some funds have been deposited."
              ]
            },
            {
              "name": "SpendApproved",
              "fields": [
                {
                  "name": "proposal_index",
                  "type": 4,
                  "typeName": "ProposalIndex",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "A new spend proposal has been approved."
              ]
            },
            {
              "name": "UpdatedInactive",
              "fields": [
                {
                  "name": "reactivated",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "deactivated",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "The inactive funds of the pallet have been updated."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 64,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Delegated",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "An account has delegated their vote to another account. \\[who, target\\]"
              ]
            },
            {
              "name": "Undelegated",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An \\[account\\] has cancelled a previous delegation operation."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 65,
    "type": {
      "path": [
        "pallet_referenda",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Submitted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "track",
                  "type": 66,
                  "typeName": "TrackIdOf<T, I>",
                  "docs": [
                    "The track (and by extension proposal dispatch origin) of this referendum."
                  ]
                },
                {
                  "name": "proposal",
                  "type": 67,
                  "typeName": "BoundedCallOf<T, I>",
                  "docs": [
                    "The proposal for the referendum."
                  ]
                }
              ],
              "index": 0,
              "docs": [
                "A referendum has been submitted."
              ]
            },
            {
              "name": "DecisionDepositPlaced",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 1,
              "docs": [
                "The decision deposit has been placed."
              ]
            },
            {
              "name": "DecisionDepositRefunded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 2,
              "docs": [
                "The decision deposit has been refunded."
              ]
            },
            {
              "name": "DepositSlashed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 3,
              "docs": [
                "A deposit has been slashaed."
              ]
            },
            {
              "name": "DecisionStarted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "track",
                  "type": 66,
                  "typeName": "TrackIdOf<T, I>",
                  "docs": [
                    "The track (and by extension proposal dispatch origin) of this referendum."
                  ]
                },
                {
                  "name": "proposal",
                  "type": 67,
                  "typeName": "BoundedCallOf<T, I>",
                  "docs": [
                    "The proposal for the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 416,
                  "typeName": "T::Tally",
                  "docs": [
                    "The current tally of votes in this referendum."
                  ]
                }
              ],
              "index": 4,
              "docs": [
                "A referendum has moved into the deciding phase."
              ]
            },
            {
              "name": "ConfirmStarted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "ConfirmAborted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "Confirmed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 416,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 7,
              "docs": [
                "A referendum has ended its confirmation phase and is ready for approval."
              ]
            },
            {
              "name": "Approved",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                }
              ],
              "index": 8,
              "docs": [
                "A referendum has been approved and its proposal has been scheduled."
              ]
            },
            {
              "name": "Rejected",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 416,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 9,
              "docs": [
                "A proposal has been rejected by referendum."
              ]
            },
            {
              "name": "TimedOut",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 416,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 10,
              "docs": [
                "A referendum has been timed out without being decided."
              ]
            },
            {
              "name": "Cancelled",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 416,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 11,
              "docs": [
                "A referendum has been cancelled."
              ]
            },
            {
              "name": "Killed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "tally",
                  "type": 416,
                  "typeName": "T::Tally",
                  "docs": [
                    "The final tally of votes in this referendum."
                  ]
                }
              ],
              "index": 12,
              "docs": [
                "A referendum has been killed."
              ]
            },
            {
              "name": "SubmissionDepositRefunded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": [
                    "The account who placed the deposit."
                  ]
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": [
                    "The amount placed by the account."
                  ]
                }
              ],
              "index": 13,
              "docs": [
                "The submission deposit has been refunded."
              ]
            },
            {
              "name": "MetadataSet",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": [
                    "Preimage hash."
                  ]
                }
              ],
              "index": 14,
              "docs": [
                "Metadata for a referendum has been set."
              ]
            },
            {
              "name": "MetadataCleared",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": [
                    "Index of the referendum."
                  ]
                },
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": [
                    "Preimage hash."
                  ]
                }
              ],
              "index": 15,
              "docs": [
                "Metadata for a referendum has been cleared."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 66,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "U16"
      },
      "docs": []
    }
  },
  {
    "id": 67,
    "type": {
      "path": [
        "frame_support",
        "traits",
        "preimages",
        "Bounded"
      ],
      "params": [
        {
          "name": "T",
          "type": 68
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Legacy",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "Hash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Inline",
              "fields": [
                {
                  "name": null,
                  "type": 415,
                  "typeName": "BoundedInline",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Lookup",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "Hash",
                  "docs": []
                },
                {
                  "name": "len",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 68,
    "type": {
      "path": [
        "polkadot_runtime",
        "RuntimeCall"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "System",
              "fields": [
                {
                  "name": null,
                  "type": 69,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Scheduler",
              "fields": [
                {
                  "name": null,
                  "type": 73,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Preimage",
              "fields": [
                {
                  "name": null,
                  "type": 75,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": []
            },
            {
              "name": "Babe",
              "fields": [
                {
                  "name": null,
                  "type": 76,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Babe, Runtime>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Timestamp",
              "fields": [
                {
                  "name": null,
                  "type": 86,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Indices",
              "fields": [
                {
                  "name": null,
                  "type": 87,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Indices, Runtime>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Balances",
              "fields": [
                {
                  "name": null,
                  "type": 91,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Staking",
              "fields": [
                {
                  "name": null,
                  "type": 93,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Staking, Runtime>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "Session",
              "fields": [
                {
                  "name": null,
                  "type": 102,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "Grandpa",
              "fields": [
                {
                  "name": null,
                  "type": 107,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "ImOnline",
              "fields": [
                {
                  "name": null,
                  "type": 119,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ImOnline, Runtime>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "Treasury",
              "fields": [
                {
                  "name": null,
                  "type": 123,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "ConvictionVoting",
              "fields": [
                {
                  "name": null,
                  "type": 124,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ConvictionVoting, Runtime>",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": []
            },
            {
              "name": "Referenda",
              "fields": [
                {
                  "name": null,
                  "type": 129,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Referenda, Runtime>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Whitelist",
              "fields": [
                {
                  "name": null,
                  "type": 146,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Whitelist, Runtime>",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Claims",
              "fields": [
                {
                  "name": null,
                  "type": 147,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Claims, Runtime>",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Vesting",
              "fields": [
                {
                  "name": null,
                  "type": 156,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "Utility",
              "fields": [
                {
                  "name": null,
                  "type": 158,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "Identity",
              "fields": [
                {
                  "name": null,
                  "type": 160,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "Proxy",
              "fields": [
                {
                  "name": null,
                  "type": 201,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "Multisig",
              "fields": [
                {
                  "name": null,
                  "type": 204,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "Bounties",
              "fields": [
                {
                  "name": null,
                  "type": 207,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Bounties, Runtime>",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "ChildBounties",
              "fields": [
                {
                  "name": null,
                  "type": 208,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ChildBounties, Runtime>",
                  "docs": []
                }
              ],
              "index": 38,
              "docs": []
            },
            {
              "name": "ElectionProviderMultiPhase",
              "fields": [
                {
                  "name": null,
                  "type": 209,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ElectionProviderMultiPhase, Runtime>",
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "VoterList",
              "fields": [
                {
                  "name": null,
                  "type": 271,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VoterList, Runtime>",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            },
            {
              "name": "NominationPools",
              "fields": [
                {
                  "name": null,
                  "type": 272,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<NominationPools, Runtime>",
                  "docs": []
                }
              ],
              "index": 39,
              "docs": []
            },
            {
              "name": "FastUnstake",
              "fields": [
                {
                  "name": null,
                  "type": 283,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FastUnstake, Runtime>",
                  "docs": []
                }
              ],
              "index": 40,
              "docs": []
            },
            {
              "name": "Configuration",
              "fields": [
                {
                  "name": null,
                  "type": 284,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Configuration, Runtime>",
                  "docs": []
                }
              ],
              "index": 51,
              "docs": []
            },
            {
              "name": "ParasShared",
              "fields": [
                {
                  "name": null,
                  "type": 291,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasShared, Runtime>",
                  "docs": []
                }
              ],
              "index": 52,
              "docs": []
            },
            {
              "name": "ParaInclusion",
              "fields": [
                {
                  "name": null,
                  "type": 292,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInclusion, Runtime>",
                  "docs": []
                }
              ],
              "index": 53,
              "docs": []
            },
            {
              "name": "ParaInherent",
              "fields": [
                {
                  "name": null,
                  "type": 293,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInherent, Runtime>",
                  "docs": []
                }
              ],
              "index": 54,
              "docs": []
            },
            {
              "name": "Paras",
              "fields": [
                {
                  "name": null,
                  "type": 327,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Paras, Runtime>",
                  "docs": []
                }
              ],
              "index": 56,
              "docs": []
            },
            {
              "name": "Initializer",
              "fields": [
                {
                  "name": null,
                  "type": 329,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Initializer, Runtime>",
                  "docs": []
                }
              ],
              "index": 57,
              "docs": []
            },
            {
              "name": "Hrmp",
              "fields": [
                {
                  "name": null,
                  "type": 330,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Hrmp, Runtime>",
                  "docs": []
                }
              ],
              "index": 60,
              "docs": []
            },
            {
              "name": "ParasDisputes",
              "fields": [
                {
                  "name": null,
                  "type": 332,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasDisputes, Runtime>",
                  "docs": []
                }
              ],
              "index": 62,
              "docs": []
            },
            {
              "name": "ParasSlashing",
              "fields": [
                {
                  "name": null,
                  "type": 333,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasSlashing, Runtime>",
                  "docs": []
                }
              ],
              "index": 63,
              "docs": []
            },
            {
              "name": "Registrar",
              "fields": [
                {
                  "name": null,
                  "type": 337,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Registrar, Runtime>",
                  "docs": []
                }
              ],
              "index": 70,
              "docs": []
            },
            {
              "name": "Slots",
              "fields": [
                {
                  "name": null,
                  "type": 338,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Slots, Runtime>",
                  "docs": []
                }
              ],
              "index": 71,
              "docs": []
            },
            {
              "name": "Auctions",
              "fields": [
                {
                  "name": null,
                  "type": 339,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Auctions, Runtime>",
                  "docs": []
                }
              ],
              "index": 72,
              "docs": []
            },
            {
              "name": "Crowdloan",
              "fields": [
                {
                  "name": null,
                  "type": 341,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Crowdloan, Runtime>",
                  "docs": []
                }
              ],
              "index": 73,
              "docs": []
            },
            {
              "name": "XcmPallet",
              "fields": [
                {
                  "name": null,
                  "type": 349,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmPallet, Runtime>",
                  "docs": []
                }
              ],
              "index": 99,
              "docs": []
            },
            {
              "name": "MessageQueue",
              "fields": [
                {
                  "name": null,
                  "type": 412,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageQueue, Runtime>",
                  "docs": []
                }
              ],
              "index": 100,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 69,
    "type": {
      "path": [
        "frame_system",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "remark",
              "fields": [
                {
                  "name": "remark",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::remark`]."
              ]
            },
            {
              "name": "set_heap_pages",
              "fields": [
                {
                  "name": "pages",
                  "type": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_heap_pages`]."
              ]
            },
            {
              "name": "set_code",
              "fields": [
                {
                  "name": "code",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_code`]."
              ]
            },
            {
              "name": "set_code_without_checks",
              "fields": [
                {
                  "name": "code",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::set_code_without_checks`]."
              ]
            },
            {
              "name": "set_storage",
              "fields": [
                {
                  "name": "items",
                  "type": 70,
                  "typeName": "Vec<KeyValue>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::set_storage`]."
              ]
            },
            {
              "name": "kill_storage",
              "fields": [
                {
                  "name": "keys",
                  "type": 72,
                  "typeName": "Vec<Key>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::kill_storage`]."
              ]
            },
            {
              "name": "kill_prefix",
              "fields": [
                {
                  "name": "prefix",
                  "type": 13,
                  "typeName": "Key",
                  "docs": []
                },
                {
                  "name": "subkeys",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::kill_prefix`]."
              ]
            },
            {
              "name": "remark_with_event",
              "fields": [
                {
                  "name": "remark",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::remark_with_event`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 70,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 71
        }
      },
      "docs": []
    }
  },
  {
    "id": 71,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          13,
          13
        ]
      },
      "docs": []
    }
  },
  {
    "id": 72,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 13
        }
      },
      "docs": []
    }
  },
  {
    "id": 73,
    "type": {
      "path": [
        "pallet_scheduler",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "schedule",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "maybe_periodic",
                  "type": 74,
                  "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "priority",
                  "type": 2,
                  "typeName": "schedule::Priority",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::schedule`]."
              ]
            },
            {
              "name": "cancel",
              "fields": [
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::cancel`]."
              ]
            },
            {
              "name": "schedule_named",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "TaskName",
                  "docs": []
                },
                {
                  "name": "when",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "maybe_periodic",
                  "type": 74,
                  "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "priority",
                  "type": 2,
                  "typeName": "schedule::Priority",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::schedule_named`]."
              ]
            },
            {
              "name": "cancel_named",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "TaskName",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::cancel_named`]."
              ]
            },
            {
              "name": "schedule_after",
              "fields": [
                {
                  "name": "after",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "maybe_periodic",
                  "type": 74,
                  "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "priority",
                  "type": 2,
                  "typeName": "schedule::Priority",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::schedule_after`]."
              ]
            },
            {
              "name": "schedule_named_after",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "TaskName",
                  "docs": []
                },
                {
                  "name": "after",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "maybe_periodic",
                  "type": 74,
                  "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "priority",
                  "type": 2,
                  "typeName": "schedule::Priority",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::schedule_named_after`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 74,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 31
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 31,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 75,
    "type": {
      "path": [
        "pallet_preimage",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "note_preimage",
              "fields": [
                {
                  "name": "bytes",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::note_preimage`]."
              ]
            },
            {
              "name": "unnote_preimage",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::unnote_preimage`]."
              ]
            },
            {
              "name": "request_preimage",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::request_preimage`]."
              ]
            },
            {
              "name": "unrequest_preimage",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unrequest_preimage`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 76,
    "type": {
      "path": [
        "pallet_babe",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "report_equivocation",
              "fields": [
                {
                  "name": "equivocation_proof",
                  "type": 77,
                  "typeName": "Box<EquivocationProof<HeaderFor<T>>>",
                  "docs": []
                },
                {
                  "name": "key_owner_proof",
                  "type": 82,
                  "typeName": "T::KeyOwnerProof",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::report_equivocation`]."
              ]
            },
            {
              "name": "report_equivocation_unsigned",
              "fields": [
                {
                  "name": "equivocation_proof",
                  "type": 77,
                  "typeName": "Box<EquivocationProof<HeaderFor<T>>>",
                  "docs": []
                },
                {
                  "name": "key_owner_proof",
                  "type": 82,
                  "typeName": "T::KeyOwnerProof",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::report_equivocation_unsigned`]."
              ]
            },
            {
              "name": "plan_config_change",
              "fields": [
                {
                  "name": "config",
                  "type": 83,
                  "typeName": "NextConfigDescriptor",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::plan_config_change`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 77,
    "type": {
      "path": [
        "sp_consensus_slots",
        "EquivocationProof"
      ],
      "params": [
        {
          "name": "Header",
          "type": 78
        },
        {
          "name": "Id",
          "type": 80
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "offender",
              "type": 80,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "slot",
              "type": 81,
              "typeName": "Slot",
              "docs": []
            },
            {
              "name": "first_header",
              "type": 78,
              "typeName": "Header",
              "docs": []
            },
            {
              "name": "second_header",
              "type": 78,
              "typeName": "Header",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 78,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "header",
        "Header"
      ],
      "params": [
        {
          "name": "Number",
          "type": 4
        },
        {
          "name": "Hash",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "parent_hash",
              "type": 12,
              "typeName": "Hash::Output",
              "docs": []
            },
            {
              "name": "number",
              "type": 79,
              "typeName": "Number",
              "docs": []
            },
            {
              "name": "state_root",
              "type": 12,
              "typeName": "Hash::Output",
              "docs": []
            },
            {
              "name": "extrinsics_root",
              "type": 12,
              "typeName": "Hash::Output",
              "docs": []
            },
            {
              "name": "digest",
              "type": 14,
              "typeName": "Digest",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 79,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 4
        }
      },
      "docs": []
    }
  },
  {
    "id": 80,
    "type": {
      "path": [
        "sp_consensus_babe",
        "app",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 56,
              "typeName": "sr25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 81,
    "type": {
      "path": [
        "sp_consensus_slots",
        "Slot"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 11,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 82,
    "type": {
      "path": [
        "sp_session",
        "MembershipProof"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "session",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "trie_nodes",
              "type": 72,
              "typeName": "Vec<Vec<u8>>",
              "docs": []
            },
            {
              "name": "validator_count",
              "type": 4,
              "typeName": "ValidatorCount",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 83,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "NextConfigDescriptor"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V1",
              "fields": [
                {
                  "name": "c",
                  "type": 84,
                  "typeName": "(u64, u64)",
                  "docs": []
                },
                {
                  "name": "allowed_slots",
                  "type": 85,
                  "typeName": "AllowedSlots",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 84,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          11,
          11
        ]
      },
      "docs": []
    }
  },
  {
    "id": 85,
    "type": {
      "path": [
        "sp_consensus_babe",
        "AllowedSlots"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PrimarySlots",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "PrimaryAndSecondaryPlainSlots",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "PrimaryAndSecondaryVRFSlots",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 86,
    "type": {
      "path": [
        "pallet_timestamp",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "set",
              "fields": [
                {
                  "name": "now",
                  "type": 10,
                  "typeName": "T::Moment",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::set`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 87,
    "type": {
      "path": [
        "pallet_indices",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "claim",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::claim`]."
              ]
            },
            {
              "name": "transfer",
              "fields": [
                {
                  "name": "new",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::transfer`]."
              ]
            },
            {
              "name": "free",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::free`]."
              ]
            },
            {
              "name": "force_transfer",
              "fields": [
                {
                  "name": "new",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                },
                {
                  "name": "freeze",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::force_transfer`]."
              ]
            },
            {
              "name": "freeze",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::AccountIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::freeze`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 88,
    "type": {
      "path": [
        "sp_runtime",
        "multiaddress",
        "MultiAddress"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "AccountIndex",
          "type": 34
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Id",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Index",
              "fields": [
                {
                  "name": null,
                  "type": 89,
                  "typeName": "AccountIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Raw",
              "fields": [
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Address32",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Address20",
              "fields": [
                {
                  "name": null,
                  "type": 90,
                  "typeName": "[u8; 20]",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 89,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 34
        }
      },
      "docs": []
    }
  },
  {
    "id": 90,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 20,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 91,
    "type": {
      "path": [
        "pallet_balances",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "transfer_allow_death",
              "fields": [
                {
                  "name": "dest",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::transfer_allow_death`]."
              ]
            },
            {
              "name": "set_balance_deprecated",
              "fields": [
                {
                  "name": "who",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "new_free",
                  "type": 60,
                  "typeName": "T::Balance",
                  "docs": []
                },
                {
                  "name": "old_reserved",
                  "type": 60,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_balance_deprecated`]."
              ]
            },
            {
              "name": "force_transfer",
              "fields": [
                {
                  "name": "source",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::force_transfer`]."
              ]
            },
            {
              "name": "transfer_keep_alive",
              "fields": [
                {
                  "name": "dest",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::transfer_keep_alive`]."
              ]
            },
            {
              "name": "transfer_all",
              "fields": [
                {
                  "name": "dest",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "keep_alive",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::transfer_all`]."
              ]
            },
            {
              "name": "force_unreserve",
              "fields": [
                {
                  "name": "who",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::force_unreserve`]."
              ]
            },
            {
              "name": "upgrade_accounts",
              "fields": [
                {
                  "name": "who",
                  "type": 92,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::upgrade_accounts`]."
              ]
            },
            {
              "name": "transfer",
              "fields": [
                {
                  "name": "dest",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::transfer`]."
              ]
            },
            {
              "name": "force_set_balance",
              "fields": [
                {
                  "name": "who",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "new_free",
                  "type": 60,
                  "typeName": "T::Balance",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::force_set_balance`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 92,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 0
        }
      },
      "docs": []
    }
  },
  {
    "id": 93,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "bond",
              "fields": [
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "payee",
                  "type": 94,
                  "typeName": "RewardDestination<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::bond`]."
              ]
            },
            {
              "name": "bond_extra",
              "fields": [
                {
                  "name": "max_additional",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::bond_extra`]."
              ]
            },
            {
              "name": "unbond",
              "fields": [
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::unbond`]."
              ]
            },
            {
              "name": "withdraw_unbonded",
              "fields": [
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::withdraw_unbonded`]."
              ]
            },
            {
              "name": "validate",
              "fields": [
                {
                  "name": "prefs",
                  "type": 42,
                  "typeName": "ValidatorPrefs",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::validate`]."
              ]
            },
            {
              "name": "nominate",
              "fields": [
                {
                  "name": "targets",
                  "type": 95,
                  "typeName": "Vec<AccountIdLookupOf<T>>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::nominate`]."
              ]
            },
            {
              "name": "chill",
              "fields": [],
              "index": 6,
              "docs": [
                "See [`Pallet::chill`]."
              ]
            },
            {
              "name": "set_payee",
              "fields": [
                {
                  "name": "payee",
                  "type": 94,
                  "typeName": "RewardDestination<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::set_payee`]."
              ]
            },
            {
              "name": "set_controller",
              "fields": [],
              "index": 8,
              "docs": [
                "See [`Pallet::set_controller`]."
              ]
            },
            {
              "name": "set_validator_count",
              "fields": [
                {
                  "name": "new",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::set_validator_count`]."
              ]
            },
            {
              "name": "increase_validator_count",
              "fields": [
                {
                  "name": "additional",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::increase_validator_count`]."
              ]
            },
            {
              "name": "scale_validator_count",
              "fields": [
                {
                  "name": "factor",
                  "type": 96,
                  "typeName": "Percent",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::scale_validator_count`]."
              ]
            },
            {
              "name": "force_no_eras",
              "fields": [],
              "index": 12,
              "docs": [
                "See [`Pallet::force_no_eras`]."
              ]
            },
            {
              "name": "force_new_era",
              "fields": [],
              "index": 13,
              "docs": [
                "See [`Pallet::force_new_era`]."
              ]
            },
            {
              "name": "set_invulnerables",
              "fields": [
                {
                  "name": "invulnerables",
                  "type": 92,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::set_invulnerables`]."
              ]
            },
            {
              "name": "force_unstake",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::force_unstake`]."
              ]
            },
            {
              "name": "force_new_era_always",
              "fields": [],
              "index": 16,
              "docs": [
                "See [`Pallet::force_new_era_always`]."
              ]
            },
            {
              "name": "cancel_deferred_slash",
              "fields": [
                {
                  "name": "era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                },
                {
                  "name": "slash_indices",
                  "type": 97,
                  "typeName": "Vec<u32>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::cancel_deferred_slash`]."
              ]
            },
            {
              "name": "payout_stakers",
              "fields": [
                {
                  "name": "validator_stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::payout_stakers`]."
              ]
            },
            {
              "name": "rebond",
              "fields": [
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::rebond`]."
              ]
            },
            {
              "name": "reap_stash",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "See [`Pallet::reap_stash`]."
              ]
            },
            {
              "name": "kick",
              "fields": [
                {
                  "name": "who",
                  "type": 95,
                  "typeName": "Vec<AccountIdLookupOf<T>>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "See [`Pallet::kick`]."
              ]
            },
            {
              "name": "set_staking_configs",
              "fields": [
                {
                  "name": "min_nominator_bond",
                  "type": 98,
                  "typeName": "ConfigOp<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "min_validator_bond",
                  "type": 98,
                  "typeName": "ConfigOp<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "max_nominator_count",
                  "type": 99,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "max_validator_count",
                  "type": 99,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "chill_threshold",
                  "type": 100,
                  "typeName": "ConfigOp<Percent>",
                  "docs": []
                },
                {
                  "name": "min_commission",
                  "type": 101,
                  "typeName": "ConfigOp<Perbill>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "See [`Pallet::set_staking_configs`]."
              ]
            },
            {
              "name": "chill_other",
              "fields": [
                {
                  "name": "controller",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "See [`Pallet::chill_other`]."
              ]
            },
            {
              "name": "force_apply_min_commission",
              "fields": [
                {
                  "name": "validator_stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": [
                "See [`Pallet::force_apply_min_commission`]."
              ]
            },
            {
              "name": "set_min_commission",
              "fields": [
                {
                  "name": "new",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": [
                "See [`Pallet::set_min_commission`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 94,
    "type": {
      "path": [
        "pallet_staking",
        "RewardDestination"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Staked",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Stash",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Controller",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Account",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "None",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 95,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 88
        }
      },
      "docs": []
    }
  },
  {
    "id": 96,
    "type": {
      "path": [
        "sp_arithmetic",
        "per_things",
        "Percent"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 2,
              "typeName": "u8",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 97,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 4
        }
      },
      "docs": []
    }
  },
  {
    "id": 98,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 99,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 100,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 96
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 96,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 101,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 41
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 41,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 102,
    "type": {
      "path": [
        "pallet_session",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "set_keys",
              "fields": [
                {
                  "name": "keys",
                  "type": 103,
                  "typeName": "T::Keys",
                  "docs": []
                },
                {
                  "name": "proof",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::set_keys`]."
              ]
            },
            {
              "name": "purge_keys",
              "fields": [],
              "index": 1,
              "docs": [
                "See [`Pallet::purge_keys`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 103,
    "type": {
      "path": [
        "polkadot_runtime",
        "SessionKeys"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "grandpa",
              "type": 52,
              "typeName": "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            },
            {
              "name": "babe",
              "type": 80,
              "typeName": "<Babe as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            },
            {
              "name": "im_online",
              "type": 55,
              "typeName": "<ImOnline as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            },
            {
              "name": "para_validator",
              "type": 104,
              "typeName": "<Initializer as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            },
            {
              "name": "para_assignment",
              "type": 105,
              "typeName": "<ParaSessionInfo as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            },
            {
              "name": "authority_discovery",
              "type": 106,
              "typeName": "<AuthorityDiscovery as $crate::BoundToRuntimeAppPublic>::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 104,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "validator_app",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 56,
              "typeName": "sr25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 105,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "assignment_app",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 56,
              "typeName": "sr25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 106,
    "type": {
      "path": [
        "sp_authority_discovery",
        "app",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 56,
              "typeName": "sr25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 107,
    "type": {
      "path": [
        "pallet_grandpa",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "report_equivocation",
              "fields": [
                {
                  "name": "equivocation_proof",
                  "type": 108,
                  "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "key_owner_proof",
                  "type": 82,
                  "typeName": "T::KeyOwnerProof",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::report_equivocation`]."
              ]
            },
            {
              "name": "report_equivocation_unsigned",
              "fields": [
                {
                  "name": "equivocation_proof",
                  "type": 108,
                  "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "key_owner_proof",
                  "type": 82,
                  "typeName": "T::KeyOwnerProof",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::report_equivocation_unsigned`]."
              ]
            },
            {
              "name": "note_stalled",
              "fields": [
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "best_finalized_block_number",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::note_stalled`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 108,
    "type": {
      "path": [
        "sp_consensus_grandpa",
        "EquivocationProof"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        },
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "set_id",
              "type": 11,
              "typeName": "SetId",
              "docs": []
            },
            {
              "name": "equivocation",
              "type": 109,
              "typeName": "Equivocation<H, N>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 109,
    "type": {
      "path": [
        "sp_consensus_grandpa",
        "Equivocation"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        },
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Prevote",
              "fields": [
                {
                  "name": null,
                  "type": 110,
                  "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Precommit",
              "fields": [
                {
                  "name": null,
                  "type": 116,
                  "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 110,
    "type": {
      "path": [
        "finality_grandpa",
        "Equivocation"
      ],
      "params": [
        {
          "name": "Id",
          "type": 52
        },
        {
          "name": "V",
          "type": 111
        },
        {
          "name": "S",
          "type": 112
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "round_number",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "identity",
              "type": 52,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "first",
              "type": 115,
              "typeName": "(V, S)",
              "docs": []
            },
            {
              "name": "second",
              "type": 115,
              "typeName": "(V, S)",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 111,
    "type": {
      "path": [
        "finality_grandpa",
        "Prevote"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        },
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "target_hash",
              "type": 12,
              "typeName": "H",
              "docs": []
            },
            {
              "name": "target_number",
              "type": 4,
              "typeName": "N",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 112,
    "type": {
      "path": [
        "sp_consensus_grandpa",
        "app",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 113,
              "typeName": "ed25519::Signature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 113,
    "type": {
      "path": [
        "sp_core",
        "ed25519",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 114,
              "typeName": "[u8; 64]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 114,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 64,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 115,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          111,
          112
        ]
      },
      "docs": []
    }
  },
  {
    "id": 116,
    "type": {
      "path": [
        "finality_grandpa",
        "Equivocation"
      ],
      "params": [
        {
          "name": "Id",
          "type": 52
        },
        {
          "name": "V",
          "type": 117
        },
        {
          "name": "S",
          "type": 112
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "round_number",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "identity",
              "type": 52,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "first",
              "type": 118,
              "typeName": "(V, S)",
              "docs": []
            },
            {
              "name": "second",
              "type": 118,
              "typeName": "(V, S)",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 117,
    "type": {
      "path": [
        "finality_grandpa",
        "Precommit"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        },
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "target_hash",
              "type": 12,
              "typeName": "H",
              "docs": []
            },
            {
              "name": "target_number",
              "type": 4,
              "typeName": "N",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 118,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          117,
          112
        ]
      },
      "docs": []
    }
  },
  {
    "id": 119,
    "type": {
      "path": [
        "pallet_im_online",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "heartbeat",
              "fields": [
                {
                  "name": "heartbeat",
                  "type": 120,
                  "typeName": "Heartbeat<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "signature",
                  "type": 121,
                  "typeName": "<T::AuthorityId as RuntimeAppPublic>::Signature",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::heartbeat`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 120,
    "type": {
      "path": [
        "pallet_im_online",
        "Heartbeat"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "block_number",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "session_index",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "authority_index",
              "type": 4,
              "typeName": "AuthIndex",
              "docs": []
            },
            {
              "name": "validators_len",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 121,
    "type": {
      "path": [
        "pallet_im_online",
        "sr25519",
        "app_sr25519",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 122,
              "typeName": "sr25519::Signature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 122,
    "type": {
      "path": [
        "sp_core",
        "sr25519",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 114,
              "typeName": "[u8; 64]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 123,
    "type": {
      "path": [
        "pallet_treasury",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "propose_spend",
              "fields": [
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::propose_spend`]."
              ]
            },
            {
              "name": "reject_proposal",
              "fields": [
                {
                  "name": "proposal_id",
                  "type": 79,
                  "typeName": "ProposalIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::reject_proposal`]."
              ]
            },
            {
              "name": "approve_proposal",
              "fields": [
                {
                  "name": "proposal_id",
                  "type": 79,
                  "typeName": "ProposalIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::approve_proposal`]."
              ]
            },
            {
              "name": "spend",
              "fields": [
                {
                  "name": "amount",
                  "type": 60,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::spend`]."
              ]
            },
            {
              "name": "remove_approval",
              "fields": [
                {
                  "name": "proposal_id",
                  "type": 79,
                  "typeName": "ProposalIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::remove_approval`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 124,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "vote",
              "fields": [
                {
                  "name": "poll_index",
                  "type": 79,
                  "typeName": "PollIndexOf<T, I>",
                  "docs": []
                },
                {
                  "name": "vote",
                  "type": 125,
                  "typeName": "AccountVote<BalanceOf<T, I>>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::vote`]."
              ]
            },
            {
              "name": "delegate",
              "fields": [
                {
                  "name": "class",
                  "type": 66,
                  "typeName": "ClassOf<T, I>",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "conviction",
                  "type": 127,
                  "typeName": "Conviction",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::delegate`]."
              ]
            },
            {
              "name": "undelegate",
              "fields": [
                {
                  "name": "class",
                  "type": 66,
                  "typeName": "ClassOf<T, I>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::undelegate`]."
              ]
            },
            {
              "name": "unlock",
              "fields": [
                {
                  "name": "class",
                  "type": 66,
                  "typeName": "ClassOf<T, I>",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unlock`]."
              ]
            },
            {
              "name": "remove_vote",
              "fields": [
                {
                  "name": "class",
                  "type": 128,
                  "typeName": "Option<ClassOf<T, I>>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "PollIndexOf<T, I>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::remove_vote`]."
              ]
            },
            {
              "name": "remove_other_vote",
              "fields": [
                {
                  "name": "target",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "class",
                  "type": 66,
                  "typeName": "ClassOf<T, I>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "PollIndexOf<T, I>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::remove_other_vote`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 125,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "AccountVote"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Standard",
              "fields": [
                {
                  "name": "vote",
                  "type": 126,
                  "typeName": "Vote",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Split",
              "fields": [
                {
                  "name": "aye",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "nay",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "SplitAbstain",
              "fields": [
                {
                  "name": "aye",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "nay",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "abstain",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 126,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "Vote"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 2,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 127,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "conviction",
        "Conviction"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Locked1x",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Locked2x",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Locked3x",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "Locked4x",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Locked5x",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Locked6x",
              "fields": [],
              "index": 6,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 128,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 66
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 66,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 129,
    "type": {
      "path": [
        "pallet_referenda",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "submit",
              "fields": [
                {
                  "name": "proposal_origin",
                  "type": 130,
                  "typeName": "Box<PalletsOriginOf<T>>",
                  "docs": []
                },
                {
                  "name": "proposal",
                  "type": 67,
                  "typeName": "BoundedCallOf<T, I>",
                  "docs": []
                },
                {
                  "name": "enactment_moment",
                  "type": 144,
                  "typeName": "DispatchTime<BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::submit`]."
              ]
            },
            {
              "name": "place_decision_deposit",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::place_decision_deposit`]."
              ]
            },
            {
              "name": "refund_decision_deposit",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::refund_decision_deposit`]."
              ]
            },
            {
              "name": "cancel",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::cancel`]."
              ]
            },
            {
              "name": "kill",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::kill`]."
              ]
            },
            {
              "name": "nudge_referendum",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::nudge_referendum`]."
              ]
            },
            {
              "name": "one_fewer_deciding",
              "fields": [
                {
                  "name": "track",
                  "type": 66,
                  "typeName": "TrackIdOf<T, I>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::one_fewer_deciding`]."
              ]
            },
            {
              "name": "refund_submission_deposit",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::refund_submission_deposit`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "ReferendumIndex",
                  "docs": []
                },
                {
                  "name": "maybe_hash",
                  "type": 145,
                  "typeName": "Option<PreimageHash>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 130,
    "type": {
      "path": [
        "polkadot_runtime",
        "OriginCaller"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "system",
              "fields": [
                {
                  "name": null,
                  "type": 131,
                  "typeName": "frame_system::Origin<Runtime>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Origins",
              "fields": [
                {
                  "name": null,
                  "type": 132,
                  "typeName": "pallet_custom_origins::Origin",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "ParachainsOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 133,
                  "typeName": "parachains_origin::Origin",
                  "docs": []
                }
              ],
              "index": 50,
              "docs": []
            },
            {
              "name": "XcmPallet",
              "fields": [
                {
                  "name": null,
                  "type": 135,
                  "typeName": "pallet_xcm::Origin",
                  "docs": []
                }
              ],
              "index": 99,
              "docs": []
            },
            {
              "name": "Void",
              "fields": [
                {
                  "name": null,
                  "type": 143,
                  "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::Void",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 131,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "RawOrigin"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Root",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Signed",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "None",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 132,
    "type": {
      "path": [
        "polkadot_runtime",
        "governance",
        "origins",
        "pallet_custom_origins",
        "Origin"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "StakingAdmin",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Treasurer",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "FellowshipAdmin",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "GeneralAdmin",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "AuctionAdmin",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "LeaseAdmin",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "ReferendumCanceller",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "ReferendumKiller",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "SmallTipper",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "BigTipper",
              "fields": [],
              "index": 9,
              "docs": []
            },
            {
              "name": "SmallSpender",
              "fields": [],
              "index": 10,
              "docs": []
            },
            {
              "name": "MediumSpender",
              "fields": [],
              "index": 11,
              "docs": []
            },
            {
              "name": "BigSpender",
              "fields": [],
              "index": 12,
              "docs": []
            },
            {
              "name": "WhitelistedCaller",
              "fields": [],
              "index": 13,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 133,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "origin",
        "pallet",
        "Origin"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Parachain",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 134,
    "type": {
      "path": [
        "polkadot_parachain",
        "primitives",
        "Id"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 135,
    "type": {
      "path": [
        "pallet_xcm",
        "pallet",
        "Origin"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Xcm",
              "fields": [
                {
                  "name": null,
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Response",
              "fields": [
                {
                  "name": null,
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 136,
    "type": {
      "path": [
        "xcm",
        "v3",
        "multilocation",
        "MultiLocation"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "parents",
              "type": 2,
              "typeName": "u8",
              "docs": []
            },
            {
              "name": "interior",
              "type": 137,
              "typeName": "Junctions",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 137,
    "type": {
      "path": [
        "xcm",
        "v3",
        "junctions",
        "Junctions"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Here",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "X1",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "X2",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "X3",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "X4",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "X5",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "X6",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "X7",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "X8",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 138,
    "type": {
      "path": [
        "xcm",
        "v3",
        "junction",
        "Junction"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Parachain",
              "fields": [
                {
                  "name": null,
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "AccountId32",
              "fields": [
                {
                  "name": "network",
                  "type": 139,
                  "typeName": "Option<NetworkId>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "AccountIndex64",
              "fields": [
                {
                  "name": "network",
                  "type": 139,
                  "typeName": "Option<NetworkId>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "AccountKey20",
              "fields": [
                {
                  "name": "network",
                  "type": 139,
                  "typeName": "Option<NetworkId>",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 90,
                  "typeName": "[u8; 20]",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "PalletInstance",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "GeneralIndex",
              "fields": [
                {
                  "name": null,
                  "type": 60,
                  "typeName": "u128",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "GeneralKey",
              "fields": [
                {
                  "name": "length",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "OnlyChild",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "Plurality",
              "fields": [
                {
                  "name": "id",
                  "type": 141,
                  "typeName": "BodyId",
                  "docs": []
                },
                {
                  "name": "part",
                  "type": 142,
                  "typeName": "BodyPart",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "GlobalConsensus",
              "fields": [
                {
                  "name": null,
                  "type": 140,
                  "typeName": "NetworkId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 139,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 140
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 140,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 140,
    "type": {
      "path": [
        "xcm",
        "v3",
        "junction",
        "NetworkId"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ByGenesis",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "ByFork",
              "fields": [
                {
                  "name": "block_number",
                  "type": 11,
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "block_hash",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Polkadot",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Kusama",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "Westend",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Rococo",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Wococo",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "Ethereum",
              "fields": [
                {
                  "name": "chain_id",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "BitcoinCore",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "BitcoinCash",
              "fields": [],
              "index": 9,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 141,
    "type": {
      "path": [
        "xcm",
        "v3",
        "junction",
        "BodyId"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unit",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Moniker",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": "[u8; 4]",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Index",
              "fields": [
                {
                  "name": null,
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Executive",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "Technical",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Legislative",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Judicial",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "Defense",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "Administration",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "Treasury",
              "fields": [],
              "index": 9,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 142,
    "type": {
      "path": [
        "xcm",
        "v3",
        "junction",
        "BodyPart"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Voice",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Members",
              "fields": [
                {
                  "name": "count",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Fraction",
              "fields": [
                {
                  "name": "nom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "denom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "AtLeastProportion",
              "fields": [
                {
                  "name": "nom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "denom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "MoreThanProportion",
              "fields": [
                {
                  "name": "nom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "denom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 143,
    "type": {
      "path": [
        "sp_core",
        "Void"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 144,
    "type": {
      "path": [
        "frame_support",
        "traits",
        "schedule",
        "DispatchTime"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "At",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "After",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 145,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 12
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 12,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 146,
    "type": {
      "path": [
        "pallet_whitelist",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "whitelist_call",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::whitelist_call`]."
              ]
            },
            {
              "name": "remove_whitelisted_call",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::remove_whitelisted_call`]."
              ]
            },
            {
              "name": "dispatch_whitelisted_call",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                },
                {
                  "name": "call_encoded_len",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "call_weight_witness",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::dispatch_whitelisted_call`]."
              ]
            },
            {
              "name": "dispatch_whitelisted_call_with_preimage",
              "fields": [
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::dispatch_whitelisted_call_with_preimage`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 147,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "claims",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "claim",
              "fields": [
                {
                  "name": "dest",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "ethereum_signature",
                  "type": 148,
                  "typeName": "EcdsaSignature",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::claim`]."
              ]
            },
            {
              "name": "mint_claim",
              "fields": [
                {
                  "name": "who",
                  "type": 150,
                  "typeName": "EthereumAddress",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "vesting_schedule",
                  "type": 151,
                  "typeName": "Option<(BalanceOf<T>, BalanceOf<T>, BlockNumberFor<T>)>",
                  "docs": []
                },
                {
                  "name": "statement",
                  "type": 153,
                  "typeName": "Option<StatementKind>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::mint_claim`]."
              ]
            },
            {
              "name": "claim_attest",
              "fields": [
                {
                  "name": "dest",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "ethereum_signature",
                  "type": 148,
                  "typeName": "EcdsaSignature",
                  "docs": []
                },
                {
                  "name": "statement",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::claim_attest`]."
              ]
            },
            {
              "name": "attest",
              "fields": [
                {
                  "name": "statement",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::attest`]."
              ]
            },
            {
              "name": "move_claim",
              "fields": [
                {
                  "name": "old",
                  "type": 150,
                  "typeName": "EthereumAddress",
                  "docs": []
                },
                {
                  "name": "new",
                  "type": 150,
                  "typeName": "EthereumAddress",
                  "docs": []
                },
                {
                  "name": "maybe_preclaim",
                  "type": 155,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::move_claim`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 148,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "claims",
        "EcdsaSignature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 149,
              "typeName": "[u8; 65]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 149,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 65,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 150,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "claims",
        "EthereumAddress"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 90,
              "typeName": "[u8; 20]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 151,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 152
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 152,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 152,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          6,
          6,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 153,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 154
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 154,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 154,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "claims",
        "StatementKind"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Regular",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Saft",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 155,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 156,
    "type": {
      "path": [
        "pallet_vesting",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "vest",
              "fields": [],
              "index": 0,
              "docs": [
                "See [`Pallet::vest`]."
              ]
            },
            {
              "name": "vest_other",
              "fields": [
                {
                  "name": "target",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::vest_other`]."
              ]
            },
            {
              "name": "vested_transfer",
              "fields": [
                {
                  "name": "target",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "schedule",
                  "type": 157,
                  "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::vested_transfer`]."
              ]
            },
            {
              "name": "force_vested_transfer",
              "fields": [
                {
                  "name": "source",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "schedule",
                  "type": 157,
                  "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::force_vested_transfer`]."
              ]
            },
            {
              "name": "merge_schedules",
              "fields": [
                {
                  "name": "schedule1_index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "schedule2_index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::merge_schedules`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 157,
    "type": {
      "path": [
        "pallet_vesting",
        "vesting_info",
        "VestingInfo"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "locked",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "per_block",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "starting_block",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 158,
    "type": {
      "path": [
        "pallet_utility",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "batch",
              "fields": [
                {
                  "name": "calls",
                  "type": 159,
                  "typeName": "Vec<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::batch`]."
              ]
            },
            {
              "name": "as_derivative",
              "fields": [
                {
                  "name": "index",
                  "type": 66,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::as_derivative`]."
              ]
            },
            {
              "name": "batch_all",
              "fields": [
                {
                  "name": "calls",
                  "type": 159,
                  "typeName": "Vec<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::batch_all`]."
              ]
            },
            {
              "name": "dispatch_as",
              "fields": [
                {
                  "name": "as_origin",
                  "type": 130,
                  "typeName": "Box<T::PalletsOrigin>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::dispatch_as`]."
              ]
            },
            {
              "name": "force_batch",
              "fields": [
                {
                  "name": "calls",
                  "type": 159,
                  "typeName": "Vec<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::force_batch`]."
              ]
            },
            {
              "name": "with_weight",
              "fields": [
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                },
                {
                  "name": "weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::with_weight`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 159,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 68
        }
      },
      "docs": []
    }
  },
  {
    "id": 160,
    "type": {
      "path": [
        "pallet_identity",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "add_registrar",
              "fields": [
                {
                  "name": "account",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::add_registrar`]."
              ]
            },
            {
              "name": "set_identity",
              "fields": [
                {
                  "name": "info",
                  "type": 161,
                  "typeName": "Box<IdentityInfo<T::MaxAdditionalFields>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_identity`]."
              ]
            },
            {
              "name": "set_subs",
              "fields": [
                {
                  "name": "subs",
                  "type": 196,
                  "typeName": "Vec<(T::AccountId, Data)>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_subs`]."
              ]
            },
            {
              "name": "clear_identity",
              "fields": [],
              "index": 3,
              "docs": [
                "See [`Pallet::clear_identity`]."
              ]
            },
            {
              "name": "request_judgement",
              "fields": [
                {
                  "name": "reg_index",
                  "type": 79,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "max_fee",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::request_judgement`]."
              ]
            },
            {
              "name": "cancel_request",
              "fields": [
                {
                  "name": "reg_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::cancel_request`]."
              ]
            },
            {
              "name": "set_fee",
              "fields": [
                {
                  "name": "index",
                  "type": 79,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "fee",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::set_fee`]."
              ]
            },
            {
              "name": "set_account_id",
              "fields": [
                {
                  "name": "index",
                  "type": 79,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "new",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::set_account_id`]."
              ]
            },
            {
              "name": "set_fields",
              "fields": [
                {
                  "name": "index",
                  "type": 79,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "fields",
                  "type": 198,
                  "typeName": "IdentityFields",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::set_fields`]."
              ]
            },
            {
              "name": "provide_judgement",
              "fields": [
                {
                  "name": "reg_index",
                  "type": 79,
                  "typeName": "RegistrarIndex",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "judgement",
                  "type": 200,
                  "typeName": "Judgement<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "identity",
                  "type": 12,
                  "typeName": "T::Hash",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::provide_judgement`]."
              ]
            },
            {
              "name": "kill_identity",
              "fields": [
                {
                  "name": "target",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::kill_identity`]."
              ]
            },
            {
              "name": "add_sub",
              "fields": [
                {
                  "name": "sub",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 164,
                  "typeName": "Data",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::add_sub`]."
              ]
            },
            {
              "name": "rename_sub",
              "fields": [
                {
                  "name": "sub",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": 164,
                  "typeName": "Data",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::rename_sub`]."
              ]
            },
            {
              "name": "remove_sub",
              "fields": [
                {
                  "name": "sub",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::remove_sub`]."
              ]
            },
            {
              "name": "quit_sub",
              "fields": [],
              "index": 14,
              "docs": [
                "See [`Pallet::quit_sub`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Identity pallet declaration."
      ]
    }
  },
  {
    "id": 161,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "IdentityInfo"
      ],
      "params": [
        {
          "name": "FieldLimit",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "additional",
              "type": 162,
              "typeName": "BoundedVec<(Data, Data), FieldLimit>",
              "docs": []
            },
            {
              "name": "display",
              "type": 164,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "legal",
              "type": 164,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "web",
              "type": 164,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "riot",
              "type": 164,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "email",
              "type": 164,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "pgp_fingerprint",
              "type": 195,
              "typeName": "Option<[u8; 20]>",
              "docs": []
            },
            {
              "name": "image",
              "type": 164,
              "typeName": "Data",
              "docs": []
            },
            {
              "name": "twitter",
              "type": 164,
              "typeName": "Data",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 162,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 163
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 194,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 163,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          164,
          164
        ]
      },
      "docs": []
    }
  },
  {
    "id": 164,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "Data"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Raw0",
              "fields": [
                {
                  "name": null,
                  "type": 165,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Raw1",
              "fields": [
                {
                  "name": null,
                  "type": 166,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Raw2",
              "fields": [
                {
                  "name": null,
                  "type": 167,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Raw3",
              "fields": [
                {
                  "name": null,
                  "type": 168,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Raw4",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Raw5",
              "fields": [
                {
                  "name": null,
                  "type": 169,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "Raw6",
              "fields": [
                {
                  "name": null,
                  "type": 170,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "Raw7",
              "fields": [
                {
                  "name": null,
                  "type": 171,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "Raw8",
              "fields": [
                {
                  "name": null,
                  "type": 172,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "Raw9",
              "fields": [
                {
                  "name": null,
                  "type": 173,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 10,
              "docs": []
            },
            {
              "name": "Raw10",
              "fields": [
                {
                  "name": null,
                  "type": 174,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "Raw11",
              "fields": [
                {
                  "name": null,
                  "type": 175,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "Raw12",
              "fields": [
                {
                  "name": null,
                  "type": 176,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "Raw13",
              "fields": [
                {
                  "name": null,
                  "type": 177,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "Raw14",
              "fields": [
                {
                  "name": null,
                  "type": 178,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "Raw15",
              "fields": [
                {
                  "name": null,
                  "type": 179,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "Raw16",
              "fields": [
                {
                  "name": null,
                  "type": 47,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "Raw17",
              "fields": [
                {
                  "name": null,
                  "type": 180,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "Raw18",
              "fields": [
                {
                  "name": null,
                  "type": 181,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "Raw19",
              "fields": [
                {
                  "name": null,
                  "type": 182,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 20,
              "docs": []
            },
            {
              "name": "Raw20",
              "fields": [
                {
                  "name": null,
                  "type": 90,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Raw21",
              "fields": [
                {
                  "name": null,
                  "type": 183,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "Raw22",
              "fields": [
                {
                  "name": null,
                  "type": 184,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Raw23",
              "fields": [
                {
                  "name": null,
                  "type": 185,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Raw24",
              "fields": [
                {
                  "name": null,
                  "type": 186,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "Raw25",
              "fields": [
                {
                  "name": null,
                  "type": 187,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "Raw26",
              "fields": [
                {
                  "name": null,
                  "type": 188,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 27,
              "docs": []
            },
            {
              "name": "Raw27",
              "fields": [
                {
                  "name": null,
                  "type": 189,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "Raw28",
              "fields": [
                {
                  "name": null,
                  "type": 190,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "Raw29",
              "fields": [
                {
                  "name": null,
                  "type": 191,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "Raw30",
              "fields": [
                {
                  "name": null,
                  "type": 192,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 31,
              "docs": []
            },
            {
              "name": "Raw31",
              "fields": [
                {
                  "name": null,
                  "type": 193,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "Raw32",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 33,
              "docs": []
            },
            {
              "name": "BlakeTwo256",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "Sha256",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 35,
              "docs": []
            },
            {
              "name": "Keccak256",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "ShaThree256",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 165,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 0,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 166,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 1,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 167,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 2,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 168,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 3,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 169,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 5,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 170,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 6,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 171,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 7,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 172,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 8,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 173,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 9,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 174,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 10,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 175,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 11,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 176,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 12,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 177,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 13,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 178,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 14,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 179,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 15,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 180,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 17,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 181,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 18,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 182,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 19,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 183,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 21,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 184,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 22,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 185,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 23,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 186,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 24,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 187,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 25,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 188,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 26,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 189,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 27,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 190,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 28,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 191,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 29,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 192,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 30,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 193,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 31,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 194,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 163
        }
      },
      "docs": []
    }
  },
  {
    "id": 195,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 90
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 90,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 196,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 197
        }
      },
      "docs": []
    }
  },
  {
    "id": 197,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          164
        ]
      },
      "docs": []
    }
  },
  {
    "id": 198,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "BitFlags"
      ],
      "params": [
        {
          "name": "T",
          "type": 199
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 11,
              "typeName": "IdentityField",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 199,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "IdentityField"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Display",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Legal",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Web",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Riot",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "Email",
              "fields": [],
              "index": 16,
              "docs": []
            },
            {
              "name": "PgpFingerprint",
              "fields": [],
              "index": 32,
              "docs": []
            },
            {
              "name": "Image",
              "fields": [],
              "index": 64,
              "docs": []
            },
            {
              "name": "Twitter",
              "fields": [],
              "index": 128,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 200,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "Judgement"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unknown",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "FeePaid",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Reasonable",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "KnownGood",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "OutOfDate",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "LowQuality",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Erroneous",
              "fields": [],
              "index": 6,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 201,
    "type": {
      "path": [
        "pallet_proxy",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "proxy",
              "fields": [
                {
                  "name": "real",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "force_proxy_type",
                  "type": 202,
                  "typeName": "Option<T::ProxyType>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::proxy`]."
              ]
            },
            {
              "name": "add_proxy",
              "fields": [
                {
                  "name": "delegate",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 203,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::add_proxy`]."
              ]
            },
            {
              "name": "remove_proxy",
              "fields": [
                {
                  "name": "delegate",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 203,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::remove_proxy`]."
              ]
            },
            {
              "name": "remove_proxies",
              "fields": [],
              "index": 3,
              "docs": [
                "See [`Pallet::remove_proxies`]."
              ]
            },
            {
              "name": "create_pure",
              "fields": [
                {
                  "name": "proxy_type",
                  "type": 203,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 66,
                  "typeName": "u16",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::create_pure`]."
              ]
            },
            {
              "name": "kill_pure",
              "fields": [
                {
                  "name": "spawner",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 203,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 66,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "height",
                  "type": 79,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "ext_index",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::kill_pure`]."
              ]
            },
            {
              "name": "announce",
              "fields": [
                {
                  "name": "real",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "CallHashOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::announce`]."
              ]
            },
            {
              "name": "remove_announcement",
              "fields": [
                {
                  "name": "real",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "CallHashOf<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::remove_announcement`]."
              ]
            },
            {
              "name": "reject_announcement",
              "fields": [
                {
                  "name": "delegate",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "CallHashOf<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::reject_announcement`]."
              ]
            },
            {
              "name": "proxy_announced",
              "fields": [
                {
                  "name": "delegate",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "real",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "force_proxy_type",
                  "type": 202,
                  "typeName": "Option<T::ProxyType>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::proxy_announced`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 202,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 203
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 203,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 203,
    "type": {
      "path": [
        "polkadot_runtime",
        "ProxyType"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Any",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NonTransfer",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Governance",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Staking",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "IdentityJudgement",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "CancelProxy",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "Auction",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "NominationPools",
              "fields": [],
              "index": 8,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 204,
    "type": {
      "path": [
        "pallet_multisig",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "as_multi_threshold_1",
              "fields": [
                {
                  "name": "other_signatories",
                  "type": 92,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::as_multi_threshold_1`]."
              ]
            },
            {
              "name": "as_multi",
              "fields": [
                {
                  "name": "threshold",
                  "type": 66,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "other_signatories",
                  "type": 92,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "maybe_timepoint",
                  "type": 205,
                  "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 68,
                  "typeName": "Box<<T as Config>::RuntimeCall>",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::as_multi`]."
              ]
            },
            {
              "name": "approve_as_multi",
              "fields": [
                {
                  "name": "threshold",
                  "type": 66,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "other_signatories",
                  "type": 92,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "maybe_timepoint",
                  "type": 205,
                  "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::approve_as_multi`]."
              ]
            },
            {
              "name": "cancel_as_multi",
              "fields": [
                {
                  "name": "threshold",
                  "type": 66,
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "other_signatories",
                  "type": 92,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "timepoint",
                  "type": 206,
                  "typeName": "Timepoint<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::cancel_as_multi`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 205,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 206
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 206,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 206,
    "type": {
      "path": [
        "pallet_multisig",
        "Timepoint"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "height",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "index",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 207,
    "type": {
      "path": [
        "pallet_bounties",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "propose_bounty",
              "fields": [
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "description",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::propose_bounty`]."
              ]
            },
            {
              "name": "approve_bounty",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::approve_bounty`]."
              ]
            },
            {
              "name": "propose_curator",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "curator",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "fee",
                  "type": 60,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::propose_curator`]."
              ]
            },
            {
              "name": "unassign_curator",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unassign_curator`]."
              ]
            },
            {
              "name": "accept_curator",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::accept_curator`]."
              ]
            },
            {
              "name": "award_bounty",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::award_bounty`]."
              ]
            },
            {
              "name": "claim_bounty",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::claim_bounty`]."
              ]
            },
            {
              "name": "close_bounty",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::close_bounty`]."
              ]
            },
            {
              "name": "extend_bounty_expiry",
              "fields": [
                {
                  "name": "bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "remark",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::extend_bounty_expiry`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 208,
    "type": {
      "path": [
        "pallet_child_bounties",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "add_child_bounty",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "description",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::add_child_bounty`]."
              ]
            },
            {
              "name": "propose_curator",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "curator",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "fee",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::propose_curator`]."
              ]
            },
            {
              "name": "accept_curator",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::accept_curator`]."
              ]
            },
            {
              "name": "unassign_curator",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unassign_curator`]."
              ]
            },
            {
              "name": "award_child_bounty",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::award_child_bounty`]."
              ]
            },
            {
              "name": "claim_child_bounty",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::claim_child_bounty`]."
              ]
            },
            {
              "name": "close_child_bounty",
              "fields": [
                {
                  "name": "parent_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_bounty_id",
                  "type": 79,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::close_child_bounty`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 209,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "submit_unsigned",
              "fields": [
                {
                  "name": "raw_solution",
                  "type": 210,
                  "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                  "docs": []
                },
                {
                  "name": "witness",
                  "type": 263,
                  "typeName": "SolutionOrSnapshotSize",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::submit_unsigned`]."
              ]
            },
            {
              "name": "set_minimum_untrusted_score",
              "fields": [
                {
                  "name": "maybe_next_score",
                  "type": 264,
                  "typeName": "Option<ElectionScore>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_minimum_untrusted_score`]."
              ]
            },
            {
              "name": "set_emergency_election_result",
              "fields": [
                {
                  "name": "supports",
                  "type": 265,
                  "typeName": "Supports<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_emergency_election_result`]."
              ]
            },
            {
              "name": "submit",
              "fields": [
                {
                  "name": "raw_solution",
                  "type": 210,
                  "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::submit`]."
              ]
            },
            {
              "name": "governance_fallback",
              "fields": [
                {
                  "name": "maybe_max_voters",
                  "type": 270,
                  "typeName": "Option<u32>",
                  "docs": []
                },
                {
                  "name": "maybe_max_targets",
                  "type": 270,
                  "typeName": "Option<u32>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::governance_fallback`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 210,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "RawSolution"
      ],
      "params": [
        {
          "name": "S",
          "type": 211
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "solution",
              "type": 211,
              "typeName": "S",
              "docs": []
            },
            {
              "name": "score",
              "type": 262,
              "typeName": "ElectionScore",
              "docs": []
            },
            {
              "name": "round",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 211,
    "type": {
      "path": [
        "polkadot_runtime",
        "NposCompactSolution16"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "votes1",
              "type": 212,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes2",
              "type": 215,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes3",
              "type": 220,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes4",
              "type": 223,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes5",
              "type": 226,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes6",
              "type": 229,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes7",
              "type": 232,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes8",
              "type": 235,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes9",
              "type": 238,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes10",
              "type": 241,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes11",
              "type": 244,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes12",
              "type": 247,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes13",
              "type": 250,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes14",
              "type": 253,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes15",
              "type": 256,
              "typeName": null,
              "docs": []
            },
            {
              "name": "votes16",
              "type": 259,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 212,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 213
        }
      },
      "docs": []
    }
  },
  {
    "id": 213,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 214,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 66
        }
      },
      "docs": []
    }
  },
  {
    "id": 215,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 216
        }
      },
      "docs": []
    }
  },
  {
    "id": 216,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          217,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 217,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          214,
          218
        ]
      },
      "docs": []
    }
  },
  {
    "id": 218,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 219
        }
      },
      "docs": []
    }
  },
  {
    "id": 219,
    "type": {
      "path": [
        "sp_arithmetic",
        "per_things",
        "PerU16"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 66,
              "typeName": "u16",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 220,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 221
        }
      },
      "docs": []
    }
  },
  {
    "id": 221,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          222,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 222,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 2,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 223,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 224
        }
      },
      "docs": []
    }
  },
  {
    "id": 224,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          225,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 225,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 3,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 226,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 227
        }
      },
      "docs": []
    }
  },
  {
    "id": 227,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          228,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 228,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 4,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 229,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 230
        }
      },
      "docs": []
    }
  },
  {
    "id": 230,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          231,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 231,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 5,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 232,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 233
        }
      },
      "docs": []
    }
  },
  {
    "id": 233,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          234,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 234,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 6,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 235,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 236
        }
      },
      "docs": []
    }
  },
  {
    "id": 236,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          237,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 237,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 7,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 238,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 239
        }
      },
      "docs": []
    }
  },
  {
    "id": 239,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          240,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 240,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 8,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 241,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 242
        }
      },
      "docs": []
    }
  },
  {
    "id": 242,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          243,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 243,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 9,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 244,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 245
        }
      },
      "docs": []
    }
  },
  {
    "id": 245,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          246,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 246,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 10,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 247,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 248
        }
      },
      "docs": []
    }
  },
  {
    "id": 248,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          249,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 249,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 11,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 250,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 251
        }
      },
      "docs": []
    }
  },
  {
    "id": 251,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          252,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 252,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 12,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 253,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 254
        }
      },
      "docs": []
    }
  },
  {
    "id": 254,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          255,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 255,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 13,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 256,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 257
        }
      },
      "docs": []
    }
  },
  {
    "id": 257,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          258,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 258,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 14,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 259,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 260
        }
      },
      "docs": []
    }
  },
  {
    "id": 260,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          79,
          261,
          214
        ]
      },
      "docs": []
    }
  },
  {
    "id": 261,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 15,
          "type": 217
        }
      },
      "docs": []
    }
  },
  {
    "id": 262,
    "type": {
      "path": [
        "sp_npos_elections",
        "ElectionScore"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "minimal_stake",
              "type": 6,
              "typeName": "ExtendedBalance",
              "docs": []
            },
            {
              "name": "sum_stake",
              "type": 6,
              "typeName": "ExtendedBalance",
              "docs": []
            },
            {
              "name": "sum_stake_squared",
              "type": 6,
              "typeName": "ExtendedBalance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 263,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "SolutionOrSnapshotSize"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "voters",
              "type": 79,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "targets",
              "type": 79,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 264,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 262
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 262,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 265,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 266
        }
      },
      "docs": []
    }
  },
  {
    "id": 266,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          267
        ]
      },
      "docs": []
    }
  },
  {
    "id": 267,
    "type": {
      "path": [
        "sp_npos_elections",
        "Support"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "total",
              "type": 6,
              "typeName": "ExtendedBalance",
              "docs": []
            },
            {
              "name": "voters",
              "type": 268,
              "typeName": "Vec<(AccountId, ExtendedBalance)>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 268,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 269
        }
      },
      "docs": []
    }
  },
  {
    "id": 269,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 270,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 271,
    "type": {
      "path": [
        "pallet_bags_list",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "rebag",
              "fields": [
                {
                  "name": "dislocated",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::rebag`]."
              ]
            },
            {
              "name": "put_in_front_of",
              "fields": [
                {
                  "name": "lighter",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::put_in_front_of`]."
              ]
            },
            {
              "name": "put_in_front_of_other",
              "fields": [
                {
                  "name": "heavier",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "lighter",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::put_in_front_of_other`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 272,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "join",
              "fields": [
                {
                  "name": "amount",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::join`]."
              ]
            },
            {
              "name": "bond_extra",
              "fields": [
                {
                  "name": "extra",
                  "type": 273,
                  "typeName": "BondExtra<BalanceOf<T>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::bond_extra`]."
              ]
            },
            {
              "name": "claim_payout",
              "fields": [],
              "index": 2,
              "docs": [
                "See [`Pallet::claim_payout`]."
              ]
            },
            {
              "name": "unbond",
              "fields": [
                {
                  "name": "member_account",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "unbonding_points",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::unbond`]."
              ]
            },
            {
              "name": "pool_withdraw_unbonded",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::pool_withdraw_unbonded`]."
              ]
            },
            {
              "name": "withdraw_unbonded",
              "fields": [
                {
                  "name": "member_account",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "num_slashing_spans",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::withdraw_unbonded`]."
              ]
            },
            {
              "name": "create",
              "fields": [
                {
                  "name": "amount",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "root",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "nominator",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "bouncer",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::create`]."
              ]
            },
            {
              "name": "create_with_pool_id",
              "fields": [
                {
                  "name": "amount",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "root",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "nominator",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "bouncer",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::create_with_pool_id`]."
              ]
            },
            {
              "name": "nominate",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "validators",
                  "type": 92,
                  "typeName": "Vec<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::nominate`]."
              ]
            },
            {
              "name": "set_state",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "state",
                  "type": 274,
                  "typeName": "PoolState",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::set_state`]."
              ]
            },
            {
              "name": "set_metadata",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "metadata",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::set_metadata`]."
              ]
            },
            {
              "name": "set_configs",
              "fields": [
                {
                  "name": "min_join_bond",
                  "type": 275,
                  "typeName": "ConfigOp<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "min_create_bond",
                  "type": 275,
                  "typeName": "ConfigOp<BalanceOf<T>>",
                  "docs": []
                },
                {
                  "name": "max_pools",
                  "type": 276,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "max_members",
                  "type": 276,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "max_members_per_pool",
                  "type": 276,
                  "typeName": "ConfigOp<u32>",
                  "docs": []
                },
                {
                  "name": "global_max_commission",
                  "type": 277,
                  "typeName": "ConfigOp<Perbill>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::set_configs`]."
              ]
            },
            {
              "name": "update_roles",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "new_root",
                  "type": 278,
                  "typeName": "ConfigOp<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "new_nominator",
                  "type": 278,
                  "typeName": "ConfigOp<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "new_bouncer",
                  "type": 278,
                  "typeName": "ConfigOp<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::update_roles`]."
              ]
            },
            {
              "name": "chill",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::chill`]."
              ]
            },
            {
              "name": "bond_extra_other",
              "fields": [
                {
                  "name": "member",
                  "type": 88,
                  "typeName": "AccountIdLookupOf<T>",
                  "docs": []
                },
                {
                  "name": "extra",
                  "type": 273,
                  "typeName": "BondExtra<BalanceOf<T>>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::bond_extra_other`]."
              ]
            },
            {
              "name": "set_claim_permission",
              "fields": [
                {
                  "name": "permission",
                  "type": 279,
                  "typeName": "ClaimPermission",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::set_claim_permission`]."
              ]
            },
            {
              "name": "claim_payout_other",
              "fields": [
                {
                  "name": "other",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "See [`Pallet::claim_payout_other`]."
              ]
            },
            {
              "name": "set_commission",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "new_commission",
                  "type": 280,
                  "typeName": "Option<(Perbill, T::AccountId)>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "See [`Pallet::set_commission`]."
              ]
            },
            {
              "name": "set_commission_max",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "max_commission",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::set_commission_max`]."
              ]
            },
            {
              "name": "set_commission_change_rate",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "change_rate",
                  "type": 282,
                  "typeName": "CommissionChangeRate<BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::set_commission_change_rate`]."
              ]
            },
            {
              "name": "claim_commission",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "See [`Pallet::claim_commission`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 273,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "BondExtra"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "FreeBalance",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Rewards",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 274,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "PoolState"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Open",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Blocked",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Destroying",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 275,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 276,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 277,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 41
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 41,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 278,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ConfigOp"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Noop",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Set",
              "fields": [
                {
                  "name": null,
                  "type": 0,
                  "typeName": "T",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Remove",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 279,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "ClaimPermission"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Permissioned",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "PermissionlessCompound",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "PermissionlessWithdraw",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "PermissionlessAll",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 280,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 281
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 281,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 281,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          41,
          0
        ]
      },
      "docs": []
    }
  },
  {
    "id": 282,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "CommissionChangeRate"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "max_increase",
              "type": 41,
              "typeName": "Perbill",
              "docs": []
            },
            {
              "name": "min_delay",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 283,
    "type": {
      "path": [
        "pallet_fast_unstake",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "register_fast_unstake",
              "fields": [],
              "index": 0,
              "docs": [
                "See [`Pallet::register_fast_unstake`]."
              ]
            },
            {
              "name": "deregister",
              "fields": [],
              "index": 1,
              "docs": [
                "See [`Pallet::deregister`]."
              ]
            },
            {
              "name": "control",
              "fields": [
                {
                  "name": "eras_to_check",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::control`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 284,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "configuration",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "set_validation_upgrade_cooldown",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::set_validation_upgrade_cooldown`]."
              ]
            },
            {
              "name": "set_validation_upgrade_delay",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::set_validation_upgrade_delay`]."
              ]
            },
            {
              "name": "set_code_retention_period",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::set_code_retention_period`]."
              ]
            },
            {
              "name": "set_max_code_size",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::set_max_code_size`]."
              ]
            },
            {
              "name": "set_max_pov_size",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::set_max_pov_size`]."
              ]
            },
            {
              "name": "set_max_head_data_size",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::set_max_head_data_size`]."
              ]
            },
            {
              "name": "set_on_demand_cores",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::set_on_demand_cores`]."
              ]
            },
            {
              "name": "set_on_demand_retries",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::set_on_demand_retries`]."
              ]
            },
            {
              "name": "set_group_rotation_frequency",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::set_group_rotation_frequency`]."
              ]
            },
            {
              "name": "set_paras_availability_period",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::set_paras_availability_period`]."
              ]
            },
            {
              "name": "set_scheduling_lookahead",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "See [`Pallet::set_scheduling_lookahead`]."
              ]
            },
            {
              "name": "set_max_validators_per_core",
              "fields": [
                {
                  "name": "new",
                  "type": 270,
                  "typeName": "Option<u32>",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "See [`Pallet::set_max_validators_per_core`]."
              ]
            },
            {
              "name": "set_max_validators",
              "fields": [
                {
                  "name": "new",
                  "type": 270,
                  "typeName": "Option<u32>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "See [`Pallet::set_max_validators`]."
              ]
            },
            {
              "name": "set_dispute_period",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "SessionIndex",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "See [`Pallet::set_dispute_period`]."
              ]
            },
            {
              "name": "set_dispute_post_conclusion_acceptance_period",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "See [`Pallet::set_dispute_post_conclusion_acceptance_period`]."
              ]
            },
            {
              "name": "set_no_show_slots",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "See [`Pallet::set_no_show_slots`]."
              ]
            },
            {
              "name": "set_n_delay_tranches",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "See [`Pallet::set_n_delay_tranches`]."
              ]
            },
            {
              "name": "set_zeroth_delay_tranche_width",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "See [`Pallet::set_zeroth_delay_tranche_width`]."
              ]
            },
            {
              "name": "set_needed_approvals",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "See [`Pallet::set_needed_approvals`]."
              ]
            },
            {
              "name": "set_relay_vrf_modulo_samples",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "See [`Pallet::set_relay_vrf_modulo_samples`]."
              ]
            },
            {
              "name": "set_max_upward_queue_count",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": [
                "See [`Pallet::set_max_upward_queue_count`]."
              ]
            },
            {
              "name": "set_max_upward_queue_size",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": [
                "See [`Pallet::set_max_upward_queue_size`]."
              ]
            },
            {
              "name": "set_max_downward_message_size",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": [
                "See [`Pallet::set_max_downward_message_size`]."
              ]
            },
            {
              "name": "set_max_upward_message_size",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 27,
              "docs": [
                "See [`Pallet::set_max_upward_message_size`]."
              ]
            },
            {
              "name": "set_max_upward_message_num_per_candidate",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": [
                "See [`Pallet::set_max_upward_message_num_per_candidate`]."
              ]
            },
            {
              "name": "set_hrmp_open_request_ttl",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": [
                "See [`Pallet::set_hrmp_open_request_ttl`]."
              ]
            },
            {
              "name": "set_hrmp_sender_deposit",
              "fields": [
                {
                  "name": "new",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": [
                "See [`Pallet::set_hrmp_sender_deposit`]."
              ]
            },
            {
              "name": "set_hrmp_recipient_deposit",
              "fields": [
                {
                  "name": "new",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": [
                "See [`Pallet::set_hrmp_recipient_deposit`]."
              ]
            },
            {
              "name": "set_hrmp_channel_max_capacity",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 32,
              "docs": [
                "See [`Pallet::set_hrmp_channel_max_capacity`]."
              ]
            },
            {
              "name": "set_hrmp_channel_max_total_size",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 33,
              "docs": [
                "See [`Pallet::set_hrmp_channel_max_total_size`]."
              ]
            },
            {
              "name": "set_hrmp_max_parachain_inbound_channels",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": [
                "See [`Pallet::set_hrmp_max_parachain_inbound_channels`]."
              ]
            },
            {
              "name": "set_hrmp_channel_max_message_size",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 36,
              "docs": [
                "See [`Pallet::set_hrmp_channel_max_message_size`]."
              ]
            },
            {
              "name": "set_hrmp_max_parachain_outbound_channels",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": [
                "See [`Pallet::set_hrmp_max_parachain_outbound_channels`]."
              ]
            },
            {
              "name": "set_hrmp_max_message_num_per_candidate",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 39,
              "docs": [
                "See [`Pallet::set_hrmp_max_message_num_per_candidate`]."
              ]
            },
            {
              "name": "set_pvf_voting_ttl",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "SessionIndex",
                  "docs": []
                }
              ],
              "index": 42,
              "docs": [
                "See [`Pallet::set_pvf_voting_ttl`]."
              ]
            },
            {
              "name": "set_minimum_validation_upgrade_delay",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 43,
              "docs": [
                "See [`Pallet::set_minimum_validation_upgrade_delay`]."
              ]
            },
            {
              "name": "set_bypass_consistency_check",
              "fields": [
                {
                  "name": "new",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 44,
              "docs": [
                "See [`Pallet::set_bypass_consistency_check`]."
              ]
            },
            {
              "name": "set_async_backing_params",
              "fields": [
                {
                  "name": "new",
                  "type": 285,
                  "typeName": "AsyncBackingParams",
                  "docs": []
                }
              ],
              "index": 45,
              "docs": [
                "See [`Pallet::set_async_backing_params`]."
              ]
            },
            {
              "name": "set_executor_params",
              "fields": [
                {
                  "name": "new",
                  "type": 286,
                  "typeName": "ExecutorParams",
                  "docs": []
                }
              ],
              "index": 46,
              "docs": [
                "See [`Pallet::set_executor_params`]."
              ]
            },
            {
              "name": "set_on_demand_base_fee",
              "fields": [
                {
                  "name": "new",
                  "type": 6,
                  "typeName": "Balance",
                  "docs": []
                }
              ],
              "index": 47,
              "docs": [
                "See [`Pallet::set_on_demand_base_fee`]."
              ]
            },
            {
              "name": "set_on_demand_fee_variability",
              "fields": [
                {
                  "name": "new",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 48,
              "docs": [
                "See [`Pallet::set_on_demand_fee_variability`]."
              ]
            },
            {
              "name": "set_on_demand_queue_max_size",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 49,
              "docs": [
                "See [`Pallet::set_on_demand_queue_max_size`]."
              ]
            },
            {
              "name": "set_on_demand_target_queue_utilization",
              "fields": [
                {
                  "name": "new",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 50,
              "docs": [
                "See [`Pallet::set_on_demand_target_queue_utilization`]."
              ]
            },
            {
              "name": "set_on_demand_ttl",
              "fields": [
                {
                  "name": "new",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 51,
              "docs": [
                "See [`Pallet::set_on_demand_ttl`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 285,
    "type": {
      "path": [
        "polkadot_primitives",
        "vstaging",
        "AsyncBackingParams"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "max_candidate_depth",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "allowed_ancestry_len",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 286,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "executor_params",
        "ExecutorParams"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 287,
              "typeName": "Vec<ExecutorParam>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 287,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 288
        }
      },
      "docs": []
    }
  },
  {
    "id": 288,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "executor_params",
        "ExecutorParam"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "MaxMemoryPages",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "StackLogicalMax",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "StackNativeMax",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "PrecheckingMaxMemory",
              "fields": [
                {
                  "name": null,
                  "type": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "PvfPrepTimeout",
              "fields": [
                {
                  "name": null,
                  "type": 289,
                  "typeName": "PvfPrepTimeoutKind",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "PvfExecTimeout",
              "fields": [
                {
                  "name": null,
                  "type": 290,
                  "typeName": "PvfExecTimeoutKind",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "WasmExtBulkMemory",
              "fields": [],
              "index": 7,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 289,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "PvfPrepTimeoutKind"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Precheck",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Lenient",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 290,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "PvfExecTimeoutKind"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Backing",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Approval",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 291,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "shared",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": []
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 292,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "inclusion",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": []
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 293,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras_inherent",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "enter",
              "fields": [
                {
                  "name": "data",
                  "type": 294,
                  "typeName": "ParachainsInherentData<HeaderFor<T>>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::enter`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 294,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "InherentData"
      ],
      "params": [
        {
          "name": "HDR",
          "type": 78
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "bitfields",
              "type": 295,
              "typeName": "UncheckedSignedAvailabilityBitfields",
              "docs": []
            },
            {
              "name": "backed_candidates",
              "type": 302,
              "typeName": "Vec<BackedCandidate<HDR::Hash>>",
              "docs": []
            },
            {
              "name": "disputes",
              "type": 319,
              "typeName": "MultiDisputeStatementSet",
              "docs": []
            },
            {
              "name": "parent_header",
              "type": 78,
              "typeName": "HDR",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 295,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 296
        }
      },
      "docs": []
    }
  },
  {
    "id": 296,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "signed",
        "UncheckedSigned"
      ],
      "params": [
        {
          "name": "Payload",
          "type": 297
        },
        {
          "name": "RealPayload",
          "type": 297
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "payload",
              "type": 297,
              "typeName": "Payload",
              "docs": []
            },
            {
              "name": "validator_index",
              "type": 300,
              "typeName": "ValidatorIndex",
              "docs": []
            },
            {
              "name": "signature",
              "type": 301,
              "typeName": "ValidatorSignature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 297,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "AvailabilityBitfield"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 298,
              "typeName": "BitVec<u8, bitvec::order::Lsb0>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 298,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "bitSequence": {
          "bitStoreType": 2,
          "bitOrderType": 299
        }
      },
      "docs": []
    }
  },
  {
    "id": 299,
    "type": {
      "path": [
        "bitvec",
        "order",
        "Lsb0"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 300,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "ValidatorIndex"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 301,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "validator_app",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 122,
              "typeName": "sr25519::Signature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 302,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 303
        }
      },
      "docs": []
    }
  },
  {
    "id": 303,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "BackedCandidate"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "candidate",
              "type": 304,
              "typeName": "CommittedCandidateReceipt<H>",
              "docs": []
            },
            {
              "name": "validity_votes",
              "type": 317,
              "typeName": "Vec<ValidityAttestation>",
              "docs": []
            },
            {
              "name": "validator_indices",
              "type": 298,
              "typeName": "BitVec<u8, bitvec::order::Lsb0>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 304,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "CommittedCandidateReceipt"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "descriptor",
              "type": 305,
              "typeName": "CandidateDescriptor<H>",
              "docs": []
            },
            {
              "name": "commitments",
              "type": 309,
              "typeName": "CandidateCommitments",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 305,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "CandidateDescriptor"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "para_id",
              "type": 134,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "relay_parent",
              "type": 12,
              "typeName": "H",
              "docs": []
            },
            {
              "name": "collator",
              "type": 306,
              "typeName": "CollatorId",
              "docs": []
            },
            {
              "name": "persisted_validation_data_hash",
              "type": 12,
              "typeName": "Hash",
              "docs": []
            },
            {
              "name": "pov_hash",
              "type": 12,
              "typeName": "Hash",
              "docs": []
            },
            {
              "name": "erasure_root",
              "type": 12,
              "typeName": "Hash",
              "docs": []
            },
            {
              "name": "signature",
              "type": 307,
              "typeName": "CollatorSignature",
              "docs": []
            },
            {
              "name": "para_head",
              "type": 12,
              "typeName": "Hash",
              "docs": []
            },
            {
              "name": "validation_code_hash",
              "type": 308,
              "typeName": "ValidationCodeHash",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 306,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "collator_app",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 56,
              "typeName": "sr25519::Public",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 307,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "collator_app",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 122,
              "typeName": "sr25519::Signature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 308,
    "type": {
      "path": [
        "polkadot_parachain",
        "primitives",
        "ValidationCodeHash"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 12,
              "typeName": "Hash",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 309,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "CandidateCommitments"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "upward_messages",
              "type": 310,
              "typeName": "UpwardMessages",
              "docs": []
            },
            {
              "name": "horizontal_messages",
              "type": 311,
              "typeName": "HorizontalMessages",
              "docs": []
            },
            {
              "name": "new_validation_code",
              "type": 314,
              "typeName": "Option<ValidationCode>",
              "docs": []
            },
            {
              "name": "head_data",
              "type": 316,
              "typeName": "HeadData",
              "docs": []
            },
            {
              "name": "processed_downward_messages",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "hrmp_watermark",
              "type": 4,
              "typeName": "N",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 310,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 13
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 72,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 311,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 312
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 313,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 312,
    "type": {
      "path": [
        "polkadot_core_primitives",
        "OutboundHrmpMessage"
      ],
      "params": [
        {
          "name": "Id",
          "type": 134
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "recipient",
              "type": 134,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "data",
              "type": 13,
              "typeName": "sp_std::vec::Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 313,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 312
        }
      },
      "docs": []
    }
  },
  {
    "id": 314,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 315
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 315,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 315,
    "type": {
      "path": [
        "polkadot_parachain",
        "primitives",
        "ValidationCode"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 316,
    "type": {
      "path": [
        "polkadot_parachain",
        "primitives",
        "HeadData"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 317,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 318
        }
      },
      "docs": []
    }
  },
  {
    "id": 318,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "ValidityAttestation"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Implicit",
              "fields": [
                {
                  "name": null,
                  "type": 301,
                  "typeName": "ValidatorSignature",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Explicit",
              "fields": [
                {
                  "name": null,
                  "type": 301,
                  "typeName": "ValidatorSignature",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 319,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 320
        }
      },
      "docs": []
    }
  },
  {
    "id": 320,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "DisputeStatementSet"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "candidate_hash",
              "type": 321,
              "typeName": "CandidateHash",
              "docs": []
            },
            {
              "name": "session",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "statements",
              "type": 322,
              "typeName": "Vec<(DisputeStatement, ValidatorIndex, ValidatorSignature)>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 321,
    "type": {
      "path": [
        "polkadot_core_primitives",
        "CandidateHash"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 12,
              "typeName": "Hash",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 322,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 323
        }
      },
      "docs": []
    }
  },
  {
    "id": 323,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          324,
          300,
          301
        ]
      },
      "docs": []
    }
  },
  {
    "id": 324,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "DisputeStatement"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Valid",
              "fields": [
                {
                  "name": null,
                  "type": 325,
                  "typeName": "ValidDisputeStatementKind",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Invalid",
              "fields": [
                {
                  "name": null,
                  "type": 326,
                  "typeName": "InvalidDisputeStatementKind",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 325,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "ValidDisputeStatementKind"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Explicit",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "BackingSeconded",
              "fields": [
                {
                  "name": null,
                  "type": 12,
                  "typeName": "Hash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "BackingValid",
              "fields": [
                {
                  "name": null,
                  "type": 12,
                  "typeName": "Hash",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "ApprovalChecking",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 326,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "InvalidDisputeStatementKind"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Explicit",
              "fields": [],
              "index": 0,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 327,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "force_set_current_code",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "new_code",
                  "type": 315,
                  "typeName": "ValidationCode",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::force_set_current_code`]."
              ]
            },
            {
              "name": "force_set_current_head",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "new_head",
                  "type": 316,
                  "typeName": "HeadData",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::force_set_current_head`]."
              ]
            },
            {
              "name": "force_schedule_code_upgrade",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "new_code",
                  "type": 315,
                  "typeName": "ValidationCode",
                  "docs": []
                },
                {
                  "name": "relay_parent_number",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::force_schedule_code_upgrade`]."
              ]
            },
            {
              "name": "force_note_new_head",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "new_head",
                  "type": 316,
                  "typeName": "HeadData",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::force_note_new_head`]."
              ]
            },
            {
              "name": "force_queue_action",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::force_queue_action`]."
              ]
            },
            {
              "name": "add_trusted_validation_code",
              "fields": [
                {
                  "name": "validation_code",
                  "type": 315,
                  "typeName": "ValidationCode",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::add_trusted_validation_code`]."
              ]
            },
            {
              "name": "poke_unused_validation_code",
              "fields": [
                {
                  "name": "validation_code_hash",
                  "type": 308,
                  "typeName": "ValidationCodeHash",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::poke_unused_validation_code`]."
              ]
            },
            {
              "name": "include_pvf_check_statement",
              "fields": [
                {
                  "name": "stmt",
                  "type": 328,
                  "typeName": "PvfCheckStatement",
                  "docs": []
                },
                {
                  "name": "signature",
                  "type": 301,
                  "typeName": "ValidatorSignature",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::include_pvf_check_statement`]."
              ]
            },
            {
              "name": "force_set_most_recent_context",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "context",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::force_set_most_recent_context`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 328,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "PvfCheckStatement"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "accept",
              "type": 44,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "subject",
              "type": 308,
              "typeName": "ValidationCodeHash",
              "docs": []
            },
            {
              "name": "session_index",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "validator_index",
              "type": 300,
              "typeName": "ValidatorIndex",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 329,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "initializer",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "force_approve",
              "fields": [
                {
                  "name": "up_to",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::force_approve`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 330,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "hrmp",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "hrmp_init_open_channel",
              "fields": [
                {
                  "name": "recipient",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "proposed_max_capacity",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "proposed_max_message_size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::hrmp_init_open_channel`]."
              ]
            },
            {
              "name": "hrmp_accept_open_channel",
              "fields": [
                {
                  "name": "sender",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::hrmp_accept_open_channel`]."
              ]
            },
            {
              "name": "hrmp_close_channel",
              "fields": [
                {
                  "name": "channel_id",
                  "type": 331,
                  "typeName": "HrmpChannelId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::hrmp_close_channel`]."
              ]
            },
            {
              "name": "force_clean_hrmp",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "inbound",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "outbound",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::force_clean_hrmp`]."
              ]
            },
            {
              "name": "force_process_hrmp_open",
              "fields": [
                {
                  "name": "channels",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::force_process_hrmp_open`]."
              ]
            },
            {
              "name": "force_process_hrmp_close",
              "fields": [
                {
                  "name": "channels",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::force_process_hrmp_close`]."
              ]
            },
            {
              "name": "hrmp_cancel_open_request",
              "fields": [
                {
                  "name": "channel_id",
                  "type": 331,
                  "typeName": "HrmpChannelId",
                  "docs": []
                },
                {
                  "name": "open_requests",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::hrmp_cancel_open_request`]."
              ]
            },
            {
              "name": "force_open_hrmp_channel",
              "fields": [
                {
                  "name": "sender",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "recipient",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "max_capacity",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_message_size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::force_open_hrmp_channel`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 331,
    "type": {
      "path": [
        "polkadot_parachain",
        "primitives",
        "HrmpChannelId"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "sender",
              "type": 134,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "recipient",
              "type": 134,
              "typeName": "Id",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 332,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "disputes",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "force_unfreeze",
              "fields": [],
              "index": 0,
              "docs": [
                "See [`Pallet::force_unfreeze`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 333,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "disputes",
        "slashing",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "report_dispute_lost_unsigned",
              "fields": [
                {
                  "name": "dispute_proof",
                  "type": 334,
                  "typeName": "Box<DisputeProof>",
                  "docs": []
                },
                {
                  "name": "key_owner_proof",
                  "type": 82,
                  "typeName": "T::KeyOwnerProof",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::report_dispute_lost_unsigned`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 334,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "slashing",
        "DisputeProof"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "time_slot",
              "type": 335,
              "typeName": "DisputesTimeSlot",
              "docs": []
            },
            {
              "name": "kind",
              "type": 336,
              "typeName": "SlashingOffenceKind",
              "docs": []
            },
            {
              "name": "validator_index",
              "type": 300,
              "typeName": "ValidatorIndex",
              "docs": []
            },
            {
              "name": "validator_id",
              "type": 104,
              "typeName": "ValidatorId",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 335,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "slashing",
        "DisputesTimeSlot"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "session_index",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "candidate_hash",
              "type": 321,
              "typeName": "CandidateHash",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 336,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "slashing",
        "SlashingOffenceKind"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ForInvalid",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "AgainstValid",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 337,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "paras_registrar",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "register",
              "fields": [
                {
                  "name": "id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "genesis_head",
                  "type": 316,
                  "typeName": "HeadData",
                  "docs": []
                },
                {
                  "name": "validation_code",
                  "type": 315,
                  "typeName": "ValidationCode",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::register`]."
              ]
            },
            {
              "name": "force_register",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "genesis_head",
                  "type": 316,
                  "typeName": "HeadData",
                  "docs": []
                },
                {
                  "name": "validation_code",
                  "type": 315,
                  "typeName": "ValidationCode",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::force_register`]."
              ]
            },
            {
              "name": "deregister",
              "fields": [
                {
                  "name": "id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::deregister`]."
              ]
            },
            {
              "name": "swap",
              "fields": [
                {
                  "name": "id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "other",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::swap`]."
              ]
            },
            {
              "name": "remove_lock",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::remove_lock`]."
              ]
            },
            {
              "name": "reserve",
              "fields": [],
              "index": 5,
              "docs": [
                "See [`Pallet::reserve`]."
              ]
            },
            {
              "name": "add_lock",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::add_lock`]."
              ]
            },
            {
              "name": "schedule_code_upgrade",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "new_code",
                  "type": 315,
                  "typeName": "ValidationCode",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::schedule_code_upgrade`]."
              ]
            },
            {
              "name": "set_current_head",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "new_head",
                  "type": 316,
                  "typeName": "HeadData",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::set_current_head`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 338,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "slots",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "force_lease",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "leaser",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "period_begin",
                  "type": 4,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "period_count",
                  "type": 4,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::force_lease`]."
              ]
            },
            {
              "name": "clear_all_leases",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::clear_all_leases`]."
              ]
            },
            {
              "name": "trigger_onboard",
              "fields": [
                {
                  "name": "para",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::trigger_onboard`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 339,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "auctions",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "new_auction",
              "fields": [
                {
                  "name": "duration",
                  "type": 79,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "lease_period_index",
                  "type": 79,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::new_auction`]."
              ]
            },
            {
              "name": "bid",
              "fields": [
                {
                  "name": "para",
                  "type": 340,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "auction_index",
                  "type": 79,
                  "typeName": "AuctionIndex",
                  "docs": []
                },
                {
                  "name": "first_slot",
                  "type": 79,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "last_slot",
                  "type": 79,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::bid`]."
              ]
            },
            {
              "name": "cancel_auction",
              "fields": [],
              "index": 2,
              "docs": [
                "See [`Pallet::cancel_auction`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 340,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "compact": {
          "type": 134
        }
      },
      "docs": []
    }
  },
  {
    "id": 341,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "crowdloan",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "create",
              "fields": [
                {
                  "name": "index",
                  "type": 340,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "cap",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "first_period",
                  "type": 79,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "last_period",
                  "type": 79,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "end",
                  "type": 79,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "verifier",
                  "type": 342,
                  "typeName": "Option<MultiSigner>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::create`]."
              ]
            },
            {
              "name": "contribute",
              "fields": [
                {
                  "name": "index",
                  "type": 340,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "signature",
                  "type": 346,
                  "typeName": "Option<MultiSignature>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::contribute`]."
              ]
            },
            {
              "name": "withdraw",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 340,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::withdraw`]."
              ]
            },
            {
              "name": "refund",
              "fields": [
                {
                  "name": "index",
                  "type": 340,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::refund`]."
              ]
            },
            {
              "name": "dissolve",
              "fields": [
                {
                  "name": "index",
                  "type": 340,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::dissolve`]."
              ]
            },
            {
              "name": "edit",
              "fields": [
                {
                  "name": "index",
                  "type": 340,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "cap",
                  "type": 60,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "first_period",
                  "type": 79,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "last_period",
                  "type": 79,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "end",
                  "type": 79,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                },
                {
                  "name": "verifier",
                  "type": 342,
                  "typeName": "Option<MultiSigner>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::edit`]."
              ]
            },
            {
              "name": "add_memo",
              "fields": [
                {
                  "name": "index",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "memo",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::add_memo`]."
              ]
            },
            {
              "name": "poke",
              "fields": [
                {
                  "name": "index",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::poke`]."
              ]
            },
            {
              "name": "contribute_all",
              "fields": [
                {
                  "name": "index",
                  "type": 340,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "signature",
                  "type": 346,
                  "typeName": "Option<MultiSignature>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::contribute_all`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 342,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 343
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 343,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 343,
    "type": {
      "path": [
        "sp_runtime",
        "MultiSigner"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ed25519",
              "fields": [
                {
                  "name": null,
                  "type": 53,
                  "typeName": "ed25519::Public",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Sr25519",
              "fields": [
                {
                  "name": null,
                  "type": 56,
                  "typeName": "sr25519::Public",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Ecdsa",
              "fields": [
                {
                  "name": null,
                  "type": 344,
                  "typeName": "ecdsa::Public",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 344,
    "type": {
      "path": [
        "sp_core",
        "ecdsa",
        "Public"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 345,
              "typeName": "[u8; 33]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 345,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 33,
          "type": 2
        }
      },
      "docs": []
    }
  },
  {
    "id": 346,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 347
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 347,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 347,
    "type": {
      "path": [
        "sp_runtime",
        "MultiSignature"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ed25519",
              "fields": [
                {
                  "name": null,
                  "type": 113,
                  "typeName": "ed25519::Signature",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Sr25519",
              "fields": [
                {
                  "name": null,
                  "type": 122,
                  "typeName": "sr25519::Signature",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Ecdsa",
              "fields": [
                {
                  "name": null,
                  "type": 348,
                  "typeName": "ecdsa::Signature",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 348,
    "type": {
      "path": [
        "sp_core",
        "ecdsa",
        "Signature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 149,
              "typeName": "[u8; 65]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 349,
    "type": {
      "path": [
        "pallet_xcm",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "send",
              "fields": [
                {
                  "name": "dest",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "message",
                  "type": 358,
                  "typeName": "Box<VersionedXcm<()>>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::send`]."
              ]
            },
            {
              "name": "teleport_assets",
              "fields": [
                {
                  "name": "dest",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 403,
                  "typeName": "Box<VersionedMultiAssets>",
                  "docs": []
                },
                {
                  "name": "fee_asset_item",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::teleport_assets`]."
              ]
            },
            {
              "name": "reserve_transfer_assets",
              "fields": [
                {
                  "name": "dest",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 403,
                  "typeName": "Box<VersionedMultiAssets>",
                  "docs": []
                },
                {
                  "name": "fee_asset_item",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "See [`Pallet::reserve_transfer_assets`]."
              ]
            },
            {
              "name": "execute",
              "fields": [
                {
                  "name": "message",
                  "type": 404,
                  "typeName": "Box<VersionedXcm<<T as SysConfig>::RuntimeCall>>",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "See [`Pallet::execute`]."
              ]
            },
            {
              "name": "force_xcm_version",
              "fields": [
                {
                  "name": "location",
                  "type": 136,
                  "typeName": "Box<MultiLocation>",
                  "docs": []
                },
                {
                  "name": "version",
                  "type": 4,
                  "typeName": "XcmVersion",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "See [`Pallet::force_xcm_version`]."
              ]
            },
            {
              "name": "force_default_xcm_version",
              "fields": [
                {
                  "name": "maybe_xcm_version",
                  "type": 270,
                  "typeName": "Option<XcmVersion>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "See [`Pallet::force_default_xcm_version`]."
              ]
            },
            {
              "name": "force_subscribe_version_notify",
              "fields": [
                {
                  "name": "location",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "See [`Pallet::force_subscribe_version_notify`]."
              ]
            },
            {
              "name": "force_unsubscribe_version_notify",
              "fields": [
                {
                  "name": "location",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "See [`Pallet::force_unsubscribe_version_notify`]."
              ]
            },
            {
              "name": "limited_reserve_transfer_assets",
              "fields": [
                {
                  "name": "dest",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 403,
                  "typeName": "Box<VersionedMultiAssets>",
                  "docs": []
                },
                {
                  "name": "fee_asset_item",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "weight_limit",
                  "type": 402,
                  "typeName": "WeightLimit",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "See [`Pallet::limited_reserve_transfer_assets`]."
              ]
            },
            {
              "name": "limited_teleport_assets",
              "fields": [
                {
                  "name": "dest",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 350,
                  "typeName": "Box<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 403,
                  "typeName": "Box<VersionedMultiAssets>",
                  "docs": []
                },
                {
                  "name": "fee_asset_item",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "weight_limit",
                  "type": 402,
                  "typeName": "WeightLimit",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "See [`Pallet::limited_teleport_assets`]."
              ]
            },
            {
              "name": "force_suspension",
              "fields": [
                {
                  "name": "suspended",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "See [`Pallet::force_suspension`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 350,
    "type": {
      "path": [
        "xcm",
        "VersionedMultiLocation"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V2",
              "fields": [
                {
                  "name": null,
                  "type": 351,
                  "typeName": "v2::MultiLocation",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "V3",
              "fields": [
                {
                  "name": null,
                  "type": 136,
                  "typeName": "v3::MultiLocation",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 351,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multilocation",
        "MultiLocation"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "parents",
              "type": 2,
              "typeName": "u8",
              "docs": []
            },
            {
              "name": "interior",
              "type": 352,
              "typeName": "Junctions",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 352,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multilocation",
        "Junctions"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Here",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "X1",
              "fields": [
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "X2",
              "fields": [
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "X3",
              "fields": [
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "X4",
              "fields": [
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "X5",
              "fields": [
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "X6",
              "fields": [
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "X7",
              "fields": [
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "X8",
              "fields": [
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 353,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 353,
    "type": {
      "path": [
        "xcm",
        "v2",
        "junction",
        "Junction"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Parachain",
              "fields": [
                {
                  "name": null,
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "AccountId32",
              "fields": [
                {
                  "name": "network",
                  "type": 354,
                  "typeName": "NetworkId",
                  "docs": []
                },
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "AccountIndex64",
              "fields": [
                {
                  "name": "network",
                  "type": 354,
                  "typeName": "NetworkId",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "AccountKey20",
              "fields": [
                {
                  "name": "network",
                  "type": 354,
                  "typeName": "NetworkId",
                  "docs": []
                },
                {
                  "name": "key",
                  "type": 90,
                  "typeName": "[u8; 20]",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "PalletInstance",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "GeneralIndex",
              "fields": [
                {
                  "name": null,
                  "type": 60,
                  "typeName": "u128",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "GeneralKey",
              "fields": [
                {
                  "name": null,
                  "type": 355,
                  "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "OnlyChild",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "Plurality",
              "fields": [
                {
                  "name": "id",
                  "type": 356,
                  "typeName": "BodyId",
                  "docs": []
                },
                {
                  "name": "part",
                  "type": 357,
                  "typeName": "BodyPart",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 354,
    "type": {
      "path": [
        "xcm",
        "v2",
        "NetworkId"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Any",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Named",
              "fields": [
                {
                  "name": null,
                  "type": 355,
                  "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Polkadot",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Kusama",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 355,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 356,
    "type": {
      "path": [
        "xcm",
        "v2",
        "BodyId"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unit",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Named",
              "fields": [
                {
                  "name": null,
                  "type": 355,
                  "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Index",
              "fields": [
                {
                  "name": null,
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Executive",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "Technical",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "Legislative",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "Judicial",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "Defense",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "Administration",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "Treasury",
              "fields": [],
              "index": 9,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 357,
    "type": {
      "path": [
        "xcm",
        "v2",
        "BodyPart"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Voice",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Members",
              "fields": [
                {
                  "name": "count",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Fraction",
              "fields": [
                {
                  "name": "nom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "denom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "AtLeastProportion",
              "fields": [
                {
                  "name": "nom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "denom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "MoreThanProportion",
              "fields": [
                {
                  "name": "nom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "denom",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 358,
    "type": {
      "path": [
        "xcm",
        "VersionedXcm"
      ],
      "params": [
        {
          "name": "RuntimeCall",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V2",
              "fields": [
                {
                  "name": null,
                  "type": 359,
                  "typeName": "v2::Xcm<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "V3",
              "fields": [
                {
                  "name": null,
                  "type": 378,
                  "typeName": "v3::Xcm<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 359,
    "type": {
      "path": [
        "xcm",
        "v2",
        "Xcm"
      ],
      "params": [
        {
          "name": "RuntimeCall",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 360,
              "typeName": "Vec<Instruction<RuntimeCall>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 360,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 361
        }
      },
      "docs": []
    }
  },
  {
    "id": 361,
    "type": {
      "path": [
        "xcm",
        "v2",
        "Instruction"
      ],
      "params": [
        {
          "name": "RuntimeCall",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "WithdrawAsset",
              "fields": [
                {
                  "name": null,
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "ReserveAssetDeposited",
              "fields": [
                {
                  "name": null,
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "ReceiveTeleportedAsset",
              "fields": [
                {
                  "name": null,
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "QueryResponse",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "response",
                  "type": 368,
                  "typeName": "Response",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "TransferAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "TransferReserveAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 359,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Transact",
              "fields": [
                {
                  "name": "origin_type",
                  "type": 372,
                  "typeName": "OriginKind",
                  "docs": []
                },
                {
                  "name": "require_weight_at_most",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 373,
                  "typeName": "DoubleEncoded<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "HrmpNewChannelOpenRequest",
              "fields": [
                {
                  "name": "sender",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_message_size",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_capacity",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "HrmpChannelAccepted",
              "fields": [
                {
                  "name": "recipient",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "HrmpChannelClosing",
              "fields": [
                {
                  "name": "initiator",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "sender",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "recipient",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "ClearOrigin",
              "fields": [],
              "index": 10,
              "docs": []
            },
            {
              "name": "DescendOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 352,
                  "typeName": "InteriorMultiLocation",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "ReportError",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "max_response_weight",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "DepositAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "max_assets",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "DepositReserveAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "max_assets",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 359,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "ExchangeAsset",
              "fields": [
                {
                  "name": "give",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "receive",
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "InitiateReserveWithdraw",
              "fields": [
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "reserve",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 359,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "InitiateTeleport",
              "fields": [
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 359,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "QueryHolding",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "max_response_weight",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "BuyExecution",
              "fields": [
                {
                  "name": "fees",
                  "type": 364,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "weight_limit",
                  "type": 377,
                  "typeName": "WeightLimit",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "RefundSurplus",
              "fields": [],
              "index": 20,
              "docs": []
            },
            {
              "name": "SetErrorHandler",
              "fields": [
                {
                  "name": null,
                  "type": 359,
                  "typeName": "Xcm<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "SetAppendix",
              "fields": [
                {
                  "name": null,
                  "type": 359,
                  "typeName": "Xcm<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "ClearError",
              "fields": [],
              "index": 23,
              "docs": []
            },
            {
              "name": "ClaimAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "ticket",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Trap",
              "fields": [
                {
                  "name": null,
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "SubscribeVersion",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "max_response_weight",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "UnsubscribeVersion",
              "fields": [],
              "index": 27,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 362,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multiasset",
        "MultiAssets"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 363,
              "typeName": "Vec<MultiAsset>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 363,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 364
        }
      },
      "docs": []
    }
  },
  {
    "id": 364,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multiasset",
        "MultiAsset"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 365,
              "typeName": "AssetId",
              "docs": []
            },
            {
              "name": "fun",
              "type": 366,
              "typeName": "Fungibility",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 365,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multiasset",
        "AssetId"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Concrete",
              "fields": [
                {
                  "name": null,
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Abstract",
              "fields": [
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 366,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multiasset",
        "Fungibility"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Fungible",
              "fields": [
                {
                  "name": null,
                  "type": 60,
                  "typeName": "u128",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "NonFungible",
              "fields": [
                {
                  "name": null,
                  "type": 367,
                  "typeName": "AssetInstance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 367,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multiasset",
        "AssetInstance"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Undefined",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Index",
              "fields": [
                {
                  "name": null,
                  "type": 60,
                  "typeName": "u128",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Array4",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": "[u8; 4]",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Array8",
              "fields": [
                {
                  "name": null,
                  "type": 172,
                  "typeName": "[u8; 8]",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Array16",
              "fields": [
                {
                  "name": null,
                  "type": 47,
                  "typeName": "[u8; 16]",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Array32",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Blob",
              "fields": [
                {
                  "name": null,
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 368,
    "type": {
      "path": [
        "xcm",
        "v2",
        "Response"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Null",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Assets",
              "fields": [
                {
                  "name": null,
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "ExecutionResult",
              "fields": [
                {
                  "name": null,
                  "type": 369,
                  "typeName": "Option<(u32, Error)>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Version",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "super::Version",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 369,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 370
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 370,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 370,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          371
        ]
      },
      "docs": []
    }
  },
  {
    "id": 371,
    "type": {
      "path": [
        "xcm",
        "v2",
        "traits",
        "Error"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Overflow",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Unimplemented",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "UntrustedReserveLocation",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "UntrustedTeleportLocation",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "MultiLocationFull",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "MultiLocationNotInvertible",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "BadOrigin",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "InvalidLocation",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "AssetNotFound",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "FailedToTransactAsset",
              "fields": [],
              "index": 9,
              "docs": []
            },
            {
              "name": "NotWithdrawable",
              "fields": [],
              "index": 10,
              "docs": []
            },
            {
              "name": "LocationCannotHold",
              "fields": [],
              "index": 11,
              "docs": []
            },
            {
              "name": "ExceedsMaxMessageSize",
              "fields": [],
              "index": 12,
              "docs": []
            },
            {
              "name": "DestinationUnsupported",
              "fields": [],
              "index": 13,
              "docs": []
            },
            {
              "name": "Transport",
              "fields": [],
              "index": 14,
              "docs": []
            },
            {
              "name": "Unroutable",
              "fields": [],
              "index": 15,
              "docs": []
            },
            {
              "name": "UnknownClaim",
              "fields": [],
              "index": 16,
              "docs": []
            },
            {
              "name": "FailedToDecode",
              "fields": [],
              "index": 17,
              "docs": []
            },
            {
              "name": "MaxWeightInvalid",
              "fields": [],
              "index": 18,
              "docs": []
            },
            {
              "name": "NotHoldingFees",
              "fields": [],
              "index": 19,
              "docs": []
            },
            {
              "name": "TooExpensive",
              "fields": [],
              "index": 20,
              "docs": []
            },
            {
              "name": "Trap",
              "fields": [
                {
                  "name": null,
                  "type": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "UnhandledXcmVersion",
              "fields": [],
              "index": 22,
              "docs": []
            },
            {
              "name": "WeightLimitReached",
              "fields": [
                {
                  "name": null,
                  "type": 11,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Barrier",
              "fields": [],
              "index": 24,
              "docs": []
            },
            {
              "name": "WeightNotComputable",
              "fields": [],
              "index": 25,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 372,
    "type": {
      "path": [
        "xcm",
        "v2",
        "OriginKind"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Native",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "SovereignAccount",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Superuser",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Xcm",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 373,
    "type": {
      "path": [
        "xcm",
        "double_encoded",
        "DoubleEncoded"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "encoded",
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 374,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multiasset",
        "MultiAssetFilter"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Definite",
              "fields": [
                {
                  "name": null,
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Wild",
              "fields": [
                {
                  "name": null,
                  "type": 375,
                  "typeName": "WildMultiAsset",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 375,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multiasset",
        "WildMultiAsset"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "All",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "AllOf",
              "fields": [
                {
                  "name": "id",
                  "type": 365,
                  "typeName": "AssetId",
                  "docs": []
                },
                {
                  "name": "fun",
                  "type": 376,
                  "typeName": "WildFungibility",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 376,
    "type": {
      "path": [
        "xcm",
        "v2",
        "multiasset",
        "WildFungibility"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Fungible",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NonFungible",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 377,
    "type": {
      "path": [
        "xcm",
        "v2",
        "WeightLimit"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unlimited",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Limited",
              "fields": [
                {
                  "name": null,
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 378,
    "type": {
      "path": [
        "xcm",
        "v3",
        "Xcm"
      ],
      "params": [
        {
          "name": "Call",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 379,
              "typeName": "Vec<Instruction<Call>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 379,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 380
        }
      },
      "docs": []
    }
  },
  {
    "id": 380,
    "type": {
      "path": [
        "xcm",
        "v3",
        "Instruction"
      ],
      "params": [
        {
          "name": "Call",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "WithdrawAsset",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "ReserveAssetDeposited",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "ReceiveTeleportedAsset",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "QueryResponse",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "response",
                  "type": 387,
                  "typeName": "Response",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "querier",
                  "type": 397,
                  "typeName": "Option<MultiLocation>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "TransferAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "TransferReserveAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Transact",
              "fields": [
                {
                  "name": "origin_kind",
                  "type": 372,
                  "typeName": "OriginKind",
                  "docs": []
                },
                {
                  "name": "require_weight_at_most",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 373,
                  "typeName": "DoubleEncoded<Call>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "HrmpNewChannelOpenRequest",
              "fields": [
                {
                  "name": "sender",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_message_size",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_capacity",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "HrmpChannelAccepted",
              "fields": [
                {
                  "name": "recipient",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "HrmpChannelClosing",
              "fields": [
                {
                  "name": "initiator",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "sender",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "recipient",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "ClearOrigin",
              "fields": [],
              "index": 10,
              "docs": []
            },
            {
              "name": "DescendOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 137,
                  "typeName": "InteriorMultiLocation",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "ReportError",
              "fields": [
                {
                  "name": null,
                  "type": 398,
                  "typeName": "QueryResponseInfo",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "DepositAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "DepositReserveAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "ExchangeAsset",
              "fields": [
                {
                  "name": "give",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "want",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "maximal",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "InitiateReserveWithdraw",
              "fields": [
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "reserve",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "InitiateTeleport",
              "fields": [
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "ReportHolding",
              "fields": [
                {
                  "name": "response_info",
                  "type": 398,
                  "typeName": "QueryResponseInfo",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "BuyExecution",
              "fields": [
                {
                  "name": "fees",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "weight_limit",
                  "type": 402,
                  "typeName": "WeightLimit",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "RefundSurplus",
              "fields": [],
              "index": 20,
              "docs": []
            },
            {
              "name": "SetErrorHandler",
              "fields": [
                {
                  "name": null,
                  "type": 378,
                  "typeName": "Xcm<Call>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "SetAppendix",
              "fields": [
                {
                  "name": null,
                  "type": 378,
                  "typeName": "Xcm<Call>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "ClearError",
              "fields": [],
              "index": 23,
              "docs": []
            },
            {
              "name": "ClaimAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "ticket",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Trap",
              "fields": [
                {
                  "name": null,
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "SubscribeVersion",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "max_response_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "UnsubscribeVersion",
              "fields": [],
              "index": 27,
              "docs": []
            },
            {
              "name": "BurnAsset",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "ExpectAsset",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "ExpectOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 397,
                  "typeName": "Option<MultiLocation>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "ExpectError",
              "fields": [
                {
                  "name": null,
                  "type": 388,
                  "typeName": "Option<(u32, Error)>",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": []
            },
            {
              "name": "ExpectTransactStatus",
              "fields": [
                {
                  "name": null,
                  "type": 395,
                  "typeName": "MaybeErrorCode",
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "QueryPallet",
              "fields": [
                {
                  "name": "module_name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "response_info",
                  "type": 398,
                  "typeName": "QueryResponseInfo",
                  "docs": []
                }
              ],
              "index": 33,
              "docs": []
            },
            {
              "name": "ExpectPallet",
              "fields": [
                {
                  "name": "index",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "module_name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "crate_major",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "min_crate_minor",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "ReportTransactStatus",
              "fields": [
                {
                  "name": null,
                  "type": 398,
                  "typeName": "QueryResponseInfo",
                  "docs": []
                }
              ],
              "index": 35,
              "docs": []
            },
            {
              "name": "ClearTransactStatus",
              "fields": [],
              "index": 36,
              "docs": []
            },
            {
              "name": "UniversalOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            },
            {
              "name": "ExportMessage",
              "fields": [
                {
                  "name": "network",
                  "type": 140,
                  "typeName": "NetworkId",
                  "docs": []
                },
                {
                  "name": "destination",
                  "type": 137,
                  "typeName": "InteriorMultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 38,
              "docs": []
            },
            {
              "name": "LockAsset",
              "fields": [
                {
                  "name": "asset",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "unlocker",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 39,
              "docs": []
            },
            {
              "name": "UnlockAsset",
              "fields": [
                {
                  "name": "asset",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 40,
              "docs": []
            },
            {
              "name": "NoteUnlockable",
              "fields": [
                {
                  "name": "asset",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 41,
              "docs": []
            },
            {
              "name": "RequestUnlock",
              "fields": [
                {
                  "name": "asset",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "locker",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 42,
              "docs": []
            },
            {
              "name": "SetFeesMode",
              "fields": [
                {
                  "name": "jit_withdraw",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 43,
              "docs": []
            },
            {
              "name": "SetTopic",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 44,
              "docs": []
            },
            {
              "name": "ClearTopic",
              "fields": [],
              "index": 45,
              "docs": []
            },
            {
              "name": "AliasOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 46,
              "docs": []
            },
            {
              "name": "UnpaidExecution",
              "fields": [
                {
                  "name": "weight_limit",
                  "type": 402,
                  "typeName": "WeightLimit",
                  "docs": []
                },
                {
                  "name": "check_origin",
                  "type": 397,
                  "typeName": "Option<MultiLocation>",
                  "docs": []
                }
              ],
              "index": 47,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 381,
    "type": {
      "path": [
        "xcm",
        "v3",
        "multiasset",
        "MultiAssets"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 382,
              "typeName": "Vec<MultiAsset>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 382,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 383
        }
      },
      "docs": []
    }
  },
  {
    "id": 383,
    "type": {
      "path": [
        "xcm",
        "v3",
        "multiasset",
        "MultiAsset"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 384,
              "typeName": "AssetId",
              "docs": []
            },
            {
              "name": "fun",
              "type": 385,
              "typeName": "Fungibility",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 384,
    "type": {
      "path": [
        "xcm",
        "v3",
        "multiasset",
        "AssetId"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Concrete",
              "fields": [
                {
                  "name": null,
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Abstract",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 385,
    "type": {
      "path": [
        "xcm",
        "v3",
        "multiasset",
        "Fungibility"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Fungible",
              "fields": [
                {
                  "name": null,
                  "type": 60,
                  "typeName": "u128",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "NonFungible",
              "fields": [
                {
                  "name": null,
                  "type": 386,
                  "typeName": "AssetInstance",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 386,
    "type": {
      "path": [
        "xcm",
        "v3",
        "multiasset",
        "AssetInstance"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Undefined",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Index",
              "fields": [
                {
                  "name": null,
                  "type": 60,
                  "typeName": "u128",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Array4",
              "fields": [
                {
                  "name": null,
                  "type": 17,
                  "typeName": "[u8; 4]",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Array8",
              "fields": [
                {
                  "name": null,
                  "type": 172,
                  "typeName": "[u8; 8]",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Array16",
              "fields": [
                {
                  "name": null,
                  "type": 47,
                  "typeName": "[u8; 16]",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Array32",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 387,
    "type": {
      "path": [
        "xcm",
        "v3",
        "Response"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Null",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Assets",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "ExecutionResult",
              "fields": [
                {
                  "name": null,
                  "type": 388,
                  "typeName": "Option<(u32, Error)>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Version",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "super::Version",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "PalletsInfo",
              "fields": [
                {
                  "name": null,
                  "type": 391,
                  "typeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "DispatchResult",
              "fields": [
                {
                  "name": null,
                  "type": 395,
                  "typeName": "MaybeErrorCode",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 388,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 389
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 389,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 389,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          390
        ]
      },
      "docs": []
    }
  },
  {
    "id": 390,
    "type": {
      "path": [
        "xcm",
        "v3",
        "traits",
        "Error"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Overflow",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Unimplemented",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "UntrustedReserveLocation",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "UntrustedTeleportLocation",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "LocationFull",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "LocationNotInvertible",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "BadOrigin",
              "fields": [],
              "index": 6,
              "docs": []
            },
            {
              "name": "InvalidLocation",
              "fields": [],
              "index": 7,
              "docs": []
            },
            {
              "name": "AssetNotFound",
              "fields": [],
              "index": 8,
              "docs": []
            },
            {
              "name": "FailedToTransactAsset",
              "fields": [],
              "index": 9,
              "docs": []
            },
            {
              "name": "NotWithdrawable",
              "fields": [],
              "index": 10,
              "docs": []
            },
            {
              "name": "LocationCannotHold",
              "fields": [],
              "index": 11,
              "docs": []
            },
            {
              "name": "ExceedsMaxMessageSize",
              "fields": [],
              "index": 12,
              "docs": []
            },
            {
              "name": "DestinationUnsupported",
              "fields": [],
              "index": 13,
              "docs": []
            },
            {
              "name": "Transport",
              "fields": [],
              "index": 14,
              "docs": []
            },
            {
              "name": "Unroutable",
              "fields": [],
              "index": 15,
              "docs": []
            },
            {
              "name": "UnknownClaim",
              "fields": [],
              "index": 16,
              "docs": []
            },
            {
              "name": "FailedToDecode",
              "fields": [],
              "index": 17,
              "docs": []
            },
            {
              "name": "MaxWeightInvalid",
              "fields": [],
              "index": 18,
              "docs": []
            },
            {
              "name": "NotHoldingFees",
              "fields": [],
              "index": 19,
              "docs": []
            },
            {
              "name": "TooExpensive",
              "fields": [],
              "index": 20,
              "docs": []
            },
            {
              "name": "Trap",
              "fields": [
                {
                  "name": null,
                  "type": 11,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "ExpectationFalse",
              "fields": [],
              "index": 22,
              "docs": []
            },
            {
              "name": "PalletNotFound",
              "fields": [],
              "index": 23,
              "docs": []
            },
            {
              "name": "NameMismatch",
              "fields": [],
              "index": 24,
              "docs": []
            },
            {
              "name": "VersionIncompatible",
              "fields": [],
              "index": 25,
              "docs": []
            },
            {
              "name": "HoldingWouldOverflow",
              "fields": [],
              "index": 26,
              "docs": []
            },
            {
              "name": "ExportError",
              "fields": [],
              "index": 27,
              "docs": []
            },
            {
              "name": "ReanchorFailed",
              "fields": [],
              "index": 28,
              "docs": []
            },
            {
              "name": "NoDeal",
              "fields": [],
              "index": 29,
              "docs": []
            },
            {
              "name": "FeesNotMet",
              "fields": [],
              "index": 30,
              "docs": []
            },
            {
              "name": "LockError",
              "fields": [],
              "index": 31,
              "docs": []
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 32,
              "docs": []
            },
            {
              "name": "Unanchored",
              "fields": [],
              "index": 33,
              "docs": []
            },
            {
              "name": "NotDepositable",
              "fields": [],
              "index": 34,
              "docs": []
            },
            {
              "name": "UnhandledXcmVersion",
              "fields": [],
              "index": 35,
              "docs": []
            },
            {
              "name": "WeightLimitReached",
              "fields": [
                {
                  "name": null,
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "Barrier",
              "fields": [],
              "index": 37,
              "docs": []
            },
            {
              "name": "WeightNotComputable",
              "fields": [],
              "index": 38,
              "docs": []
            },
            {
              "name": "ExceedsStackLimit",
              "fields": [],
              "index": 39,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 391,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 392
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 394,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 392,
    "type": {
      "path": [
        "xcm",
        "v3",
        "PalletInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "index",
              "type": 79,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "name",
              "type": 393,
              "typeName": "BoundedVec<u8, MaxPalletNameLen>",
              "docs": []
            },
            {
              "name": "module_name",
              "type": 393,
              "typeName": "BoundedVec<u8, MaxPalletNameLen>",
              "docs": []
            },
            {
              "name": "major",
              "type": 79,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "minor",
              "type": 79,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "patch",
              "type": 79,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 393,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 394,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 392
        }
      },
      "docs": []
    }
  },
  {
    "id": 395,
    "type": {
      "path": [
        "xcm",
        "v3",
        "MaybeErrorCode"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Success",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Error",
              "fields": [
                {
                  "name": null,
                  "type": 396,
                  "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "TruncatedError",
              "fields": [
                {
                  "name": null,
                  "type": 396,
                  "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 396,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 397,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 136
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 136,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 398,
    "type": {
      "path": [
        "xcm",
        "v3",
        "QueryResponseInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "destination",
              "type": 136,
              "typeName": "MultiLocation",
              "docs": []
            },
            {
              "name": "query_id",
              "type": 10,
              "typeName": "QueryId",
              "docs": []
            },
            {
              "name": "max_weight",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 399,
    "type": {
      "path": [
        "xcm",
        "v3",
        "multiasset",
        "MultiAssetFilter"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Definite",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Wild",
              "fields": [
                {
                  "name": null,
                  "type": 400,
                  "typeName": "WildMultiAsset",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 400,
    "type": {
      "path": [
        "xcm",
        "v3",
        "multiasset",
        "WildMultiAsset"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "All",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "AllOf",
              "fields": [
                {
                  "name": "id",
                  "type": 384,
                  "typeName": "AssetId",
                  "docs": []
                },
                {
                  "name": "fun",
                  "type": 401,
                  "typeName": "WildFungibility",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "AllCounted",
              "fields": [
                {
                  "name": null,
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "AllOfCounted",
              "fields": [
                {
                  "name": "id",
                  "type": 384,
                  "typeName": "AssetId",
                  "docs": []
                },
                {
                  "name": "fun",
                  "type": 401,
                  "typeName": "WildFungibility",
                  "docs": []
                },
                {
                  "name": "count",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 401,
    "type": {
      "path": [
        "xcm",
        "v3",
        "multiasset",
        "WildFungibility"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Fungible",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NonFungible",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 402,
    "type": {
      "path": [
        "xcm",
        "v3",
        "WeightLimit"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unlimited",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Limited",
              "fields": [
                {
                  "name": null,
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 403,
    "type": {
      "path": [
        "xcm",
        "VersionedMultiAssets"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V2",
              "fields": [
                {
                  "name": null,
                  "type": 362,
                  "typeName": "v2::MultiAssets",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "V3",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "v3::MultiAssets",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 404,
    "type": {
      "path": [
        "xcm",
        "VersionedXcm"
      ],
      "params": [
        {
          "name": "RuntimeCall",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V2",
              "fields": [
                {
                  "name": null,
                  "type": 405,
                  "typeName": "v2::Xcm<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "V3",
              "fields": [
                {
                  "name": null,
                  "type": 409,
                  "typeName": "v3::Xcm<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 405,
    "type": {
      "path": [
        "xcm",
        "v2",
        "Xcm"
      ],
      "params": [
        {
          "name": "RuntimeCall",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 406,
              "typeName": "Vec<Instruction<RuntimeCall>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 406,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 407
        }
      },
      "docs": []
    }
  },
  {
    "id": 407,
    "type": {
      "path": [
        "xcm",
        "v2",
        "Instruction"
      ],
      "params": [
        {
          "name": "RuntimeCall",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "WithdrawAsset",
              "fields": [
                {
                  "name": null,
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "ReserveAssetDeposited",
              "fields": [
                {
                  "name": null,
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "ReceiveTeleportedAsset",
              "fields": [
                {
                  "name": null,
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "QueryResponse",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "response",
                  "type": 368,
                  "typeName": "Response",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "TransferAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "TransferReserveAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 359,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Transact",
              "fields": [
                {
                  "name": "origin_type",
                  "type": 372,
                  "typeName": "OriginKind",
                  "docs": []
                },
                {
                  "name": "require_weight_at_most",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 408,
                  "typeName": "DoubleEncoded<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "HrmpNewChannelOpenRequest",
              "fields": [
                {
                  "name": "sender",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_message_size",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_capacity",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "HrmpChannelAccepted",
              "fields": [
                {
                  "name": "recipient",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "HrmpChannelClosing",
              "fields": [
                {
                  "name": "initiator",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "sender",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "recipient",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "ClearOrigin",
              "fields": [],
              "index": 10,
              "docs": []
            },
            {
              "name": "DescendOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 352,
                  "typeName": "InteriorMultiLocation",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "ReportError",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "max_response_weight",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "DepositAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "max_assets",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "DepositReserveAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "max_assets",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 359,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "ExchangeAsset",
              "fields": [
                {
                  "name": "give",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "receive",
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "InitiateReserveWithdraw",
              "fields": [
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "reserve",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 359,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "InitiateTeleport",
              "fields": [
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 359,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "QueryHolding",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 374,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "max_response_weight",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "BuyExecution",
              "fields": [
                {
                  "name": "fees",
                  "type": 364,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "weight_limit",
                  "type": 377,
                  "typeName": "WeightLimit",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "RefundSurplus",
              "fields": [],
              "index": 20,
              "docs": []
            },
            {
              "name": "SetErrorHandler",
              "fields": [
                {
                  "name": null,
                  "type": 405,
                  "typeName": "Xcm<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "SetAppendix",
              "fields": [
                {
                  "name": null,
                  "type": 405,
                  "typeName": "Xcm<RuntimeCall>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "ClearError",
              "fields": [],
              "index": 23,
              "docs": []
            },
            {
              "name": "ClaimAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 362,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "ticket",
                  "type": 351,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Trap",
              "fields": [
                {
                  "name": null,
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "SubscribeVersion",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "max_response_weight",
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "UnsubscribeVersion",
              "fields": [],
              "index": 27,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 408,
    "type": {
      "path": [
        "xcm",
        "double_encoded",
        "DoubleEncoded"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "encoded",
              "type": 13,
              "typeName": "Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 409,
    "type": {
      "path": [
        "xcm",
        "v3",
        "Xcm"
      ],
      "params": [
        {
          "name": "Call",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 410,
              "typeName": "Vec<Instruction<Call>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 410,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 411
        }
      },
      "docs": []
    }
  },
  {
    "id": 411,
    "type": {
      "path": [
        "xcm",
        "v3",
        "Instruction"
      ],
      "params": [
        {
          "name": "Call",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "WithdrawAsset",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "ReserveAssetDeposited",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "ReceiveTeleportedAsset",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "QueryResponse",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "response",
                  "type": 387,
                  "typeName": "Response",
                  "docs": []
                },
                {
                  "name": "max_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "querier",
                  "type": 397,
                  "typeName": "Option<MultiLocation>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "TransferAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "TransferReserveAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Transact",
              "fields": [
                {
                  "name": "origin_kind",
                  "type": 372,
                  "typeName": "OriginKind",
                  "docs": []
                },
                {
                  "name": "require_weight_at_most",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "call",
                  "type": 408,
                  "typeName": "DoubleEncoded<Call>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "HrmpNewChannelOpenRequest",
              "fields": [
                {
                  "name": "sender",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_message_size",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_capacity",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "HrmpChannelAccepted",
              "fields": [
                {
                  "name": "recipient",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "HrmpChannelClosing",
              "fields": [
                {
                  "name": "initiator",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "sender",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "recipient",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "ClearOrigin",
              "fields": [],
              "index": 10,
              "docs": []
            },
            {
              "name": "DescendOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 137,
                  "typeName": "InteriorMultiLocation",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "ReportError",
              "fields": [
                {
                  "name": null,
                  "type": 398,
                  "typeName": "QueryResponseInfo",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "DepositAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "DepositReserveAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "ExchangeAsset",
              "fields": [
                {
                  "name": "give",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "want",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "maximal",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "InitiateReserveWithdraw",
              "fields": [
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "reserve",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "InitiateTeleport",
              "fields": [
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                },
                {
                  "name": "dest",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "ReportHolding",
              "fields": [
                {
                  "name": "response_info",
                  "type": 398,
                  "typeName": "QueryResponseInfo",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 399,
                  "typeName": "MultiAssetFilter",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "BuyExecution",
              "fields": [
                {
                  "name": "fees",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "weight_limit",
                  "type": 402,
                  "typeName": "WeightLimit",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "RefundSurplus",
              "fields": [],
              "index": 20,
              "docs": []
            },
            {
              "name": "SetErrorHandler",
              "fields": [
                {
                  "name": null,
                  "type": 409,
                  "typeName": "Xcm<Call>",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "SetAppendix",
              "fields": [
                {
                  "name": null,
                  "type": 409,
                  "typeName": "Xcm<Call>",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "ClearError",
              "fields": [],
              "index": 23,
              "docs": []
            },
            {
              "name": "ClaimAsset",
              "fields": [
                {
                  "name": "assets",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "ticket",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Trap",
              "fields": [
                {
                  "name": null,
                  "type": 10,
                  "typeName": "u64",
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "SubscribeVersion",
              "fields": [
                {
                  "name": "query_id",
                  "type": 10,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "max_response_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "UnsubscribeVersion",
              "fields": [],
              "index": 27,
              "docs": []
            },
            {
              "name": "BurnAsset",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "ExpectAsset",
              "fields": [
                {
                  "name": null,
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "ExpectOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 397,
                  "typeName": "Option<MultiLocation>",
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "ExpectError",
              "fields": [
                {
                  "name": null,
                  "type": 388,
                  "typeName": "Option<(u32, Error)>",
                  "docs": []
                }
              ],
              "index": 31,
              "docs": []
            },
            {
              "name": "ExpectTransactStatus",
              "fields": [
                {
                  "name": null,
                  "type": 395,
                  "typeName": "MaybeErrorCode",
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "QueryPallet",
              "fields": [
                {
                  "name": "module_name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "response_info",
                  "type": 398,
                  "typeName": "QueryResponseInfo",
                  "docs": []
                }
              ],
              "index": 33,
              "docs": []
            },
            {
              "name": "ExpectPallet",
              "fields": [
                {
                  "name": "index",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "module_name",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                },
                {
                  "name": "crate_major",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "min_crate_minor",
                  "type": 79,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "ReportTransactStatus",
              "fields": [
                {
                  "name": null,
                  "type": 398,
                  "typeName": "QueryResponseInfo",
                  "docs": []
                }
              ],
              "index": 35,
              "docs": []
            },
            {
              "name": "ClearTransactStatus",
              "fields": [],
              "index": 36,
              "docs": []
            },
            {
              "name": "UniversalOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 138,
                  "typeName": "Junction",
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            },
            {
              "name": "ExportMessage",
              "fields": [
                {
                  "name": "network",
                  "type": 140,
                  "typeName": "NetworkId",
                  "docs": []
                },
                {
                  "name": "destination",
                  "type": 137,
                  "typeName": "InteriorMultiLocation",
                  "docs": []
                },
                {
                  "name": "xcm",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                }
              ],
              "index": 38,
              "docs": []
            },
            {
              "name": "LockAsset",
              "fields": [
                {
                  "name": "asset",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "unlocker",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 39,
              "docs": []
            },
            {
              "name": "UnlockAsset",
              "fields": [
                {
                  "name": "asset",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "target",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 40,
              "docs": []
            },
            {
              "name": "NoteUnlockable",
              "fields": [
                {
                  "name": "asset",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "owner",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 41,
              "docs": []
            },
            {
              "name": "RequestUnlock",
              "fields": [
                {
                  "name": "asset",
                  "type": 383,
                  "typeName": "MultiAsset",
                  "docs": []
                },
                {
                  "name": "locker",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 42,
              "docs": []
            },
            {
              "name": "SetFeesMode",
              "fields": [
                {
                  "name": "jit_withdraw",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 43,
              "docs": []
            },
            {
              "name": "SetTopic",
              "fields": [
                {
                  "name": null,
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ],
              "index": 44,
              "docs": []
            },
            {
              "name": "ClearTopic",
              "fields": [],
              "index": 45,
              "docs": []
            },
            {
              "name": "AliasOrigin",
              "fields": [
                {
                  "name": null,
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                }
              ],
              "index": 46,
              "docs": []
            },
            {
              "name": "UnpaidExecution",
              "fields": [
                {
                  "name": "weight_limit",
                  "type": 402,
                  "typeName": "WeightLimit",
                  "docs": []
                },
                {
                  "name": "check_origin",
                  "type": 397,
                  "typeName": "Option<MultiLocation>",
                  "docs": []
                }
              ],
              "index": 47,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 412,
    "type": {
      "path": [
        "pallet_message_queue",
        "pallet",
        "Call"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "reap_page",
              "fields": [
                {
                  "name": "message_origin",
                  "type": 413,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "page_index",
                  "type": 4,
                  "typeName": "PageIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "See [`Pallet::reap_page`]."
              ]
            },
            {
              "name": "execute_overweight",
              "fields": [
                {
                  "name": "message_origin",
                  "type": 413,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "page",
                  "type": 4,
                  "typeName": "PageIndex",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "T::Size",
                  "docs": []
                },
                {
                  "name": "weight_limit",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "See [`Pallet::execute_overweight`]."
              ]
            }
          ]
        }
      },
      "docs": [
        "Contains a variant per dispatchable extrinsic that this pallet has."
      ]
    }
  },
  {
    "id": 413,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "inclusion",
        "AggregateMessageOrigin"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ump",
              "fields": [
                {
                  "name": null,
                  "type": 414,
                  "typeName": "UmpQueueId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 414,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "inclusion",
        "UmpQueueId"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Para",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 415,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 416,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "types",
        "Tally"
      ],
      "params": [
        {
          "name": "Votes",
          "type": 6
        },
        {
          "name": "Total",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "ayes",
              "type": 6,
              "typeName": "Votes",
              "docs": []
            },
            {
              "name": "nays",
              "type": 6,
              "typeName": "Votes",
              "docs": []
            },
            {
              "name": "support",
              "type": 6,
              "typeName": "Votes",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 417,
    "type": {
      "path": [
        "pallet_whitelist",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "CallWhitelisted",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "WhitelistedCallRemoved",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "WhitelistedCallDispatched",
              "fields": [
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "PreimageHash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 418,
                  "typeName": "DispatchResultWithPostInfo",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 418,
    "type": {
      "path": [
        "Result"
      ],
      "params": [
        {
          "name": "T",
          "type": 419
        },
        {
          "name": "E",
          "type": 421
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ok",
              "fields": [
                {
                  "name": null,
                  "type": 419,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Err",
              "fields": [
                {
                  "name": null,
                  "type": 421,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 419,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "PostDispatchInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "actual_weight",
              "type": 420,
              "typeName": "Option<Weight>",
              "docs": []
            },
            {
              "name": "pays_fee",
              "type": 24,
              "typeName": "Pays",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 420,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 9
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 9,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 421,
    "type": {
      "path": [
        "sp_runtime",
        "DispatchErrorWithPostInfo"
      ],
      "params": [
        {
          "name": "Info",
          "type": 419
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "post_info",
              "type": 419,
              "typeName": "Info",
              "docs": []
            },
            {
              "name": "error",
              "type": 25,
              "typeName": "DispatchError",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 422,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "claims",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Claimed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "ethereum_address",
                  "type": 150,
                  "typeName": "EthereumAddress",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Someone claimed some DOTs."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 423,
    "type": {
      "path": [
        "pallet_vesting",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "VestingUpdated",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "unvested",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "The amount vested has been updated. This could indicate a change in funds available.",
                "The balance given is the amount which is left unvested (and thus locked)."
              ]
            },
            {
              "name": "VestingCompleted",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An \\[account\\] has become fully vested."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 424,
    "type": {
      "path": [
        "pallet_utility",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BatchInterrupted",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "error",
                  "type": 25,
                  "typeName": "DispatchError",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                "well as the error."
              ]
            },
            {
              "name": "BatchCompleted",
              "fields": [],
              "index": 1,
              "docs": [
                "Batch of dispatches completed fully with no error."
              ]
            },
            {
              "name": "BatchCompletedWithErrors",
              "fields": [],
              "index": 2,
              "docs": [
                "Batch of dispatches completed but has errors."
              ]
            },
            {
              "name": "ItemCompleted",
              "fields": [],
              "index": 3,
              "docs": [
                "A single item within a Batch of dispatches has completed with no error."
              ]
            },
            {
              "name": "ItemFailed",
              "fields": [
                {
                  "name": "error",
                  "type": 25,
                  "typeName": "DispatchError",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A single item within a Batch of dispatches has completed with error."
              ]
            },
            {
              "name": "DispatchedAs",
              "fields": [
                {
                  "name": "result",
                  "type": 33,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A call was dispatched."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 425,
    "type": {
      "path": [
        "pallet_identity",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "IdentitySet",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A name was set or reset (which will remove all judgements)."
              ]
            },
            {
              "name": "IdentityCleared",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A name was cleared, and the given balance returned."
              ]
            },
            {
              "name": "IdentityKilled",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A name was removed and the given balance slashed."
              ]
            },
            {
              "name": "JudgementRequested",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "registrar_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A judgement was asked from a registrar."
              ]
            },
            {
              "name": "JudgementUnrequested",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "registrar_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A judgement request was retracted."
              ]
            },
            {
              "name": "JudgementGiven",
              "fields": [
                {
                  "name": "target",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "registrar_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A judgement was given by a registrar."
              ]
            },
            {
              "name": "RegistrarAdded",
              "fields": [
                {
                  "name": "registrar_index",
                  "type": 4,
                  "typeName": "RegistrarIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A registrar was added."
              ]
            },
            {
              "name": "SubIdentityAdded",
              "fields": [
                {
                  "name": "sub",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "main",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "A sub-identity was added to an identity and the deposit paid."
              ]
            },
            {
              "name": "SubIdentityRemoved",
              "fields": [
                {
                  "name": "sub",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "main",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "A sub-identity was removed from an identity and the deposit freed."
              ]
            },
            {
              "name": "SubIdentityRevoked",
              "fields": [
                {
                  "name": "sub",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "main",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "A sub-identity was cleared, and the given deposit repatriated from the",
                "main identity account to the sub-identity account."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 426,
    "type": {
      "path": [
        "pallet_proxy",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ProxyExecuted",
              "fields": [
                {
                  "name": "result",
                  "type": 33,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A proxy was executed correctly, with the given."
              ]
            },
            {
              "name": "PureCreated",
              "fields": [
                {
                  "name": "pure",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 203,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "disambiguation_index",
                  "type": 66,
                  "typeName": "u16",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A pure account has been created by new proxy with given",
                "disambiguation index and proxy type."
              ]
            },
            {
              "name": "Announced",
              "fields": [
                {
                  "name": "real",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proxy",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 12,
                  "typeName": "CallHashOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "An announcement was placed to make a call in the future."
              ]
            },
            {
              "name": "ProxyAdded",
              "fields": [
                {
                  "name": "delegator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegatee",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 203,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A proxy was added."
              ]
            },
            {
              "name": "ProxyRemoved",
              "fields": [
                {
                  "name": "delegator",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "delegatee",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "proxy_type",
                  "type": 203,
                  "typeName": "T::ProxyType",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A proxy was removed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 427,
    "type": {
      "path": [
        "pallet_multisig",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewMultisig",
              "fields": [
                {
                  "name": "approving",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "multisig",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "CallHash",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A new multisig operation has begun."
              ]
            },
            {
              "name": "MultisigApproval",
              "fields": [
                {
                  "name": "approving",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "timepoint",
                  "type": 206,
                  "typeName": "Timepoint<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "multisig",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "CallHash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A multisig operation has been approved by someone."
              ]
            },
            {
              "name": "MultisigExecuted",
              "fields": [
                {
                  "name": "approving",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "timepoint",
                  "type": 206,
                  "typeName": "Timepoint<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "multisig",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "CallHash",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 33,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A multisig operation has been executed."
              ]
            },
            {
              "name": "MultisigCancelled",
              "fields": [
                {
                  "name": "cancelling",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "timepoint",
                  "type": 206,
                  "typeName": "Timepoint<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "multisig",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "call_hash",
                  "type": 1,
                  "typeName": "CallHash",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A multisig operation has been cancelled."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 428,
    "type": {
      "path": [
        "pallet_bounties",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BountyProposed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "New bounty proposal."
              ]
            },
            {
              "name": "BountyRejected",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "bond",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A bounty proposal was rejected; funds were slashed."
              ]
            },
            {
              "name": "BountyBecameActive",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A bounty proposal is funded and became active."
              ]
            },
            {
              "name": "BountyAwarded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A bounty is awarded to a beneficiary."
              ]
            },
            {
              "name": "BountyClaimed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "payout",
                  "type": 6,
                  "typeName": "BalanceOf<T, I>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A bounty is claimed by beneficiary."
              ]
            },
            {
              "name": "BountyCanceled",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A bounty is cancelled."
              ]
            },
            {
              "name": "BountyExtended",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "A bounty expiry is extended."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 429,
    "type": {
      "path": [
        "pallet_child_bounties",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Added",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A child-bounty is added."
              ]
            },
            {
              "name": "Awarded",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A child-bounty is awarded to a beneficiary."
              ]
            },
            {
              "name": "Claimed",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "payout",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A child-bounty is claimed by beneficiary."
              ]
            },
            {
              "name": "Canceled",
              "fields": [
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                },
                {
                  "name": "child_index",
                  "type": 4,
                  "typeName": "BountyIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A child-bounty is cancelled."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 430,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "SolutionStored",
              "fields": [
                {
                  "name": "compute",
                  "type": 431,
                  "typeName": "ElectionCompute",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 155,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "prev_ejected",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A solution was stored with the given compute.",
                "",
                "The `origin` indicates the origin of the solution. If `origin` is `Some(AccountId)`,",
                "the stored solution was submited in the signed phase by a miner with the `AccountId`.",
                "Otherwise, the solution was stored either during the unsigned phase or by",
                "`T::ForceOrigin`. The `bool` is `true` when a previous solution was ejected to make",
                "room for this one."
              ]
            },
            {
              "name": "ElectionFinalized",
              "fields": [
                {
                  "name": "compute",
                  "type": 431,
                  "typeName": "ElectionCompute",
                  "docs": []
                },
                {
                  "name": "score",
                  "type": 262,
                  "typeName": "ElectionScore",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "The election has been finalized, with the given computation and score."
              ]
            },
            {
              "name": "ElectionFailed",
              "fields": [],
              "index": 2,
              "docs": [
                "An election failed.",
                "",
                "Not much can be said about which computes failed in the process."
              ]
            },
            {
              "name": "Rewarded",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "<T as frame_system::Config>::AccountId",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "An account has been rewarded for their signed submission being finalized."
              ]
            },
            {
              "name": "Slashed",
              "fields": [
                {
                  "name": "account",
                  "type": 0,
                  "typeName": "<T as frame_system::Config>::AccountId",
                  "docs": []
                },
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An account has been slashed for submitting an invalid signed submission."
              ]
            },
            {
              "name": "PhaseTransitioned",
              "fields": [
                {
                  "name": "from",
                  "type": 432,
                  "typeName": "Phase<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 432,
                  "typeName": "Phase<BlockNumberFor<T>>",
                  "docs": []
                },
                {
                  "name": "round",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "There was a phase transition in a given round."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 431,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "ElectionCompute"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "OnChain",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Signed",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Unsigned",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Fallback",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "Emergency",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 432,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "Phase"
      ],
      "params": [
        {
          "name": "Bn",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Off",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Signed",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Unsigned",
              "fields": [
                {
                  "name": null,
                  "type": 433,
                  "typeName": "(bool, Bn)",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Emergency",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 433,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          44,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 434,
    "type": {
      "path": [
        "pallet_bags_list",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Rebagged",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "from",
                  "type": 11,
                  "typeName": "T::Score",
                  "docs": []
                },
                {
                  "name": "to",
                  "type": 11,
                  "typeName": "T::Score",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Moved an account from one bag to another."
              ]
            },
            {
              "name": "ScoreUpdated",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "new_score",
                  "type": 11,
                  "typeName": "T::Score",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Updated the score of some account to the given amount."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 435,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Created",
              "fields": [
                {
                  "name": "depositor",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A pool has been created."
              ]
            },
            {
              "name": "Bonded",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "bonded",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "joined",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A member has became bonded in a pool."
              ]
            },
            {
              "name": "PaidOut",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "payout",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A payout has been made to a member."
              ]
            },
            {
              "name": "Unbonded",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "points",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A member has unbonded from their pool.",
                "",
                "- `balance` is the corresponding balance of the number of points that has been",
                "  requested to be unbonded (the argument of the `unbond` transaction) from the bonded",
                "  pool.",
                "- `points` is the number of points that are issued as a result of `balance` being",
                "dissolved into the corresponding unbonding pool.",
                "- `era` is the era in which the balance will be unbonded.",
                "In the absence of slashing, these values will match. In the presence of slashing, the",
                "number of points that are issued in the unbonding pool will be less than the amount",
                "requested to be unbonded."
              ]
            },
            {
              "name": "Withdrawn",
              "fields": [
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "points",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A member has withdrawn from their pool.",
                "",
                "The given number of `points` have been dissolved in return of `balance`.",
                "",
                "Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance",
                "will be 1."
              ]
            },
            {
              "name": "Destroyed",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A pool has been destroyed."
              ]
            },
            {
              "name": "StateChanged",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "new_state",
                  "type": 274,
                  "typeName": "PoolState",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "The state of a pool has changed"
              ]
            },
            {
              "name": "MemberRemoved",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "member",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "A member has been removed from a pool.",
                "",
                "The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked)."
              ]
            },
            {
              "name": "RolesUpdated",
              "fields": [
                {
                  "name": "root",
                  "type": 155,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "bouncer",
                  "type": 155,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                },
                {
                  "name": "nominator",
                  "type": 155,
                  "typeName": "Option<T::AccountId>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "The roles of a pool have been updated to the given new roles. Note that the depositor",
                "can never change."
              ]
            },
            {
              "name": "PoolSlashed",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "The active balance of pool `pool_id` has been slashed to `balance`."
              ]
            },
            {
              "name": "UnbondingPoolSlashed",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "era",
                  "type": 4,
                  "typeName": "EraIndex",
                  "docs": []
                },
                {
                  "name": "balance",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "The unbond pool at `era` of pool `pool_id` has been slashed to `balance`."
              ]
            },
            {
              "name": "PoolCommissionUpdated",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "current",
                  "type": 280,
                  "typeName": "Option<(Perbill, T::AccountId)>",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "A pool's commission setting has been changed."
              ]
            },
            {
              "name": "PoolMaxCommissionUpdated",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "max_commission",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "A pool's maximum commission setting has been changed."
              ]
            },
            {
              "name": "PoolCommissionChangeRateUpdated",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "change_rate",
                  "type": 282,
                  "typeName": "CommissionChangeRate<BlockNumberFor<T>>",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "A pool's commission `change_rate` has been changed."
              ]
            },
            {
              "name": "PoolCommissionClaimed",
              "fields": [
                {
                  "name": "pool_id",
                  "type": 4,
                  "typeName": "PoolId",
                  "docs": []
                },
                {
                  "name": "commission",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "Pool commission has been claimed."
              ]
            }
          ]
        }
      },
      "docs": [
        "Events of this pallet."
      ]
    }
  },
  {
    "id": 436,
    "type": {
      "path": [
        "pallet_fast_unstake",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unstaked",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 33,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A staker was unstaked."
              ]
            },
            {
              "name": "Slashed",
              "fields": [
                {
                  "name": "stash",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A staker was slashed for requesting fast-unstake whilst being exposed."
              ]
            },
            {
              "name": "BatchChecked",
              "fields": [
                {
                  "name": "eras",
                  "type": 97,
                  "typeName": "Vec<EraIndex>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A batch was partially checked for the given eras, but the process did not finish."
              ]
            },
            {
              "name": "BatchFinished",
              "fields": [
                {
                  "name": "size",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A batch of a given size was terminated.",
                "",
                "This is always follows by a number of `Unstaked` or `Slashed` events, marking the end",
                "of the batch. A new batch will be created upon next block."
              ]
            },
            {
              "name": "InternalError",
              "fields": [],
              "index": 4,
              "docs": [
                "An internal error happened. Operations will be paused now."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 437,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "inclusion",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "CandidateBacked",
              "fields": [
                {
                  "name": null,
                  "type": 438,
                  "typeName": "CandidateReceipt<T::Hash>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 316,
                  "typeName": "HeadData",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 439,
                  "typeName": "CoreIndex",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 440,
                  "typeName": "GroupIndex",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A candidate was backed. `[candidate, head_data]`"
              ]
            },
            {
              "name": "CandidateIncluded",
              "fields": [
                {
                  "name": null,
                  "type": 438,
                  "typeName": "CandidateReceipt<T::Hash>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 316,
                  "typeName": "HeadData",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 439,
                  "typeName": "CoreIndex",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 440,
                  "typeName": "GroupIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A candidate was included. `[candidate, head_data]`"
              ]
            },
            {
              "name": "CandidateTimedOut",
              "fields": [
                {
                  "name": null,
                  "type": 438,
                  "typeName": "CandidateReceipt<T::Hash>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 316,
                  "typeName": "HeadData",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 439,
                  "typeName": "CoreIndex",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A candidate timed out. `[candidate, head_data]`"
              ]
            },
            {
              "name": "UpwardMessagesReceived",
              "fields": [
                {
                  "name": "from",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "count",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "Some upward messages have been received and will be processed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 438,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "CandidateReceipt"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "descriptor",
              "type": 305,
              "typeName": "CandidateDescriptor<H>",
              "docs": []
            },
            {
              "name": "commitments_hash",
              "type": 12,
              "typeName": "Hash",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 439,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "CoreIndex"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 440,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "GroupIndex"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 441,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras",
        "pallet",
        "Event"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "CurrentCodeUpdated",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Current code has been updated for a Para. `para_id`"
              ]
            },
            {
              "name": "CurrentHeadUpdated",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Current head has been updated for a Para. `para_id`"
              ]
            },
            {
              "name": "CodeUpgradeScheduled",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A code upgrade has been scheduled for a Para. `para_id`"
              ]
            },
            {
              "name": "NewHeadNoted",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "A new head has been noted for a Para. `para_id`"
              ]
            },
            {
              "name": "ActionQueued",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 4,
                  "typeName": "SessionIndex",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "A para has been queued to execute pending actions. `para_id`"
              ]
            },
            {
              "name": "PvfCheckStarted",
              "fields": [
                {
                  "name": null,
                  "type": 308,
                  "typeName": "ValidationCodeHash",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "The given para either initiated or subscribed to a PVF check for the given validation",
                "code. `code_hash` `para_id`"
              ]
            },
            {
              "name": "PvfCheckAccepted",
              "fields": [
                {
                  "name": null,
                  "type": 308,
                  "typeName": "ValidationCodeHash",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "The given validation code was accepted by the PVF pre-checking vote.",
                "`code_hash` `para_id`"
              ]
            },
            {
              "name": "PvfCheckRejected",
              "fields": [
                {
                  "name": null,
                  "type": 308,
                  "typeName": "ValidationCodeHash",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "The given validation code was rejected by the PVF pre-checking vote.",
                "`code_hash` `para_id`"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 442,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "hrmp",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "OpenChannelRequested",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Open HRMP channel requested.",
                "`[sender, recipient, proposed_max_capacity, proposed_max_message_size]`"
              ]
            },
            {
              "name": "OpenChannelCanceled",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 331,
                  "typeName": "HrmpChannelId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An HRMP channel request sent by the receiver was canceled by either party.",
                "`[by_parachain, channel_id]`"
              ]
            },
            {
              "name": "OpenChannelAccepted",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Open HRMP channel accepted. `[sender, recipient]`"
              ]
            },
            {
              "name": "ChannelClosed",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 331,
                  "typeName": "HrmpChannelId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "HRMP channel closed. `[by_parachain, channel_id]`"
              ]
            },
            {
              "name": "HrmpChannelForceOpened",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "An HRMP channel was opened via Root origin.",
                "`[sender, recipient, proposed_max_capacity, proposed_max_message_size]`"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 443,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "disputes",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "DisputeInitiated",
              "fields": [
                {
                  "name": null,
                  "type": 321,
                  "typeName": "CandidateHash",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 444,
                  "typeName": "DisputeLocation",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A dispute has been initiated. \\[candidate hash, dispute location\\]"
              ]
            },
            {
              "name": "DisputeConcluded",
              "fields": [
                {
                  "name": null,
                  "type": 321,
                  "typeName": "CandidateHash",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 445,
                  "typeName": "DisputeResult",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A dispute has concluded for or against a candidate.",
                "`\\[para id, candidate hash, dispute result\\]`"
              ]
            },
            {
              "name": "Revert",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "A dispute has concluded with supermajority against a candidate.",
                "Block authors should no longer build on top of this head and should",
                "instead revert the block at the given height. This should be the",
                "number of the child of the last known valid block in the chain."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 444,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "disputes",
        "DisputeLocation"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Local",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Remote",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 445,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "disputes",
        "DisputeResult"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Valid",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Invalid",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 446,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "paras_registrar",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Registered",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "manager",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Deregistered",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Reserved",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Swapped",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "other_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 447,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "slots",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NewLeasePeriod",
              "fields": [
                {
                  "name": "lease_period",
                  "type": 4,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A new `[lease_period]` is beginning."
              ]
            },
            {
              "name": "Leased",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "leaser",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "period_begin",
                  "type": 4,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "period_count",
                  "type": 4,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "extra_reserved",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "total_amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A para has won the right to a continuous set of lease periods as a parachain.",
                "First balance is any extra amount reserved on top of the para's existing deposit.",
                "Second balance is the total amount reserved."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 448,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "auctions",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AuctionStarted",
              "fields": [
                {
                  "name": "auction_index",
                  "type": 4,
                  "typeName": "AuctionIndex",
                  "docs": []
                },
                {
                  "name": "lease_period",
                  "type": 4,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "ending",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "An auction started. Provides its index and the block number where it will begin to",
                "close and the first lease period of the quadruplet that is auctioned."
              ]
            },
            {
              "name": "AuctionClosed",
              "fields": [
                {
                  "name": "auction_index",
                  "type": 4,
                  "typeName": "AuctionIndex",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "An auction ended. All funds become unreserved."
              ]
            },
            {
              "name": "Reserved",
              "fields": [
                {
                  "name": "bidder",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "extra_reserved",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "total_amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Funds were reserved for a winning bid. First balance is the extra amount reserved.",
                "Second is the total."
              ]
            },
            {
              "name": "Unreserved",
              "fields": [
                {
                  "name": "bidder",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "Funds were unreserved since bidder is no longer active. `[bidder, amount]`"
              ]
            },
            {
              "name": "ReserveConfiscated",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "leaser",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "Someone attempted to lease the same slot twice for a parachain. The amount is held in",
                "reserve but no parachain slot has been leased."
              ]
            },
            {
              "name": "BidAccepted",
              "fields": [
                {
                  "name": "bidder",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                },
                {
                  "name": "first_slot",
                  "type": 4,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                },
                {
                  "name": "last_slot",
                  "type": 4,
                  "typeName": "LeasePeriodOf<T>",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "A new bid has been accepted as the current winner."
              ]
            },
            {
              "name": "WinningOffset",
              "fields": [
                {
                  "name": "auction_index",
                  "type": 4,
                  "typeName": "AuctionIndex",
                  "docs": []
                },
                {
                  "name": "block_number",
                  "type": 4,
                  "typeName": "BlockNumberFor<T>",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "The winning offset was chosen for an auction. This will map into the `Winning` storage",
                "map."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 449,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "crowdloan",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Created",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Create a new crowdloaning campaign."
              ]
            },
            {
              "name": "Contributed",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "fund_index",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Contributed to a crowd sale."
              ]
            },
            {
              "name": "Withdrew",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "fund_index",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": 6,
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Withdrew full balance of a contributor."
              ]
            },
            {
              "name": "PartiallyRefunded",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "The loans in a fund have been partially dissolved, i.e. there are some left",
                "over child keys that still need to be killed."
              ]
            },
            {
              "name": "AllRefunded",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "All loans in a fund have been refunded."
              ]
            },
            {
              "name": "Dissolved",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "Fund is dissolved."
              ]
            },
            {
              "name": "HandleBidResult",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 33,
                  "typeName": "DispatchResult",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "The result of trying to submit a new bid to the Slots pallet."
              ]
            },
            {
              "name": "Edited",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "The configuration to a crowdloan has been edited."
              ]
            },
            {
              "name": "MemoUpdated",
              "fields": [
                {
                  "name": "who",
                  "type": 0,
                  "typeName": "T::AccountId",
                  "docs": []
                },
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "memo",
                  "type": 13,
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "A memo has been updated."
              ]
            },
            {
              "name": "AddedToNewRaise",
              "fields": [
                {
                  "name": "para_id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "A parachain has been moved to `NewRaise`"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 450,
    "type": {
      "path": [
        "pallet_xcm",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Attempted",
              "fields": [
                {
                  "name": "outcome",
                  "type": 451,
                  "typeName": "xcm::latest::Outcome",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Execution of an XCM message was attempted."
              ]
            },
            {
              "name": "Sent",
              "fields": [
                {
                  "name": "origin",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "destination",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "message",
                  "type": 378,
                  "typeName": "Xcm<()>",
                  "docs": []
                },
                {
                  "name": "message_id",
                  "type": 1,
                  "typeName": "XcmHash",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "A XCM message was sent."
              ]
            },
            {
              "name": "UnexpectedResponse",
              "fields": [
                {
                  "name": "origin",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Query response received which does not match a registered query. This may be because a",
                "matching query was never registered, it may be because it is a duplicate response, or",
                "because the query timed out."
              ]
            },
            {
              "name": "ResponseReady",
              "fields": [
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "response",
                  "type": 387,
                  "typeName": "Response",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "Query response has been received and is ready for taking with `take_response`. There is",
                "no registered notification call."
              ]
            },
            {
              "name": "Notified",
              "fields": [
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "pallet_index",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "call_index",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": [
                "Query response has been received and query is removed. The registered notification has",
                "been dispatched and executed successfully."
              ]
            },
            {
              "name": "NotifyOverweight",
              "fields": [
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "pallet_index",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "call_index",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "actual_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "max_budgeted_weight",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": [
                "Query response has been received and query is removed. The registered notification",
                "could not be dispatched because the dispatch weight is greater than the maximum weight",
                "originally budgeted by this runtime for the query result."
              ]
            },
            {
              "name": "NotifyDispatchError",
              "fields": [
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "pallet_index",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "call_index",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ],
              "index": 6,
              "docs": [
                "Query response has been received and query is removed. There was a general error with",
                "dispatching the notification call."
              ]
            },
            {
              "name": "NotifyDecodeFailed",
              "fields": [
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "pallet_index",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "call_index",
                  "type": 2,
                  "typeName": "u8",
                  "docs": []
                }
              ],
              "index": 7,
              "docs": [
                "Query response has been received and query is removed. The dispatch was unable to be",
                "decoded into a `Call`; this might be due to dispatch function having a signature which",
                "is not `(origin, QueryId, Response)`."
              ]
            },
            {
              "name": "InvalidResponder",
              "fields": [
                {
                  "name": "origin",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "expected_location",
                  "type": 397,
                  "typeName": "Option<MultiLocation>",
                  "docs": []
                }
              ],
              "index": 8,
              "docs": [
                "Expected query response has been received but the origin location of the response does",
                "not match that expected. The query remains registered for a later, valid, response to",
                "be received and acted upon."
              ]
            },
            {
              "name": "InvalidResponderVersion",
              "fields": [
                {
                  "name": "origin",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                }
              ],
              "index": 9,
              "docs": [
                "Expected query response has been received but the expected origin location placed in",
                "storage by this runtime previously cannot be decoded. The query remains registered.",
                "",
                "This is unexpected (since a location placed in storage in a previously executing",
                "runtime should be readable prior to query timeout) and dangerous since the possibly",
                "valid response will be dropped. Manual governance intervention is probably going to be",
                "needed."
              ]
            },
            {
              "name": "ResponseTaken",
              "fields": [
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                }
              ],
              "index": 10,
              "docs": [
                "Received query response has been read and removed."
              ]
            },
            {
              "name": "AssetsTrapped",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "H256",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 403,
                  "typeName": "VersionedMultiAssets",
                  "docs": []
                }
              ],
              "index": 11,
              "docs": [
                "Some assets have been placed in an asset trap."
              ]
            },
            {
              "name": "VersionChangeNotified",
              "fields": [
                {
                  "name": "destination",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "result",
                  "type": 4,
                  "typeName": "XcmVersion",
                  "docs": []
                },
                {
                  "name": "cost",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "message_id",
                  "type": 1,
                  "typeName": "XcmHash",
                  "docs": []
                }
              ],
              "index": 12,
              "docs": [
                "An XCM version change notification message has been attempted to be sent.",
                "",
                "The cost of sending it (borne by the chain) is included."
              ]
            },
            {
              "name": "SupportedVersionChanged",
              "fields": [
                {
                  "name": "location",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "version",
                  "type": 4,
                  "typeName": "XcmVersion",
                  "docs": []
                }
              ],
              "index": 13,
              "docs": [
                "The supported version of a location has been changed. This might be through an",
                "automatic notification or a manual intervention."
              ]
            },
            {
              "name": "NotifyTargetSendFail",
              "fields": [
                {
                  "name": "location",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "error",
                  "type": 390,
                  "typeName": "XcmError",
                  "docs": []
                }
              ],
              "index": 14,
              "docs": [
                "A given location which had a version change subscription was dropped owing to an error",
                "sending the notification to it."
              ]
            },
            {
              "name": "NotifyTargetMigrationFail",
              "fields": [
                {
                  "name": "location",
                  "type": 350,
                  "typeName": "VersionedMultiLocation",
                  "docs": []
                },
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                }
              ],
              "index": 15,
              "docs": [
                "A given location which had a version change subscription was dropped owing to an error",
                "migrating the location to our new XCM format."
              ]
            },
            {
              "name": "InvalidQuerierVersion",
              "fields": [
                {
                  "name": "origin",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                }
              ],
              "index": 16,
              "docs": [
                "Expected query response has been received but the expected querier location placed in",
                "storage by this runtime previously cannot be decoded. The query remains registered.",
                "",
                "This is unexpected (since a location placed in storage in a previously executing",
                "runtime should be readable prior to query timeout) and dangerous since the possibly",
                "valid response will be dropped. Manual governance intervention is probably going to be",
                "needed."
              ]
            },
            {
              "name": "InvalidQuerier",
              "fields": [
                {
                  "name": "origin",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "query_id",
                  "type": 11,
                  "typeName": "QueryId",
                  "docs": []
                },
                {
                  "name": "expected_querier",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "maybe_actual_querier",
                  "type": 397,
                  "typeName": "Option<MultiLocation>",
                  "docs": []
                }
              ],
              "index": 17,
              "docs": [
                "Expected query response has been received but the querier location of the response does",
                "not match the expected. The query remains registered for a later, valid, response to",
                "be received and acted upon."
              ]
            },
            {
              "name": "VersionNotifyStarted",
              "fields": [
                {
                  "name": "destination",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "cost",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "message_id",
                  "type": 1,
                  "typeName": "XcmHash",
                  "docs": []
                }
              ],
              "index": 18,
              "docs": [
                "A remote has requested XCM version change notification from us and we have honored it.",
                "A version information message is sent to them and its cost is included."
              ]
            },
            {
              "name": "VersionNotifyRequested",
              "fields": [
                {
                  "name": "destination",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "cost",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "message_id",
                  "type": 1,
                  "typeName": "XcmHash",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "We have requested that a remote chain send us XCM version change notifications."
              ]
            },
            {
              "name": "VersionNotifyUnrequested",
              "fields": [
                {
                  "name": "destination",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "cost",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                },
                {
                  "name": "message_id",
                  "type": 1,
                  "typeName": "XcmHash",
                  "docs": []
                }
              ],
              "index": 20,
              "docs": [
                "We have requested that a remote chain stops sending us XCM version change",
                "notifications."
              ]
            },
            {
              "name": "FeesPaid",
              "fields": [
                {
                  "name": "paying",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "fees",
                  "type": 381,
                  "typeName": "MultiAssets",
                  "docs": []
                }
              ],
              "index": 21,
              "docs": [
                "Fees were paid from a location for an operation (often for using `SendXcm`)."
              ]
            },
            {
              "name": "AssetsClaimed",
              "fields": [
                {
                  "name": "hash",
                  "type": 12,
                  "typeName": "H256",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 136,
                  "typeName": "MultiLocation",
                  "docs": []
                },
                {
                  "name": "assets",
                  "type": 403,
                  "typeName": "VersionedMultiAssets",
                  "docs": []
                }
              ],
              "index": 22,
              "docs": [
                "Some assets have been claimed from an asset trap"
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 451,
    "type": {
      "path": [
        "xcm",
        "v3",
        "traits",
        "Outcome"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Complete",
              "fields": [
                {
                  "name": null,
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Incomplete",
              "fields": [
                {
                  "name": null,
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 390,
                  "typeName": "Error",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Error",
              "fields": [
                {
                  "name": null,
                  "type": 390,
                  "typeName": "Error",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 452,
    "type": {
      "path": [
        "pallet_message_queue",
        "pallet",
        "Event"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ProcessingFailed",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 413,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "error",
                  "type": 453,
                  "typeName": "ProcessMessageError",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "Message discarded due to an error in the `MessageProcessor` (usually a format error)."
              ]
            },
            {
              "name": "Processed",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 413,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "weight_used",
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "success",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": [
                "Message is processed."
              ]
            },
            {
              "name": "OverweightEnqueued",
              "fields": [
                {
                  "name": "id",
                  "type": 1,
                  "typeName": "[u8; 32]",
                  "docs": []
                },
                {
                  "name": "origin",
                  "type": 413,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "page_index",
                  "type": 4,
                  "typeName": "PageIndex",
                  "docs": []
                },
                {
                  "name": "message_index",
                  "type": 4,
                  "typeName": "T::Size",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": [
                "Message placed in overweight queue."
              ]
            },
            {
              "name": "PageReaped",
              "fields": [
                {
                  "name": "origin",
                  "type": 413,
                  "typeName": "MessageOriginOf<T>",
                  "docs": []
                },
                {
                  "name": "index",
                  "type": 4,
                  "typeName": "PageIndex",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": [
                "This page was reaped."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Event` enum of this pallet"
      ]
    }
  },
  {
    "id": 453,
    "type": {
      "path": [
        "frame_support",
        "traits",
        "messages",
        "ProcessMessageError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "BadFormat",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Corrupt",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Unsupported",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "Overweight",
              "fields": [
                {
                  "name": null,
                  "type": 9,
                  "typeName": "Weight",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Yield",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 454,
    "type": {
      "path": [
        "frame_system",
        "Phase"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ApplyExtrinsic",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Finalization",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Initialization",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 455,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 12
        }
      },
      "docs": []
    }
  },
  {
    "id": 456,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 31
        }
      },
      "docs": []
    }
  },
  {
    "id": 457,
    "type": {
      "path": [
        "frame_system",
        "LastRuntimeUpgradeInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "spec_version",
              "type": 79,
              "typeName": "codec::Compact<u32>",
              "docs": []
            },
            {
              "name": "spec_name",
              "type": 458,
              "typeName": "sp_runtime::RuntimeString",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 458,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "Str"
      },
      "docs": []
    }
  },
  {
    "id": 459,
    "type": {
      "path": [
        "frame_system",
        "limits",
        "BlockWeights"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "base_block",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "max_block",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "per_class",
              "type": 460,
              "typeName": "PerDispatchClass<WeightsPerClass>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 460,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "PerDispatchClass"
      ],
      "params": [
        {
          "name": "T",
          "type": 461
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "normal",
              "type": 461,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "operational",
              "type": 461,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "mandatory",
              "type": 461,
              "typeName": "T",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 461,
    "type": {
      "path": [
        "frame_system",
        "limits",
        "WeightsPerClass"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "base_extrinsic",
              "type": 9,
              "typeName": "Weight",
              "docs": []
            },
            {
              "name": "max_extrinsic",
              "type": 420,
              "typeName": "Option<Weight>",
              "docs": []
            },
            {
              "name": "max_total",
              "type": 420,
              "typeName": "Option<Weight>",
              "docs": []
            },
            {
              "name": "reserved",
              "type": 420,
              "typeName": "Option<Weight>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 462,
    "type": {
      "path": [
        "frame_system",
        "limits",
        "BlockLength"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "max",
              "type": 463,
              "typeName": "PerDispatchClass<u32>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 463,
    "type": {
      "path": [
        "frame_support",
        "dispatch",
        "PerDispatchClass"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "normal",
              "type": 4,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "operational",
              "type": 4,
              "typeName": "T",
              "docs": []
            },
            {
              "name": "mandatory",
              "type": 4,
              "typeName": "T",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 464,
    "type": {
      "path": [
        "sp_weights",
        "RuntimeDbWeight"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "read",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "write",
              "type": 11,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 465,
    "type": {
      "path": [
        "sp_version",
        "RuntimeVersion"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "spec_name",
              "type": 458,
              "typeName": "RuntimeString",
              "docs": []
            },
            {
              "name": "impl_name",
              "type": 458,
              "typeName": "RuntimeString",
              "docs": []
            },
            {
              "name": "authoring_version",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "spec_version",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "impl_version",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "apis",
              "type": 466,
              "typeName": "ApisVec",
              "docs": []
            },
            {
              "name": "transaction_version",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "state_version",
              "type": 2,
              "typeName": "u8",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 466,
    "type": {
      "path": [
        "Cow"
      ],
      "params": [
        {
          "name": "T",
          "type": 467
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 467,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 467,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 468
        }
      },
      "docs": []
    }
  },
  {
    "id": 468,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          172,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 469,
    "type": {
      "path": [
        "frame_system",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidSpecName",
              "fields": [],
              "index": 0,
              "docs": [
                "The name of specification does not match between the current runtime",
                "and the new runtime."
              ]
            },
            {
              "name": "SpecVersionNeedsToIncrease",
              "fields": [],
              "index": 1,
              "docs": [
                "The specification version is not allowed to decrease between the current runtime",
                "and the new runtime."
              ]
            },
            {
              "name": "FailedToExtractRuntimeVersion",
              "fields": [],
              "index": 2,
              "docs": [
                "Failed to extract the runtime version from the new runtime.",
                "",
                "Either calling `Core_version` or decoding `RuntimeVersion` failed."
              ]
            },
            {
              "name": "NonDefaultComposite",
              "fields": [],
              "index": 3,
              "docs": [
                "Suicide called when the account has non-default composite data."
              ]
            },
            {
              "name": "NonZeroRefCount",
              "fields": [],
              "index": 4,
              "docs": [
                "There is a non-zero reference count preventing the account from being purged."
              ]
            },
            {
              "name": "CallFiltered",
              "fields": [],
              "index": 5,
              "docs": [
                "The origin filter prevent the call to be dispatched."
              ]
            }
          ]
        }
      },
      "docs": [
        "Error for the System pallet"
      ]
    }
  },
  {
    "id": 470,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 471
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 473,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 471,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 472
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 472,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 472,
    "type": {
      "path": [
        "pallet_scheduler",
        "Scheduled"
      ],
      "params": [
        {
          "name": "Name",
          "type": 1
        },
        {
          "name": "Call",
          "type": 67
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "PalletsOrigin",
          "type": 130
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "maybe_id",
              "type": 32,
              "typeName": "Option<Name>",
              "docs": []
            },
            {
              "name": "priority",
              "type": 2,
              "typeName": "schedule::Priority",
              "docs": []
            },
            {
              "name": "call",
              "type": 67,
              "typeName": "Call",
              "docs": []
            },
            {
              "name": "maybe_periodic",
              "type": 74,
              "typeName": "Option<schedule::Period<BlockNumber>>",
              "docs": []
            },
            {
              "name": "origin",
              "type": 130,
              "typeName": "PalletsOrigin",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 473,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 471
        }
      },
      "docs": []
    }
  },
  {
    "id": 474,
    "type": {
      "path": [
        "pallet_scheduler",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "FailedToSchedule",
              "fields": [],
              "index": 0,
              "docs": [
                "Failed to schedule a call"
              ]
            },
            {
              "name": "NotFound",
              "fields": [],
              "index": 1,
              "docs": [
                "Cannot find the scheduled call."
              ]
            },
            {
              "name": "TargetBlockNumberInPast",
              "fields": [],
              "index": 2,
              "docs": [
                "Given target block number is in the past."
              ]
            },
            {
              "name": "RescheduleNoChange",
              "fields": [],
              "index": 3,
              "docs": [
                "Reschedule failed because it does not change scheduled time."
              ]
            },
            {
              "name": "Named",
              "fields": [],
              "index": 4,
              "docs": [
                "Attempt to use a non-named function on a named task."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 475,
    "type": {
      "path": [
        "pallet_preimage",
        "RequestStatus"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unrequested",
              "fields": [
                {
                  "name": "deposit",
                  "type": 269,
                  "typeName": "(AccountId, Balance)",
                  "docs": []
                },
                {
                  "name": "len",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Requested",
              "fields": [
                {
                  "name": "deposit",
                  "type": 476,
                  "typeName": "Option<(AccountId, Balance)>",
                  "docs": []
                },
                {
                  "name": "count",
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "len",
                  "type": 270,
                  "typeName": "Option<u32>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 476,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 269
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 269,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 477,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          12,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 478,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 479,
    "type": {
      "path": [
        "pallet_preimage",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TooBig",
              "fields": [],
              "index": 0,
              "docs": [
                "Preimage is too large to store on-chain."
              ]
            },
            {
              "name": "AlreadyNoted",
              "fields": [],
              "index": 1,
              "docs": [
                "Preimage has already been noted on-chain."
              ]
            },
            {
              "name": "NotAuthorized",
              "fields": [],
              "index": 2,
              "docs": [
                "The user is not authorized to perform this action."
              ]
            },
            {
              "name": "NotNoted",
              "fields": [],
              "index": 3,
              "docs": [
                "The preimage cannot be removed since it has not yet been noted."
              ]
            },
            {
              "name": "Requested",
              "fields": [],
              "index": 4,
              "docs": [
                "A preimage may not be removed when there are outstanding requests."
              ]
            },
            {
              "name": "NotRequested",
              "fields": [],
              "index": 5,
              "docs": [
                "The preimage request cannot be removed since no outstanding requests exist."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 480,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 481
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 482,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 481,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          80,
          11
        ]
      },
      "docs": []
    }
  },
  {
    "id": 482,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 481
        }
      },
      "docs": []
    }
  },
  {
    "id": 483,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 1
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 484,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 484,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 1
        }
      },
      "docs": []
    }
  },
  {
    "id": 485,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 486
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 486,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 486,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "PreDigest"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Primary",
              "fields": [
                {
                  "name": null,
                  "type": 487,
                  "typeName": "PrimaryPreDigest",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "SecondaryPlain",
              "fields": [
                {
                  "name": null,
                  "type": 489,
                  "typeName": "SecondaryPlainPreDigest",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "SecondaryVRF",
              "fields": [
                {
                  "name": null,
                  "type": 490,
                  "typeName": "SecondaryVRFPreDigest",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 487,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "PrimaryPreDigest"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "authority_index",
              "type": 4,
              "typeName": "super::AuthorityIndex",
              "docs": []
            },
            {
              "name": "slot",
              "type": 81,
              "typeName": "Slot",
              "docs": []
            },
            {
              "name": "vrf_signature",
              "type": 488,
              "typeName": "VrfSignature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 488,
    "type": {
      "path": [
        "sp_core",
        "sr25519",
        "vrf",
        "VrfSignature"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "output",
              "type": 1,
              "typeName": "VrfOutput",
              "docs": []
            },
            {
              "name": "proof",
              "type": 114,
              "typeName": "VrfProof",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 489,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "SecondaryPlainPreDigest"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "authority_index",
              "type": 4,
              "typeName": "super::AuthorityIndex",
              "docs": []
            },
            {
              "name": "slot",
              "type": 81,
              "typeName": "Slot",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 490,
    "type": {
      "path": [
        "sp_consensus_babe",
        "digests",
        "SecondaryVRFPreDigest"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "authority_index",
              "type": 4,
              "typeName": "super::AuthorityIndex",
              "docs": []
            },
            {
              "name": "slot",
              "type": 81,
              "typeName": "Slot",
              "docs": []
            },
            {
              "name": "vrf_signature",
              "type": 488,
              "typeName": "VrfSignature",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 491,
    "type": {
      "path": [
        "sp_consensus_babe",
        "BabeEpochConfiguration"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "c",
              "type": 84,
              "typeName": "(u64, u64)",
              "docs": []
            },
            {
              "name": "allowed_slots",
              "type": 85,
              "typeName": "AllowedSlots",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 492,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 493
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 494,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 493,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          11,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 494,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 493
        }
      },
      "docs": []
    }
  },
  {
    "id": 495,
    "type": {
      "path": [
        "pallet_babe",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidEquivocationProof",
              "fields": [],
              "index": 0,
              "docs": [
                "An equivocation proof provided as part of an equivocation report is invalid."
              ]
            },
            {
              "name": "InvalidKeyOwnershipProof",
              "fields": [],
              "index": 1,
              "docs": [
                "A key ownership proof provided as part of an equivocation report is invalid."
              ]
            },
            {
              "name": "DuplicateOffenceReport",
              "fields": [],
              "index": 2,
              "docs": [
                "A given equivocation report is valid but already previously reported."
              ]
            },
            {
              "name": "InvalidConfiguration",
              "fields": [],
              "index": 3,
              "docs": [
                "Submitted configuration is invalid."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 496,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          6,
          44
        ]
      },
      "docs": []
    }
  },
  {
    "id": 497,
    "type": {
      "path": [
        "pallet_indices",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotAssigned",
              "fields": [],
              "index": 0,
              "docs": [
                "The index was not already assigned."
              ]
            },
            {
              "name": "NotOwner",
              "fields": [],
              "index": 1,
              "docs": [
                "The index is assigned to another account."
              ]
            },
            {
              "name": "InUse",
              "fields": [],
              "index": 2,
              "docs": [
                "The index was not available."
              ]
            },
            {
              "name": "NotTransfer",
              "fields": [],
              "index": 3,
              "docs": [
                "The source and destination accounts are identical."
              ]
            },
            {
              "name": "Permanent",
              "fields": [],
              "index": 4,
              "docs": [
                "The index is permanent and may not be freed/changed."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 498,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 499
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 501,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 499,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "BalanceLock"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 172,
              "typeName": "LockIdentifier",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "reasons",
              "type": 500,
              "typeName": "Reasons",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 500,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "Reasons"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Fee",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Misc",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "All",
              "fields": [],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 501,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 499
        }
      },
      "docs": []
    }
  },
  {
    "id": 502,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 503
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 504,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 503,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "ReserveData"
      ],
      "params": [
        {
          "name": "ReserveIdentifier",
          "type": 172
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 172,
              "typeName": "ReserveIdentifier",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 504,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 503
        }
      },
      "docs": []
    }
  },
  {
    "id": 505,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 506
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 508,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 506,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "IdAmount"
      ],
      "params": [
        {
          "name": "Id",
          "type": 507
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 507,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 507,
    "type": {
      "path": [
        "polkadot_runtime",
        "RuntimeHoldReason"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 508,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 506
        }
      },
      "docs": []
    }
  },
  {
    "id": 509,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 510
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 511,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 510,
    "type": {
      "path": [
        "pallet_balances",
        "types",
        "IdAmount"
      ],
      "params": [
        {
          "name": "Id",
          "type": 34
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 34,
              "typeName": "Id",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 511,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 510
        }
      },
      "docs": []
    }
  },
  {
    "id": 512,
    "type": {
      "path": [
        "pallet_balances",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "VestingBalance",
              "fields": [],
              "index": 0,
              "docs": [
                "Vesting balance too high to send value."
              ]
            },
            {
              "name": "LiquidityRestrictions",
              "fields": [],
              "index": 1,
              "docs": [
                "Account liquidity restrictions prevent withdrawal."
              ]
            },
            {
              "name": "InsufficientBalance",
              "fields": [],
              "index": 2,
              "docs": [
                "Balance too low to send value."
              ]
            },
            {
              "name": "ExistentialDeposit",
              "fields": [],
              "index": 3,
              "docs": [
                "Value too low to create account due to existential deposit."
              ]
            },
            {
              "name": "Expendability",
              "fields": [],
              "index": 4,
              "docs": [
                "Transfer/payment would kill account."
              ]
            },
            {
              "name": "ExistingVestingSchedule",
              "fields": [],
              "index": 5,
              "docs": [
                "A vesting schedule already exists for this account."
              ]
            },
            {
              "name": "DeadAccount",
              "fields": [],
              "index": 6,
              "docs": [
                "Beneficiary account must pre-exist."
              ]
            },
            {
              "name": "TooManyReserves",
              "fields": [],
              "index": 7,
              "docs": [
                "Number of named reserves exceed `MaxReserves`."
              ]
            },
            {
              "name": "TooManyHolds",
              "fields": [],
              "index": 8,
              "docs": [
                "Number of holds exceed `MaxHolds`."
              ]
            },
            {
              "name": "TooManyFreezes",
              "fields": [],
              "index": 9,
              "docs": [
                "Number of freezes exceed `MaxFreezes`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 513,
    "type": {
      "path": [
        "sp_arithmetic",
        "fixed_point",
        "FixedU128"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 6,
              "typeName": "u128",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 514,
    "type": {
      "path": [
        "pallet_transaction_payment",
        "Releases"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V1Ancient",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "V2",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 515,
    "type": {
      "path": [
        "pallet_staking",
        "StakingLedger"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "stash",
              "type": 0,
              "typeName": "T::AccountId",
              "docs": []
            },
            {
              "name": "total",
              "type": 60,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "active",
              "type": 60,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "unlocking",
              "type": 516,
              "typeName": "BoundedVec<UnlockChunk<BalanceOf<T>>, T::MaxUnlockingChunks>",
              "docs": []
            },
            {
              "name": "claimed_rewards",
              "type": 519,
              "typeName": "BoundedVec<EraIndex, T::HistoryDepth>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 516,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 517
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 518,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 517,
    "type": {
      "path": [
        "pallet_staking",
        "UnlockChunk"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 60,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "era",
              "type": 79,
              "typeName": "EraIndex",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 518,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 517
        }
      },
      "docs": []
    }
  },
  {
    "id": 519,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 97,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 520,
    "type": {
      "path": [
        "pallet_staking",
        "Nominations"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "targets",
              "type": 521,
              "typeName": "BoundedVec<T::AccountId, MaxNominationsOf<T>>",
              "docs": []
            },
            {
              "name": "submitted_in",
              "type": 4,
              "typeName": "EraIndex",
              "docs": []
            },
            {
              "name": "suppressed",
              "type": 44,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 521,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 92,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 522,
    "type": {
      "path": [
        "pallet_staking",
        "ActiveEraInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "index",
              "type": 4,
              "typeName": "EraIndex",
              "docs": []
            },
            {
              "name": "start",
              "type": 523,
              "typeName": "Option<u64>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 523,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 11
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 11,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 524,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          0
        ]
      },
      "docs": []
    }
  },
  {
    "id": 525,
    "type": {
      "path": [
        "pallet_staking",
        "EraRewardPoints"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "total",
              "type": 4,
              "typeName": "RewardPoint",
              "docs": []
            },
            {
              "name": "individual",
              "type": 526,
              "typeName": "BTreeMap<AccountId, RewardPoint>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 526,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 0
        },
        {
          "name": "V",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 527,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 527,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 528
        }
      },
      "docs": []
    }
  },
  {
    "id": 528,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 529,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 530
        }
      },
      "docs": []
    }
  },
  {
    "id": 530,
    "type": {
      "path": [
        "pallet_staking",
        "UnappliedSlash"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "validator",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "own",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "others",
              "type": 268,
              "typeName": "Vec<(AccountId, Balance)>",
              "docs": []
            },
            {
              "name": "reporters",
              "type": 92,
              "typeName": "Vec<AccountId>",
              "docs": []
            },
            {
              "name": "payout",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 531,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          41,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 532,
    "type": {
      "path": [
        "pallet_staking",
        "slashing",
        "SlashingSpans"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "span_index",
              "type": 4,
              "typeName": "SpanIndex",
              "docs": []
            },
            {
              "name": "last_start",
              "type": 4,
              "typeName": "EraIndex",
              "docs": []
            },
            {
              "name": "last_nonzero_slash",
              "type": 4,
              "typeName": "EraIndex",
              "docs": []
            },
            {
              "name": "prior",
              "type": 97,
              "typeName": "Vec<EraIndex>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 533,
    "type": {
      "path": [
        "pallet_staking",
        "slashing",
        "SpanRecord"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "slashed",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "paid_out",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 534,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 535
        }
      },
      "docs": []
    }
  },
  {
    "id": 535,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          44
        ]
      },
      "docs": []
    }
  },
  {
    "id": 536,
    "type": {
      "path": [
        "pallet_staking",
        "pallet",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotController",
              "fields": [],
              "index": 0,
              "docs": [
                "Not a controller account."
              ]
            },
            {
              "name": "NotStash",
              "fields": [],
              "index": 1,
              "docs": [
                "Not a stash account."
              ]
            },
            {
              "name": "AlreadyBonded",
              "fields": [],
              "index": 2,
              "docs": [
                "Stash is already bonded."
              ]
            },
            {
              "name": "AlreadyPaired",
              "fields": [],
              "index": 3,
              "docs": [
                "Controller is already paired."
              ]
            },
            {
              "name": "EmptyTargets",
              "fields": [],
              "index": 4,
              "docs": [
                "Targets cannot be empty."
              ]
            },
            {
              "name": "DuplicateIndex",
              "fields": [],
              "index": 5,
              "docs": [
                "Duplicate index."
              ]
            },
            {
              "name": "InvalidSlashIndex",
              "fields": [],
              "index": 6,
              "docs": [
                "Slash record index out of bounds."
              ]
            },
            {
              "name": "InsufficientBond",
              "fields": [],
              "index": 7,
              "docs": [
                "Cannot have a validator or nominator role, with value less than the minimum defined by",
                "governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the",
                "intention, `chill` first to remove one's role as validator/nominator."
              ]
            },
            {
              "name": "NoMoreChunks",
              "fields": [],
              "index": 8,
              "docs": [
                "Can not schedule more unlock chunks."
              ]
            },
            {
              "name": "NoUnlockChunk",
              "fields": [],
              "index": 9,
              "docs": [
                "Can not rebond without unlocking chunks."
              ]
            },
            {
              "name": "FundedTarget",
              "fields": [],
              "index": 10,
              "docs": [
                "Attempting to target a stash that still has funds."
              ]
            },
            {
              "name": "InvalidEraToReward",
              "fields": [],
              "index": 11,
              "docs": [
                "Invalid era to reward."
              ]
            },
            {
              "name": "InvalidNumberOfNominations",
              "fields": [],
              "index": 12,
              "docs": [
                "Invalid number of nominations."
              ]
            },
            {
              "name": "NotSortedAndUnique",
              "fields": [],
              "index": 13,
              "docs": [
                "Items are not sorted and unique."
              ]
            },
            {
              "name": "AlreadyClaimed",
              "fields": [],
              "index": 14,
              "docs": [
                "Rewards for this era have already been claimed for this validator."
              ]
            },
            {
              "name": "IncorrectHistoryDepth",
              "fields": [],
              "index": 15,
              "docs": [
                "Incorrect previous history depth input provided."
              ]
            },
            {
              "name": "IncorrectSlashingSpans",
              "fields": [],
              "index": 16,
              "docs": [
                "Incorrect number of slashing spans provided."
              ]
            },
            {
              "name": "BadState",
              "fields": [],
              "index": 17,
              "docs": [
                "Internal state has become somehow corrupted and the operation cannot continue."
              ]
            },
            {
              "name": "TooManyTargets",
              "fields": [],
              "index": 18,
              "docs": [
                "Too many nomination targets supplied."
              ]
            },
            {
              "name": "BadTarget",
              "fields": [],
              "index": 19,
              "docs": [
                "A nomination target was supplied that was blocked or otherwise not a validator."
              ]
            },
            {
              "name": "CannotChillOther",
              "fields": [],
              "index": 20,
              "docs": [
                "The user has enough bond and thus cannot be chilled forcefully by an external person."
              ]
            },
            {
              "name": "TooManyNominators",
              "fields": [],
              "index": 21,
              "docs": [
                "There are too many nominators in the system. Governance needs to adjust the staking",
                "settings to keep things safe for the runtime."
              ]
            },
            {
              "name": "TooManyValidators",
              "fields": [],
              "index": 22,
              "docs": [
                "There are too many validator candidates in the system. Governance needs to adjust the",
                "staking settings to keep things safe for the runtime."
              ]
            },
            {
              "name": "CommissionTooLow",
              "fields": [],
              "index": 23,
              "docs": [
                "Commission is too low. Must be at least `MinCommission`."
              ]
            },
            {
              "name": "BoundNotMet",
              "fields": [],
              "index": 24,
              "docs": [
                "Some bound is not met."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 537,
    "type": {
      "path": [
        "sp_staking",
        "offence",
        "OffenceDetails"
      ],
      "params": [
        {
          "name": "Reporter",
          "type": 0
        },
        {
          "name": "Offender",
          "type": 58
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "offender",
              "type": 58,
              "typeName": "Offender",
              "docs": []
            },
            {
              "name": "reporters",
              "type": 92,
              "typeName": "Vec<Reporter>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 538,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          47,
          13
        ]
      },
      "docs": []
    }
  },
  {
    "id": 539,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 540
        }
      },
      "docs": []
    }
  },
  {
    "id": 540,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          103
        ]
      },
      "docs": []
    }
  },
  {
    "id": 541,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          542,
          13
        ]
      },
      "docs": []
    }
  },
  {
    "id": 542,
    "type": {
      "path": [
        "sp_core",
        "crypto",
        "KeyTypeId"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 17,
              "typeName": "[u8; 4]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 543,
    "type": {
      "path": [
        "pallet_session",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidProof",
              "fields": [],
              "index": 0,
              "docs": [
                "Invalid ownership proof."
              ]
            },
            {
              "name": "NoAssociatedValidatorId",
              "fields": [],
              "index": 1,
              "docs": [
                "No associated validator ID for account."
              ]
            },
            {
              "name": "DuplicatedKey",
              "fields": [],
              "index": 2,
              "docs": [
                "Registered duplicate key."
              ]
            },
            {
              "name": "NoKeys",
              "fields": [],
              "index": 3,
              "docs": [
                "No keys are associated with this account."
              ]
            },
            {
              "name": "NoAccount",
              "fields": [],
              "index": 4,
              "docs": [
                "Key setting account is not live, so it's impossible to associate keys."
              ]
            }
          ]
        }
      },
      "docs": [
        "Error for the session pallet."
      ]
    }
  },
  {
    "id": 544,
    "type": {
      "path": [
        "pallet_grandpa",
        "StoredState"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Live",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "PendingPause",
              "fields": [
                {
                  "name": "scheduled_at",
                  "type": 4,
                  "typeName": "N",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "N",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Paused",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "PendingResume",
              "fields": [
                {
                  "name": "scheduled_at",
                  "type": 4,
                  "typeName": "N",
                  "docs": []
                },
                {
                  "name": "delay",
                  "type": 4,
                  "typeName": "N",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 545,
    "type": {
      "path": [
        "pallet_grandpa",
        "StoredPendingChange"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        },
        {
          "name": "Limit",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "scheduled_at",
              "type": 4,
              "typeName": "N",
              "docs": []
            },
            {
              "name": "delay",
              "type": 4,
              "typeName": "N",
              "docs": []
            },
            {
              "name": "next_authorities",
              "type": 546,
              "typeName": "BoundedAuthorityList<Limit>",
              "docs": []
            },
            {
              "name": "forced",
              "type": 270,
              "typeName": "Option<N>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 546,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 51
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 50,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 547,
    "type": {
      "path": [
        "pallet_grandpa",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PauseFailed",
              "fields": [],
              "index": 0,
              "docs": [
                "Attempt to signal GRANDPA pause when the authority set isn't live",
                "(either paused or already pending pause)."
              ]
            },
            {
              "name": "ResumeFailed",
              "fields": [],
              "index": 1,
              "docs": [
                "Attempt to signal GRANDPA resume when the authority set isn't paused",
                "(either live or already pending resume)."
              ]
            },
            {
              "name": "ChangePending",
              "fields": [],
              "index": 2,
              "docs": [
                "Attempt to signal GRANDPA change with one already pending."
              ]
            },
            {
              "name": "TooSoon",
              "fields": [],
              "index": 3,
              "docs": [
                "Cannot signal forced change so soon after last."
              ]
            },
            {
              "name": "InvalidKeyOwnershipProof",
              "fields": [],
              "index": 4,
              "docs": [
                "A key ownership proof provided as part of an equivocation report is invalid."
              ]
            },
            {
              "name": "InvalidEquivocationProof",
              "fields": [],
              "index": 5,
              "docs": [
                "An equivocation proof provided as part of an equivocation report is invalid."
              ]
            },
            {
              "name": "DuplicateOffenceReport",
              "fields": [],
              "index": 6,
              "docs": [
                "A given equivocation report is valid but already previously reported."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 548,
    "type": {
      "path": [
        "bounded_collections",
        "weak_bounded_vec",
        "WeakBoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 55
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 549,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 549,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 55
        }
      },
      "docs": []
    }
  },
  {
    "id": 550,
    "type": {
      "path": [
        "pallet_im_online",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidKey",
              "fields": [],
              "index": 0,
              "docs": [
                "Non existent public key."
              ]
            },
            {
              "name": "DuplicatedHeartbeat",
              "fields": [],
              "index": 1,
              "docs": [
                "Duplicated heartbeat."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 551,
    "type": {
      "path": [
        "pallet_treasury",
        "Proposal"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "proposer",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "value",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "beneficiary",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "bond",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 552,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 97,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 553,
    "type": {
      "path": [
        "sp_arithmetic",
        "per_things",
        "Permill"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 554,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 6
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 6,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 555,
    "type": {
      "path": [
        "frame_support",
        "PalletId"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 172,
              "typeName": "[u8; 8]",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 556,
    "type": {
      "path": [
        "pallet_treasury",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InsufficientProposersBalance",
              "fields": [],
              "index": 0,
              "docs": [
                "Proposer's balance is too low."
              ]
            },
            {
              "name": "InvalidIndex",
              "fields": [],
              "index": 1,
              "docs": [
                "No proposal or bounty at that index."
              ]
            },
            {
              "name": "TooManyApprovals",
              "fields": [],
              "index": 2,
              "docs": [
                "Too many approvals in the queue."
              ]
            },
            {
              "name": "InsufficientPermission",
              "fields": [],
              "index": 3,
              "docs": [
                "The spend origin is valid but the amount it is allowed to spend is lower than the",
                "amount to be spent."
              ]
            },
            {
              "name": "ProposalNotApproved",
              "fields": [],
              "index": 4,
              "docs": [
                "Proposal has not been approved."
              ]
            }
          ]
        }
      },
      "docs": [
        "Error for the treasury pallet."
      ]
    }
  },
  {
    "id": 557,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          66
        ]
      },
      "docs": []
    }
  },
  {
    "id": 558,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "Voting"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "PollIndex",
          "type": 4
        },
        {
          "name": "MaxVotes",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Casting",
              "fields": [
                {
                  "name": null,
                  "type": 559,
                  "typeName": "Casting<Balance, BlockNumber, PollIndex, MaxVotes>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Delegating",
              "fields": [
                {
                  "name": null,
                  "type": 565,
                  "typeName": "Delegating<Balance, AccountId, BlockNumber>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 559,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "Casting"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "PollIndex",
          "type": 4
        },
        {
          "name": "MaxVotes",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "votes",
              "type": 560,
              "typeName": "BoundedVec<(PollIndex, AccountVote<Balance>), MaxVotes>",
              "docs": []
            },
            {
              "name": "delegations",
              "type": 563,
              "typeName": "Delegations<Balance>",
              "docs": []
            },
            {
              "name": "prior",
              "type": 564,
              "typeName": "PriorLock<BlockNumber, Balance>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 560,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 561
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 562,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 561,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          125
        ]
      },
      "docs": []
    }
  },
  {
    "id": 562,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 561
        }
      },
      "docs": []
    }
  },
  {
    "id": 563,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "types",
        "Delegations"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "votes",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "capital",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 564,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "PriorLock"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": null,
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 565,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "vote",
        "Delegating"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "balance",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "target",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "conviction",
              "type": 127,
              "typeName": "Conviction",
              "docs": []
            },
            {
              "name": "delegations",
              "type": 563,
              "typeName": "Delegations<Balance>",
              "docs": []
            },
            {
              "name": "prior",
              "type": 564,
              "typeName": "PriorLock<BlockNumber, Balance>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 566,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 567
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 568,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 567,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          66,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 568,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 567
        }
      },
      "docs": []
    }
  },
  {
    "id": 569,
    "type": {
      "path": [
        "pallet_conviction_voting",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotOngoing",
              "fields": [],
              "index": 0,
              "docs": [
                "Poll is not ongoing."
              ]
            },
            {
              "name": "NotVoter",
              "fields": [],
              "index": 1,
              "docs": [
                "The given account did not vote on the poll."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 2,
              "docs": [
                "The actor has no permission to conduct the action."
              ]
            },
            {
              "name": "NoPermissionYet",
              "fields": [],
              "index": 3,
              "docs": [
                "The actor has no permission to conduct the action right now but will do in the future."
              ]
            },
            {
              "name": "AlreadyDelegating",
              "fields": [],
              "index": 4,
              "docs": [
                "The account is already delegating."
              ]
            },
            {
              "name": "AlreadyVoting",
              "fields": [],
              "index": 5,
              "docs": [
                "The account currently has votes attached to it and the operation cannot succeed until",
                "these are removed, either through `unvote` or `reap_vote`."
              ]
            },
            {
              "name": "InsufficientFunds",
              "fields": [],
              "index": 6,
              "docs": [
                "Too high a balance was provided that the account cannot afford."
              ]
            },
            {
              "name": "NotDelegating",
              "fields": [],
              "index": 7,
              "docs": [
                "The account is not currently delegating."
              ]
            },
            {
              "name": "Nonsense",
              "fields": [],
              "index": 8,
              "docs": [
                "Delegation to oneself makes no sense."
              ]
            },
            {
              "name": "MaxVotesReached",
              "fields": [],
              "index": 9,
              "docs": [
                "Maximum number of votes reached."
              ]
            },
            {
              "name": "ClassNeeded",
              "fields": [],
              "index": 10,
              "docs": [
                "The class must be supplied since it is not easily determinable from the state."
              ]
            },
            {
              "name": "BadClass",
              "fields": [],
              "index": 11,
              "docs": [
                "The class ID supplied is invalid."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 570,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "ReferendumInfo"
      ],
      "params": [
        {
          "name": "TrackId",
          "type": 66
        },
        {
          "name": "RuntimeOrigin",
          "type": 130
        },
        {
          "name": "Moment",
          "type": 4
        },
        {
          "name": "Call",
          "type": 67
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Tally",
          "type": 416
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "ScheduleAddress",
          "type": 31
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Ongoing",
              "fields": [
                {
                  "name": null,
                  "type": 571,
                  "typeName": "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Approved",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 573,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 573,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Rejected",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 573,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 573,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Cancelled",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 573,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 573,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "TimedOut",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 573,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                },
                {
                  "name": null,
                  "type": 573,
                  "typeName": "Option<Deposit<AccountId, Balance>>",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Killed",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "Moment",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 571,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "ReferendumStatus"
      ],
      "params": [
        {
          "name": "TrackId",
          "type": 66
        },
        {
          "name": "RuntimeOrigin",
          "type": 130
        },
        {
          "name": "Moment",
          "type": 4
        },
        {
          "name": "Call",
          "type": 67
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Tally",
          "type": 416
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "ScheduleAddress",
          "type": 31
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "track",
              "type": 66,
              "typeName": "TrackId",
              "docs": []
            },
            {
              "name": "origin",
              "type": 130,
              "typeName": "RuntimeOrigin",
              "docs": []
            },
            {
              "name": "proposal",
              "type": 67,
              "typeName": "Call",
              "docs": []
            },
            {
              "name": "enactment",
              "type": 144,
              "typeName": "DispatchTime<Moment>",
              "docs": []
            },
            {
              "name": "submitted",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "submission_deposit",
              "type": 572,
              "typeName": "Deposit<AccountId, Balance>",
              "docs": []
            },
            {
              "name": "decision_deposit",
              "type": 573,
              "typeName": "Option<Deposit<AccountId, Balance>>",
              "docs": []
            },
            {
              "name": "deciding",
              "type": 574,
              "typeName": "Option<DecidingStatus<Moment>>",
              "docs": []
            },
            {
              "name": "tally",
              "type": 416,
              "typeName": "Tally",
              "docs": []
            },
            {
              "name": "in_queue",
              "type": 44,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "alarm",
              "type": 576,
              "typeName": "Option<(Moment, ScheduleAddress)>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 572,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "Deposit"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "amount",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 573,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 572
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 572,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 574,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 575
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 575,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 575,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "DecidingStatus"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "since",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "confirming",
              "type": 270,
              "typeName": "Option<BlockNumber>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 576,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 577
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 577,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 577,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          31
        ]
      },
      "docs": []
    }
  },
  {
    "id": 578,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 579
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 580,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 579,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 580,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 579
        }
      },
      "docs": []
    }
  },
  {
    "id": 581,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 582
        }
      },
      "docs": []
    }
  },
  {
    "id": 582,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          66,
          583
        ]
      },
      "docs": []
    }
  },
  {
    "id": 583,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "TrackInfo"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Moment",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "name",
              "type": 458,
              "typeName": "&'static str",
              "docs": []
            },
            {
              "name": "max_deciding",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "decision_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "prepare_period",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "decision_period",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "confirm_period",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "min_enactment_period",
              "type": 4,
              "typeName": "Moment",
              "docs": []
            },
            {
              "name": "min_approval",
              "type": 584,
              "typeName": "Curve",
              "docs": []
            },
            {
              "name": "min_support",
              "type": 584,
              "typeName": "Curve",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 584,
    "type": {
      "path": [
        "pallet_referenda",
        "types",
        "Curve"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "LinearDecreasing",
              "fields": [
                {
                  "name": "length",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "floor",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "ceil",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "SteppedDecreasing",
              "fields": [
                {
                  "name": "begin",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "end",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "step",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                },
                {
                  "name": "period",
                  "type": 41,
                  "typeName": "Perbill",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Reciprocal",
              "fields": [
                {
                  "name": "factor",
                  "type": 585,
                  "typeName": "FixedI64",
                  "docs": []
                },
                {
                  "name": "x_offset",
                  "type": 585,
                  "typeName": "FixedI64",
                  "docs": []
                },
                {
                  "name": "y_offset",
                  "type": 585,
                  "typeName": "FixedI64",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 585,
    "type": {
      "path": [
        "sp_arithmetic",
        "fixed_point",
        "FixedI64"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 586,
              "typeName": "i64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 586,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "primitive": "I64"
      },
      "docs": []
    }
  },
  {
    "id": 587,
    "type": {
      "path": [
        "pallet_referenda",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotOngoing",
              "fields": [],
              "index": 0,
              "docs": [
                "Referendum is not ongoing."
              ]
            },
            {
              "name": "HasDeposit",
              "fields": [],
              "index": 1,
              "docs": [
                "Referendum's decision deposit is already paid."
              ]
            },
            {
              "name": "BadTrack",
              "fields": [],
              "index": 2,
              "docs": [
                "The track identifier given was invalid."
              ]
            },
            {
              "name": "Full",
              "fields": [],
              "index": 3,
              "docs": [
                "There are already a full complement of referenda in progress for this track."
              ]
            },
            {
              "name": "QueueEmpty",
              "fields": [],
              "index": 4,
              "docs": [
                "The queue of the track is empty."
              ]
            },
            {
              "name": "BadReferendum",
              "fields": [],
              "index": 5,
              "docs": [
                "The referendum index provided is invalid in this context."
              ]
            },
            {
              "name": "NothingToDo",
              "fields": [],
              "index": 6,
              "docs": [
                "There was nothing to do in the advancement."
              ]
            },
            {
              "name": "NoTrack",
              "fields": [],
              "index": 7,
              "docs": [
                "No track exists for the proposal origin."
              ]
            },
            {
              "name": "Unfinished",
              "fields": [],
              "index": 8,
              "docs": [
                "Any deposit cannot be refunded until after the decision is over."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 9,
              "docs": [
                "The deposit refunder is not the depositor."
              ]
            },
            {
              "name": "NoDeposit",
              "fields": [],
              "index": 10,
              "docs": [
                "The deposit cannot be refunded since none was made."
              ]
            },
            {
              "name": "BadStatus",
              "fields": [],
              "index": 11,
              "docs": [
                "The referendum status is invalid for this operation."
              ]
            },
            {
              "name": "PreimageNotExist",
              "fields": [],
              "index": 12,
              "docs": [
                "The preimage does not exist."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 588,
    "type": {
      "path": [
        "pallet_whitelist",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "UnavailablePreImage",
              "fields": [],
              "index": 0,
              "docs": [
                "The preimage of the call hash could not be loaded."
              ]
            },
            {
              "name": "UndecodableCall",
              "fields": [],
              "index": 1,
              "docs": [
                "The call could not be decoded."
              ]
            },
            {
              "name": "InvalidCallWeightWitness",
              "fields": [],
              "index": 2,
              "docs": [
                "The weight of the decoded call was higher than the witness."
              ]
            },
            {
              "name": "CallIsNotWhitelisted",
              "fields": [],
              "index": 3,
              "docs": [
                "The call was not whitelisted."
              ]
            },
            {
              "name": "CallAlreadyWhitelisted",
              "fields": [],
              "index": 4,
              "docs": [
                "The call was already whitelisted; No-Op."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 589,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "claims",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidEthereumSignature",
              "fields": [],
              "index": 0,
              "docs": [
                "Invalid Ethereum signature."
              ]
            },
            {
              "name": "SignerHasNoClaim",
              "fields": [],
              "index": 1,
              "docs": [
                "Ethereum address has no claim."
              ]
            },
            {
              "name": "SenderHasNoClaim",
              "fields": [],
              "index": 2,
              "docs": [
                "Account ID sending transaction has no claim."
              ]
            },
            {
              "name": "PotUnderflow",
              "fields": [],
              "index": 3,
              "docs": [
                "There's not enough in the pot to pay out some unvested amount. Generally implies a",
                "logic error."
              ]
            },
            {
              "name": "InvalidStatement",
              "fields": [],
              "index": 4,
              "docs": [
                "A needed statement was not included."
              ]
            },
            {
              "name": "VestedBalanceExists",
              "fields": [],
              "index": 5,
              "docs": [
                "The account already has a vested balance."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 590,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 157
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 591,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 591,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 157
        }
      },
      "docs": []
    }
  },
  {
    "id": 592,
    "type": {
      "path": [
        "pallet_vesting",
        "Releases"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V0",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "V1",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 593,
    "type": {
      "path": [
        "pallet_vesting",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotVesting",
              "fields": [],
              "index": 0,
              "docs": [
                "The account given is not vesting."
              ]
            },
            {
              "name": "AtMaxVestingSchedules",
              "fields": [],
              "index": 1,
              "docs": [
                "The account already has `MaxVestingSchedules` count of schedules and thus",
                "cannot add another one. Consider merging existing schedules in order to add another."
              ]
            },
            {
              "name": "AmountLow",
              "fields": [],
              "index": 2,
              "docs": [
                "Amount being transferred is too low to create a vesting schedule."
              ]
            },
            {
              "name": "ScheduleIndexOutOfBounds",
              "fields": [],
              "index": 3,
              "docs": [
                "An index was out of bounds of the vesting schedules."
              ]
            },
            {
              "name": "InvalidScheduleParams",
              "fields": [],
              "index": 4,
              "docs": [
                "Failed to create a new schedule because some parameter was invalid."
              ]
            }
          ]
        }
      },
      "docs": [
        "Error for the vesting pallet."
      ]
    }
  },
  {
    "id": 594,
    "type": {
      "path": [
        "pallet_utility",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TooManyCalls",
              "fields": [],
              "index": 0,
              "docs": [
                "Too many calls batched."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 595,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "Registration"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "MaxJudgements",
          "type": null
        },
        {
          "name": "MaxAdditionalFields",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "judgements",
              "type": 596,
              "typeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "info",
              "type": 161,
              "typeName": "IdentityInfo<MaxAdditionalFields>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 596,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 597
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 598,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 597,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          200
        ]
      },
      "docs": []
    }
  },
  {
    "id": 598,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 597
        }
      },
      "docs": []
    }
  },
  {
    "id": 599,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          6,
          600
        ]
      },
      "docs": []
    }
  },
  {
    "id": 600,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 92,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 601,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 602
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 604,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 602,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 603
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 603,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 603,
    "type": {
      "path": [
        "pallet_identity",
        "types",
        "RegistrarInfo"
      ],
      "params": [
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "fields",
              "type": 198,
              "typeName": "IdentityFields",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 604,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 602
        }
      },
      "docs": []
    }
  },
  {
    "id": 605,
    "type": {
      "path": [
        "pallet_identity",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TooManySubAccounts",
              "fields": [],
              "index": 0,
              "docs": [
                "Too many subs-accounts."
              ]
            },
            {
              "name": "NotFound",
              "fields": [],
              "index": 1,
              "docs": [
                "Account isn't found."
              ]
            },
            {
              "name": "NotNamed",
              "fields": [],
              "index": 2,
              "docs": [
                "Account isn't named."
              ]
            },
            {
              "name": "EmptyIndex",
              "fields": [],
              "index": 3,
              "docs": [
                "Empty index."
              ]
            },
            {
              "name": "FeeChanged",
              "fields": [],
              "index": 4,
              "docs": [
                "Fee is changed."
              ]
            },
            {
              "name": "NoIdentity",
              "fields": [],
              "index": 5,
              "docs": [
                "No identity found."
              ]
            },
            {
              "name": "StickyJudgement",
              "fields": [],
              "index": 6,
              "docs": [
                "Sticky judgement."
              ]
            },
            {
              "name": "JudgementGiven",
              "fields": [],
              "index": 7,
              "docs": [
                "Judgement given."
              ]
            },
            {
              "name": "InvalidJudgement",
              "fields": [],
              "index": 8,
              "docs": [
                "Invalid judgement."
              ]
            },
            {
              "name": "InvalidIndex",
              "fields": [],
              "index": 9,
              "docs": [
                "The index is invalid."
              ]
            },
            {
              "name": "InvalidTarget",
              "fields": [],
              "index": 10,
              "docs": [
                "The target is invalid."
              ]
            },
            {
              "name": "TooManyFields",
              "fields": [],
              "index": 11,
              "docs": [
                "Too many additional fields."
              ]
            },
            {
              "name": "TooManyRegistrars",
              "fields": [],
              "index": 12,
              "docs": [
                "Maximum amount of registrars reached. Cannot add any more."
              ]
            },
            {
              "name": "AlreadyClaimed",
              "fields": [],
              "index": 13,
              "docs": [
                "Account ID is already named."
              ]
            },
            {
              "name": "NotSub",
              "fields": [],
              "index": 14,
              "docs": [
                "Sender is not a sub-account."
              ]
            },
            {
              "name": "NotOwned",
              "fields": [],
              "index": 15,
              "docs": [
                "Sub-account isn't owned by sender."
              ]
            },
            {
              "name": "JudgementForDifferentIdentity",
              "fields": [],
              "index": 16,
              "docs": [
                "The provided judgement was for a different identity."
              ]
            },
            {
              "name": "JudgementPaymentFailed",
              "fields": [],
              "index": 17,
              "docs": [
                "Error that occurs when there is an issue paying for judgement."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 606,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          607,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 607,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 608
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 609,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 608,
    "type": {
      "path": [
        "pallet_proxy",
        "ProxyDefinition"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "ProxyType",
          "type": 203
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "delegate",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "proxy_type",
              "type": 203,
              "typeName": "ProxyType",
              "docs": []
            },
            {
              "name": "delay",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 609,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 608
        }
      },
      "docs": []
    }
  },
  {
    "id": 610,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          611,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 611,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 612
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 613,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 612,
    "type": {
      "path": [
        "pallet_proxy",
        "Announcement"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Hash",
          "type": 12
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "real",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "call_hash",
              "type": 12,
              "typeName": "Hash",
              "docs": []
            },
            {
              "name": "height",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 613,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 612
        }
      },
      "docs": []
    }
  },
  {
    "id": 614,
    "type": {
      "path": [
        "pallet_proxy",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TooMany",
              "fields": [],
              "index": 0,
              "docs": [
                "There are too many proxies registered or too many announcements pending."
              ]
            },
            {
              "name": "NotFound",
              "fields": [],
              "index": 1,
              "docs": [
                "Proxy registration not found."
              ]
            },
            {
              "name": "NotProxy",
              "fields": [],
              "index": 2,
              "docs": [
                "Sender is not a proxy of the account to be proxied."
              ]
            },
            {
              "name": "Unproxyable",
              "fields": [],
              "index": 3,
              "docs": [
                "A call which is incompatible with the proxy type's filter was attempted."
              ]
            },
            {
              "name": "Duplicate",
              "fields": [],
              "index": 4,
              "docs": [
                "Account is already a proxy."
              ]
            },
            {
              "name": "NoPermission",
              "fields": [],
              "index": 5,
              "docs": [
                "Call may not be made by proxy because it may escalate its privileges."
              ]
            },
            {
              "name": "Unannounced",
              "fields": [],
              "index": 6,
              "docs": [
                "Announcement, if made at all, was made too recently."
              ]
            },
            {
              "name": "NoSelfProxy",
              "fields": [],
              "index": 7,
              "docs": [
                "Cannot add self as proxy."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 615,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          1
        ]
      },
      "docs": []
    }
  },
  {
    "id": 616,
    "type": {
      "path": [
        "pallet_multisig",
        "Multisig"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "MaxApprovals",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "when",
              "type": 206,
              "typeName": "Timepoint<BlockNumber>",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "depositor",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "approvals",
              "type": 617,
              "typeName": "BoundedVec<AccountId, MaxApprovals>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 617,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 0
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 92,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 618,
    "type": {
      "path": [
        "pallet_multisig",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "MinimumThreshold",
              "fields": [],
              "index": 0,
              "docs": [
                "Threshold must be 2 or greater."
              ]
            },
            {
              "name": "AlreadyApproved",
              "fields": [],
              "index": 1,
              "docs": [
                "Call is already approved by this signatory."
              ]
            },
            {
              "name": "NoApprovalsNeeded",
              "fields": [],
              "index": 2,
              "docs": [
                "Call doesn't need any (more) approvals."
              ]
            },
            {
              "name": "TooFewSignatories",
              "fields": [],
              "index": 3,
              "docs": [
                "There are too few signatories in the list."
              ]
            },
            {
              "name": "TooManySignatories",
              "fields": [],
              "index": 4,
              "docs": [
                "There are too many signatories in the list."
              ]
            },
            {
              "name": "SignatoriesOutOfOrder",
              "fields": [],
              "index": 5,
              "docs": [
                "The signatories were provided out of order; they should be ordered."
              ]
            },
            {
              "name": "SenderInSignatories",
              "fields": [],
              "index": 6,
              "docs": [
                "The sender was contained in the other signatories; it shouldn't be."
              ]
            },
            {
              "name": "NotFound",
              "fields": [],
              "index": 7,
              "docs": [
                "Multisig operation not found when attempting to cancel."
              ]
            },
            {
              "name": "NotOwner",
              "fields": [],
              "index": 8,
              "docs": [
                "Only the account that originally created the multisig is able to cancel it."
              ]
            },
            {
              "name": "NoTimepoint",
              "fields": [],
              "index": 9,
              "docs": [
                "No timepoint was given, yet the multisig operation is already underway."
              ]
            },
            {
              "name": "WrongTimepoint",
              "fields": [],
              "index": 10,
              "docs": [
                "A different timepoint was given to the multisig operation that is underway."
              ]
            },
            {
              "name": "UnexpectedTimepoint",
              "fields": [],
              "index": 11,
              "docs": [
                "A timepoint was given, yet no multisig operation is underway."
              ]
            },
            {
              "name": "MaxWeightTooLow",
              "fields": [],
              "index": 12,
              "docs": [
                "The maximum weight information provided was too low."
              ]
            },
            {
              "name": "AlreadyStored",
              "fields": [],
              "index": 13,
              "docs": [
                "The data to be stored is already stored."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 619,
    "type": {
      "path": [
        "pallet_bounties",
        "Bounty"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "proposer",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "value",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "curator_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "bond",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "status",
              "type": 620,
              "typeName": "BountyStatus<AccountId, BlockNumber>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 620,
    "type": {
      "path": [
        "pallet_bounties",
        "BountyStatus"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Proposed",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Approved",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Funded",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "CuratorProposed",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Active",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "update_due",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "PendingPayout",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "unlock_at",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 621,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 622,
    "type": {
      "path": [
        "pallet_bounties",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InsufficientProposersBalance",
              "fields": [],
              "index": 0,
              "docs": [
                "Proposer's balance is too low."
              ]
            },
            {
              "name": "InvalidIndex",
              "fields": [],
              "index": 1,
              "docs": [
                "No proposal or bounty at that index."
              ]
            },
            {
              "name": "ReasonTooBig",
              "fields": [],
              "index": 2,
              "docs": [
                "The reason given is just too big."
              ]
            },
            {
              "name": "UnexpectedStatus",
              "fields": [],
              "index": 3,
              "docs": [
                "The bounty status is unexpected."
              ]
            },
            {
              "name": "RequireCurator",
              "fields": [],
              "index": 4,
              "docs": [
                "Require bounty curator."
              ]
            },
            {
              "name": "InvalidValue",
              "fields": [],
              "index": 5,
              "docs": [
                "Invalid bounty value."
              ]
            },
            {
              "name": "InvalidFee",
              "fields": [],
              "index": 6,
              "docs": [
                "Invalid bounty fee."
              ]
            },
            {
              "name": "PendingPayout",
              "fields": [],
              "index": 7,
              "docs": [
                "A bounty payout is pending.",
                "To cancel the bounty, you must unassign and slash the curator."
              ]
            },
            {
              "name": "Premature",
              "fields": [],
              "index": 8,
              "docs": [
                "The bounties cannot be claimed/closed because it's still in the countdown period."
              ]
            },
            {
              "name": "HasActiveChildBounty",
              "fields": [],
              "index": 9,
              "docs": [
                "The bounty cannot be closed because it has active child bounties."
              ]
            },
            {
              "name": "TooManyQueued",
              "fields": [],
              "index": 10,
              "docs": [
                "Too many approvals are already queued."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 623,
    "type": {
      "path": [
        "pallet_child_bounties",
        "ChildBounty"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "parent_bounty",
              "type": 4,
              "typeName": "BountyIndex",
              "docs": []
            },
            {
              "name": "value",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "curator_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "status",
              "type": 624,
              "typeName": "ChildBountyStatus<AccountId, BlockNumber>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 624,
    "type": {
      "path": [
        "pallet_child_bounties",
        "ChildBountyStatus"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Added",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "CuratorProposed",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Active",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "PendingPayout",
              "fields": [
                {
                  "name": "curator",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "beneficiary",
                  "type": 0,
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "unlock_at",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 625,
    "type": {
      "path": [
        "pallet_child_bounties",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ParentBountyNotActive",
              "fields": [],
              "index": 0,
              "docs": [
                "The parent bounty is not in active state."
              ]
            },
            {
              "name": "InsufficientBountyBalance",
              "fields": [],
              "index": 1,
              "docs": [
                "The bounty balance is not enough to add new child-bounty."
              ]
            },
            {
              "name": "TooManyChildBounties",
              "fields": [],
              "index": 2,
              "docs": [
                "Number of child bounties exceeds limit `MaxActiveChildBountyCount`."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 626,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "ReadySolution"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": null
        },
        {
          "name": "MaxWinners",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "supports",
              "type": 627,
              "typeName": "BoundedSupports<AccountId, MaxWinners>",
              "docs": []
            },
            {
              "name": "score",
              "type": 262,
              "typeName": "ElectionScore",
              "docs": []
            },
            {
              "name": "compute",
              "type": 431,
              "typeName": "ElectionCompute",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 627,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 266
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 265,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 628,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "RoundSnapshot"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "DataProvider",
          "type": 629
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "voters",
              "type": 630,
              "typeName": "Vec<DataProvider>",
              "docs": []
            },
            {
              "name": "targets",
              "type": 92,
              "typeName": "Vec<AccountId>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 629,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          11,
          521
        ]
      },
      "docs": []
    }
  },
  {
    "id": 630,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 629
        }
      },
      "docs": []
    }
  },
  {
    "id": 631,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 632
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 633,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 632,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          262,
          4,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 633,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 632
        }
      },
      "docs": []
    }
  },
  {
    "id": 634,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "signed",
        "SignedSubmission"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "Solution",
          "type": 211
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "who",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "raw_solution",
              "type": 210,
              "typeName": "RawSolution<Solution>",
              "docs": []
            },
            {
              "name": "call_fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 635,
    "type": {
      "path": [
        "pallet_election_provider_multi_phase",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PreDispatchEarlySubmission",
              "fields": [],
              "index": 0,
              "docs": [
                "Submission was too early."
              ]
            },
            {
              "name": "PreDispatchWrongWinnerCount",
              "fields": [],
              "index": 1,
              "docs": [
                "Wrong number of winners presented."
              ]
            },
            {
              "name": "PreDispatchWeakSubmission",
              "fields": [],
              "index": 2,
              "docs": [
                "Submission was too weak, score-wise."
              ]
            },
            {
              "name": "SignedQueueFull",
              "fields": [],
              "index": 3,
              "docs": [
                "The queue was full, and the solution was not better than any of the existing ones."
              ]
            },
            {
              "name": "SignedCannotPayDeposit",
              "fields": [],
              "index": 4,
              "docs": [
                "The origin failed to pay the deposit."
              ]
            },
            {
              "name": "SignedInvalidWitness",
              "fields": [],
              "index": 5,
              "docs": [
                "Witness data to dispatchable is invalid."
              ]
            },
            {
              "name": "SignedTooMuchWeight",
              "fields": [],
              "index": 6,
              "docs": [
                "The signed submission consumes too much weight"
              ]
            },
            {
              "name": "OcwCallWrongEra",
              "fields": [],
              "index": 7,
              "docs": [
                "OCW submitted solution for wrong round"
              ]
            },
            {
              "name": "MissingSnapshotMetadata",
              "fields": [],
              "index": 8,
              "docs": [
                "Snapshot metadata should exist but didn't."
              ]
            },
            {
              "name": "InvalidSubmissionIndex",
              "fields": [],
              "index": 9,
              "docs": [
                "`Self::insert_submission` returned an invalid index."
              ]
            },
            {
              "name": "CallNotAllowed",
              "fields": [],
              "index": 10,
              "docs": [
                "The call is not allowed at this point."
              ]
            },
            {
              "name": "FallbackFailed",
              "fields": [],
              "index": 11,
              "docs": [
                "The fallback failed"
              ]
            },
            {
              "name": "BoundNotMet",
              "fields": [],
              "index": 12,
              "docs": [
                "Some bound not met"
              ]
            },
            {
              "name": "TooManyWinners",
              "fields": [],
              "index": 13,
              "docs": [
                "Submitted solution has too many winners"
              ]
            }
          ]
        }
      },
      "docs": [
        "Error of the pallet that can be returned in response to dispatches."
      ]
    }
  },
  {
    "id": 636,
    "type": {
      "path": [
        "pallet_bags_list",
        "list",
        "Node"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "id",
              "type": 0,
              "typeName": "T::AccountId",
              "docs": []
            },
            {
              "name": "prev",
              "type": 155,
              "typeName": "Option<T::AccountId>",
              "docs": []
            },
            {
              "name": "next",
              "type": 155,
              "typeName": "Option<T::AccountId>",
              "docs": []
            },
            {
              "name": "bag_upper",
              "type": 11,
              "typeName": "T::Score",
              "docs": []
            },
            {
              "name": "score",
              "type": 11,
              "typeName": "T::Score",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 637,
    "type": {
      "path": [
        "pallet_bags_list",
        "list",
        "Bag"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "head",
              "type": 155,
              "typeName": "Option<T::AccountId>",
              "docs": []
            },
            {
              "name": "tail",
              "type": 155,
              "typeName": "Option<T::AccountId>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 638,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 11
        }
      },
      "docs": []
    }
  },
  {
    "id": 639,
    "type": {
      "path": [
        "pallet_bags_list",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        },
        {
          "name": "I",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "List",
              "fields": [
                {
                  "name": null,
                  "type": 640,
                  "typeName": "ListError",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": [
                "A error in the list interface implementation."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 640,
    "type": {
      "path": [
        "pallet_bags_list",
        "list",
        "ListError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Duplicate",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "NotHeavier",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "NotInSameBag",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "NodeNotFound",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 641,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "PoolMember"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "pool_id",
              "type": 4,
              "typeName": "PoolId",
              "docs": []
            },
            {
              "name": "points",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "last_recorded_reward_counter",
              "type": 513,
              "typeName": "T::RewardCounter",
              "docs": []
            },
            {
              "name": "unbonding_eras",
              "type": 642,
              "typeName": "BoundedBTreeMap<EraIndex, BalanceOf<T>, T::MaxUnbonding>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 642,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_btree_map",
        "BoundedBTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 4
        },
        {
          "name": "V",
          "type": 6
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 643,
              "typeName": "BTreeMap<K, V>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 643,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 4
        },
        {
          "name": "V",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 580,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 644,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "BondedPoolInner"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "commission",
              "type": 645,
              "typeName": "Commission<T>",
              "docs": []
            },
            {
              "name": "member_counter",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "points",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "roles",
              "type": 648,
              "typeName": "PoolRoles<T::AccountId>",
              "docs": []
            },
            {
              "name": "state",
              "type": 274,
              "typeName": "PoolState",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 645,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "Commission"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "current",
              "type": 280,
              "typeName": "Option<(Perbill, T::AccountId)>",
              "docs": []
            },
            {
              "name": "max",
              "type": 646,
              "typeName": "Option<Perbill>",
              "docs": []
            },
            {
              "name": "change_rate",
              "type": 647,
              "typeName": "Option<CommissionChangeRate<BlockNumberFor<T>>>",
              "docs": []
            },
            {
              "name": "throttle_from",
              "type": 270,
              "typeName": "Option<BlockNumberFor<T>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 646,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 41
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 41,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 647,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 282
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 282,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 648,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "PoolRoles"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "depositor",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "root",
              "type": 155,
              "typeName": "Option<AccountId>",
              "docs": []
            },
            {
              "name": "nominator",
              "type": 155,
              "typeName": "Option<AccountId>",
              "docs": []
            },
            {
              "name": "bouncer",
              "type": 155,
              "typeName": "Option<AccountId>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 649,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "RewardPool"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "last_recorded_reward_counter",
              "type": 513,
              "typeName": "T::RewardCounter",
              "docs": []
            },
            {
              "name": "last_recorded_total_payouts",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "total_rewards_claimed",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "total_commission_pending",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "total_commission_claimed",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 650,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "SubPools"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "no_era",
              "type": 651,
              "typeName": "UnbondPool<T>",
              "docs": []
            },
            {
              "name": "with_era",
              "type": 652,
              "typeName": "BoundedBTreeMap<EraIndex, UnbondPool<T>, TotalUnbondingPools<T>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 651,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "UnbondPool"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "points",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            },
            {
              "name": "balance",
              "type": 6,
              "typeName": "BalanceOf<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 652,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_btree_map",
        "BoundedBTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 4
        },
        {
          "name": "V",
          "type": 651
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 653,
              "typeName": "BTreeMap<K, V>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 653,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 4
        },
        {
          "name": "V",
          "type": 651
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 654,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 654,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 655
        }
      },
      "docs": []
    }
  },
  {
    "id": 655,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          651
        ]
      },
      "docs": []
    }
  },
  {
    "id": 656,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 657,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "PoolNotFound",
              "fields": [],
              "index": 0,
              "docs": [
                "A (bonded) pool id does not exist."
              ]
            },
            {
              "name": "PoolMemberNotFound",
              "fields": [],
              "index": 1,
              "docs": [
                "An account is not a member."
              ]
            },
            {
              "name": "RewardPoolNotFound",
              "fields": [],
              "index": 2,
              "docs": [
                "A reward pool does not exist. In all cases this is a system logic error."
              ]
            },
            {
              "name": "SubPoolsNotFound",
              "fields": [],
              "index": 3,
              "docs": [
                "A sub pool does not exist."
              ]
            },
            {
              "name": "AccountBelongsToOtherPool",
              "fields": [],
              "index": 4,
              "docs": [
                "An account is already delegating in another pool. An account may only belong to one",
                "pool at a time."
              ]
            },
            {
              "name": "FullyUnbonding",
              "fields": [],
              "index": 5,
              "docs": [
                "The member is fully unbonded (and thus cannot access the bonded and reward pool",
                "anymore to, for example, collect rewards)."
              ]
            },
            {
              "name": "MaxUnbondingLimit",
              "fields": [],
              "index": 6,
              "docs": [
                "The member cannot unbond further chunks due to reaching the limit."
              ]
            },
            {
              "name": "CannotWithdrawAny",
              "fields": [],
              "index": 7,
              "docs": [
                "None of the funds can be withdrawn yet because the bonding duration has not passed."
              ]
            },
            {
              "name": "MinimumBondNotMet",
              "fields": [],
              "index": 8,
              "docs": [
                "The amount does not meet the minimum bond to either join or create a pool.",
                "",
                "The depositor can never unbond to a value less than",
                "`Pallet::depositor_min_bond`. The caller does not have nominating",
                "permissions for the pool. Members can never unbond to a value below `MinJoinBond`."
              ]
            },
            {
              "name": "OverflowRisk",
              "fields": [],
              "index": 9,
              "docs": [
                "The transaction could not be executed due to overflow risk for the pool."
              ]
            },
            {
              "name": "NotDestroying",
              "fields": [],
              "index": 10,
              "docs": [
                "A pool must be in [`PoolState::Destroying`] in order for the depositor to unbond or for",
                "other members to be permissionlessly unbonded."
              ]
            },
            {
              "name": "NotNominator",
              "fields": [],
              "index": 11,
              "docs": [
                "The caller does not have nominating permissions for the pool."
              ]
            },
            {
              "name": "NotKickerOrDestroying",
              "fields": [],
              "index": 12,
              "docs": [
                "Either a) the caller cannot make a valid kick or b) the pool is not destroying."
              ]
            },
            {
              "name": "NotOpen",
              "fields": [],
              "index": 13,
              "docs": [
                "The pool is not open to join"
              ]
            },
            {
              "name": "MaxPools",
              "fields": [],
              "index": 14,
              "docs": [
                "The system is maxed out on pools."
              ]
            },
            {
              "name": "MaxPoolMembers",
              "fields": [],
              "index": 15,
              "docs": [
                "Too many members in the pool or system."
              ]
            },
            {
              "name": "CanNotChangeState",
              "fields": [],
              "index": 16,
              "docs": [
                "The pools state cannot be changed."
              ]
            },
            {
              "name": "DoesNotHavePermission",
              "fields": [],
              "index": 17,
              "docs": [
                "The caller does not have adequate permissions."
              ]
            },
            {
              "name": "MetadataExceedsMaxLen",
              "fields": [],
              "index": 18,
              "docs": [
                "Metadata exceeds [`Config::MaxMetadataLen`]"
              ]
            },
            {
              "name": "Defensive",
              "fields": [
                {
                  "name": null,
                  "type": 658,
                  "typeName": "DefensiveError",
                  "docs": []
                }
              ],
              "index": 19,
              "docs": [
                "Some error occurred that should never happen. This should be reported to the",
                "maintainers."
              ]
            },
            {
              "name": "PartialUnbondNotAllowedPermissionlessly",
              "fields": [],
              "index": 20,
              "docs": [
                "Partial unbonding now allowed permissionlessly."
              ]
            },
            {
              "name": "MaxCommissionRestricted",
              "fields": [],
              "index": 21,
              "docs": [
                "The pool's max commission cannot be set higher than the existing value."
              ]
            },
            {
              "name": "CommissionExceedsMaximum",
              "fields": [],
              "index": 22,
              "docs": [
                "The supplied commission exceeds the max allowed commission."
              ]
            },
            {
              "name": "CommissionExceedsGlobalMaximum",
              "fields": [],
              "index": 23,
              "docs": [
                "The supplied commission exceeds global maximum commission."
              ]
            },
            {
              "name": "CommissionChangeThrottled",
              "fields": [],
              "index": 24,
              "docs": [
                "Not enough blocks have surpassed since the last commission update."
              ]
            },
            {
              "name": "CommissionChangeRateNotAllowed",
              "fields": [],
              "index": 25,
              "docs": [
                "The submitted changes to commission change rate are not allowed."
              ]
            },
            {
              "name": "NoPendingCommission",
              "fields": [],
              "index": 26,
              "docs": [
                "There is no pending commission to claim."
              ]
            },
            {
              "name": "NoCommissionCurrentSet",
              "fields": [],
              "index": 27,
              "docs": [
                "No commission current has been set."
              ]
            },
            {
              "name": "PoolIdInUse",
              "fields": [],
              "index": 28,
              "docs": [
                "Pool id currently in use."
              ]
            },
            {
              "name": "InvalidPoolId",
              "fields": [],
              "index": 29,
              "docs": [
                "Pool id provided is not correct/usable."
              ]
            },
            {
              "name": "BondExtraRestricted",
              "fields": [],
              "index": 30,
              "docs": [
                "Bonding extra is restricted to the exact pending reward amount."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 658,
    "type": {
      "path": [
        "pallet_nomination_pools",
        "pallet",
        "DefensiveError"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotEnoughSpaceInUnbondPool",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "PoolNotFound",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "RewardPoolNotFound",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "SubPoolsNotFound",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "BondedStashKilledPrematurely",
              "fields": [],
              "index": 4,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 659,
    "type": {
      "path": [
        "pallet_fast_unstake",
        "types",
        "UnstakeRequest"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "stashes",
              "type": 660,
              "typeName": "BoundedVec<(T::AccountId, BalanceOf<T>), T::BatchSize>",
              "docs": []
            },
            {
              "name": "checked",
              "type": 661,
              "typeName": "BoundedVec<EraIndex, MaxChecking<T>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 660,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 269
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 268,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 661,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 4
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 97,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 662,
    "type": {
      "path": [
        "pallet_fast_unstake",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotController",
              "fields": [],
              "index": 0,
              "docs": [
                "The provided Controller account was not found.",
                "",
                "This means that the given account is not bonded."
              ]
            },
            {
              "name": "AlreadyQueued",
              "fields": [],
              "index": 1,
              "docs": [
                "The bonded account has already been queued."
              ]
            },
            {
              "name": "NotFullyBonded",
              "fields": [],
              "index": 2,
              "docs": [
                "The bonded account has active unlocking chunks."
              ]
            },
            {
              "name": "NotQueued",
              "fields": [],
              "index": 3,
              "docs": [
                "The provided un-staker is not in the `Queue`."
              ]
            },
            {
              "name": "AlreadyHead",
              "fields": [],
              "index": 4,
              "docs": [
                "The provided un-staker is already in Head, and cannot deregister."
              ]
            },
            {
              "name": "CallNotAllowed",
              "fields": [],
              "index": 5,
              "docs": [
                "The call is not allowed at this point because the pallet is not active."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 663,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "configuration",
        "HostConfiguration"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "max_code_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_head_data_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_upward_queue_count",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_upward_queue_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_upward_message_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_upward_message_num_per_candidate",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "hrmp_max_message_num_per_candidate",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "validation_upgrade_cooldown",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "validation_upgrade_delay",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "async_backing_params",
              "type": 285,
              "typeName": "AsyncBackingParams",
              "docs": []
            },
            {
              "name": "max_pov_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_downward_message_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "hrmp_max_parachain_outbound_channels",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "hrmp_sender_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "hrmp_recipient_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "hrmp_channel_max_capacity",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "hrmp_channel_max_total_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "hrmp_max_parachain_inbound_channels",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "hrmp_channel_max_message_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "executor_params",
              "type": 286,
              "typeName": "ExecutorParams",
              "docs": []
            },
            {
              "name": "code_retention_period",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "on_demand_cores",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "on_demand_retries",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "on_demand_queue_max_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "on_demand_target_queue_utilization",
              "type": 41,
              "typeName": "Perbill",
              "docs": []
            },
            {
              "name": "on_demand_fee_variability",
              "type": 41,
              "typeName": "Perbill",
              "docs": []
            },
            {
              "name": "on_demand_base_fee",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "on_demand_ttl",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "group_rotation_frequency",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "paras_availability_period",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "scheduling_lookahead",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_validators_per_core",
              "type": 270,
              "typeName": "Option<u32>",
              "docs": []
            },
            {
              "name": "max_validators",
              "type": 270,
              "typeName": "Option<u32>",
              "docs": []
            },
            {
              "name": "dispute_period",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "dispute_post_conclusion_acceptance_period",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "no_show_slots",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "n_delay_tranches",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "zeroth_delay_tranche_width",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "needed_approvals",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "relay_vrf_modulo_samples",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "pvf_voting_ttl",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "minimum_validation_upgrade_delay",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 664,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 665
        }
      },
      "docs": []
    }
  },
  {
    "id": 665,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          663
        ]
      },
      "docs": []
    }
  },
  {
    "id": 666,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "configuration",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidNewValue",
              "fields": [],
              "index": 0,
              "docs": [
                "The new value for a configuration parameter is invalid."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 667,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 300
        }
      },
      "docs": []
    }
  },
  {
    "id": 668,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 104
        }
      },
      "docs": []
    }
  },
  {
    "id": 669,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "shared",
        "AllowedRelayParentsTracker"
      ],
      "params": [
        {
          "name": "Hash",
          "type": 12
        },
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "buffer",
              "type": 670,
              "typeName": "VecDeque<(Hash, Hash)>",
              "docs": []
            },
            {
              "name": "latest_number",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 670,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 671
        }
      },
      "docs": []
    }
  },
  {
    "id": 671,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          12,
          12
        ]
      },
      "docs": []
    }
  },
  {
    "id": 672,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "inclusion",
        "AvailabilityBitfieldRecord"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "bitfield",
              "type": 297,
              "typeName": "AvailabilityBitfield",
              "docs": []
            },
            {
              "name": "submitted_at",
              "type": 4,
              "typeName": "N",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 673,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "inclusion",
        "CandidatePendingAvailability"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        },
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "core",
              "type": 439,
              "typeName": "CoreIndex",
              "docs": []
            },
            {
              "name": "hash",
              "type": 321,
              "typeName": "CandidateHash",
              "docs": []
            },
            {
              "name": "descriptor",
              "type": 305,
              "typeName": "CandidateDescriptor<H>",
              "docs": []
            },
            {
              "name": "availability_votes",
              "type": 298,
              "typeName": "BitVec<u8, BitOrderLsb0>",
              "docs": []
            },
            {
              "name": "backers",
              "type": 298,
              "typeName": "BitVec<u8, BitOrderLsb0>",
              "docs": []
            },
            {
              "name": "relay_parent_number",
              "type": 4,
              "typeName": "N",
              "docs": []
            },
            {
              "name": "backed_in_number",
              "type": 4,
              "typeName": "N",
              "docs": []
            },
            {
              "name": "backing_group",
              "type": 440,
              "typeName": "GroupIndex",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 674,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "inclusion",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "UnsortedOrDuplicateValidatorIndices",
              "fields": [],
              "index": 0,
              "docs": [
                "Validator indices are out of order or contains duplicates."
              ]
            },
            {
              "name": "UnsortedOrDuplicateDisputeStatementSet",
              "fields": [],
              "index": 1,
              "docs": [
                "Dispute statement sets are out of order or contain duplicates."
              ]
            },
            {
              "name": "UnsortedOrDuplicateBackedCandidates",
              "fields": [],
              "index": 2,
              "docs": [
                "Backed candidates are out of order (core index) or contain duplicates."
              ]
            },
            {
              "name": "UnexpectedRelayParent",
              "fields": [],
              "index": 3,
              "docs": [
                "A different relay parent was provided compared to the on-chain stored one."
              ]
            },
            {
              "name": "WrongBitfieldSize",
              "fields": [],
              "index": 4,
              "docs": [
                "Availability bitfield has unexpected size."
              ]
            },
            {
              "name": "BitfieldAllZeros",
              "fields": [],
              "index": 5,
              "docs": [
                "Bitfield consists of zeros only."
              ]
            },
            {
              "name": "BitfieldDuplicateOrUnordered",
              "fields": [],
              "index": 6,
              "docs": [
                "Multiple bitfields submitted by same validator or validators out of order by index."
              ]
            },
            {
              "name": "ValidatorIndexOutOfBounds",
              "fields": [],
              "index": 7,
              "docs": [
                "Validator index out of bounds."
              ]
            },
            {
              "name": "InvalidBitfieldSignature",
              "fields": [],
              "index": 8,
              "docs": [
                "Invalid signature"
              ]
            },
            {
              "name": "UnscheduledCandidate",
              "fields": [],
              "index": 9,
              "docs": [
                "Candidate submitted but para not scheduled."
              ]
            },
            {
              "name": "CandidateScheduledBeforeParaFree",
              "fields": [],
              "index": 10,
              "docs": [
                "Candidate scheduled despite pending candidate already existing for the para."
              ]
            },
            {
              "name": "ScheduledOutOfOrder",
              "fields": [],
              "index": 11,
              "docs": [
                "Scheduled cores out of order."
              ]
            },
            {
              "name": "HeadDataTooLarge",
              "fields": [],
              "index": 12,
              "docs": [
                "Head data exceeds the configured maximum."
              ]
            },
            {
              "name": "PrematureCodeUpgrade",
              "fields": [],
              "index": 13,
              "docs": [
                "Code upgrade prematurely."
              ]
            },
            {
              "name": "NewCodeTooLarge",
              "fields": [],
              "index": 14,
              "docs": [
                "Output code is too large"
              ]
            },
            {
              "name": "DisallowedRelayParent",
              "fields": [],
              "index": 15,
              "docs": [
                "The candidate's relay-parent was not allowed. Either it was",
                "not recent enough or it didn't advance based on the last parachain block."
              ]
            },
            {
              "name": "InvalidAssignment",
              "fields": [],
              "index": 16,
              "docs": [
                "Failed to compute group index for the core: either it's out of bounds",
                "or the relay parent doesn't belong to the current session."
              ]
            },
            {
              "name": "InvalidGroupIndex",
              "fields": [],
              "index": 17,
              "docs": [
                "Invalid group index in core assignment."
              ]
            },
            {
              "name": "InsufficientBacking",
              "fields": [],
              "index": 18,
              "docs": [
                "Insufficient (non-majority) backing."
              ]
            },
            {
              "name": "InvalidBacking",
              "fields": [],
              "index": 19,
              "docs": [
                "Invalid (bad signature, unknown validator, etc.) backing."
              ]
            },
            {
              "name": "NotCollatorSigned",
              "fields": [],
              "index": 20,
              "docs": [
                "Collator did not sign PoV."
              ]
            },
            {
              "name": "ValidationDataHashMismatch",
              "fields": [],
              "index": 21,
              "docs": [
                "The validation data hash does not match expected."
              ]
            },
            {
              "name": "IncorrectDownwardMessageHandling",
              "fields": [],
              "index": 22,
              "docs": [
                "The downward message queue is not processed correctly."
              ]
            },
            {
              "name": "InvalidUpwardMessages",
              "fields": [],
              "index": 23,
              "docs": [
                "At least one upward message sent does not pass the acceptance criteria."
              ]
            },
            {
              "name": "HrmpWatermarkMishandling",
              "fields": [],
              "index": 24,
              "docs": [
                "The candidate didn't follow the rules of HRMP watermark advancement."
              ]
            },
            {
              "name": "InvalidOutboundHrmp",
              "fields": [],
              "index": 25,
              "docs": [
                "The HRMP messages sent by the candidate is not valid."
              ]
            },
            {
              "name": "InvalidValidationCodeHash",
              "fields": [],
              "index": 26,
              "docs": [
                "The validation code hash of the candidate is not valid."
              ]
            },
            {
              "name": "ParaHeadMismatch",
              "fields": [],
              "index": 27,
              "docs": [
                "The `para_head` hash in the candidate descriptor doesn't match the hash of the actual",
                "para head in the commitments."
              ]
            },
            {
              "name": "BitfieldReferencesFreedCore",
              "fields": [],
              "index": 28,
              "docs": [
                "A bitfield that references a freed core,",
                "either intentionally or as part of a concluded",
                "invalid dispute."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 675,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "ScrapedOnChainVotes"
      ],
      "params": [
        {
          "name": "H",
          "type": 12
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "session",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "backing_validators_per_candidate",
              "type": 676,
              "typeName": "Vec<(CandidateReceipt<H>, Vec<(ValidatorIndex, ValidityAttestation)>)\n>",
              "docs": []
            },
            {
              "name": "disputes",
              "type": 319,
              "typeName": "MultiDisputeStatementSet",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 676,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 677
        }
      },
      "docs": []
    }
  },
  {
    "id": 677,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          438,
          678
        ]
      },
      "docs": []
    }
  },
  {
    "id": 678,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 679
        }
      },
      "docs": []
    }
  },
  {
    "id": 679,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          300,
          318
        ]
      },
      "docs": []
    }
  },
  {
    "id": 680,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras_inherent",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "TooManyInclusionInherents",
              "fields": [],
              "index": 0,
              "docs": [
                "Inclusion inherent called more than once per block."
              ]
            },
            {
              "name": "InvalidParentHeader",
              "fields": [],
              "index": 1,
              "docs": [
                "The hash of the submitted parent header doesn't correspond to the saved block hash of",
                "the parent."
              ]
            },
            {
              "name": "CandidateConcludedInvalid",
              "fields": [],
              "index": 2,
              "docs": [
                "Disputed candidate that was concluded invalid."
              ]
            },
            {
              "name": "InherentOverweight",
              "fields": [],
              "index": 3,
              "docs": [
                "The data given to the inherent will result in an overweight block."
              ]
            },
            {
              "name": "DisputeStatementsUnsortedOrDuplicates",
              "fields": [],
              "index": 4,
              "docs": [
                "The ordering of dispute statements was invalid."
              ]
            },
            {
              "name": "DisputeInvalid",
              "fields": [],
              "index": 5,
              "docs": [
                "A dispute statement was invalid."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 681,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 667
        }
      },
      "docs": []
    }
  },
  {
    "id": 682,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 683
        }
      },
      "docs": []
    }
  },
  {
    "id": 683,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "CoreOccupied"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Free",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Paras",
              "fields": [
                {
                  "name": null,
                  "type": 684,
                  "typeName": "ParasEntry<N>",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 684,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "ParasEntry"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "assignment",
              "type": 685,
              "typeName": "Assignment",
              "docs": []
            },
            {
              "name": "availability_timeouts",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "ttl",
              "type": 4,
              "typeName": "N",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 685,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "Assignment"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "para_id",
              "type": 134,
              "typeName": "Id",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 686,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 439
        },
        {
          "name": "V",
          "type": 687
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 689,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 687,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 688
        }
      },
      "docs": []
    }
  },
  {
    "id": 688,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 684
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 684,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 689,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 690
        }
      },
      "docs": []
    }
  },
  {
    "id": 690,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          439,
          687
        ]
      },
      "docs": []
    }
  },
  {
    "id": 691,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras",
        "PvfCheckActiveVoteState"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "votes_accept",
              "type": 298,
              "typeName": "BitVec<u8, BitOrderLsb0>",
              "docs": []
            },
            {
              "name": "votes_reject",
              "type": 298,
              "typeName": "BitVec<u8, BitOrderLsb0>",
              "docs": []
            },
            {
              "name": "age",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "created_at",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "causes",
              "type": 692,
              "typeName": "Vec<PvfCheckCause<BlockNumber>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 692,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 693
        }
      },
      "docs": []
    }
  },
  {
    "id": 693,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras",
        "PvfCheckCause"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Onboarding",
              "fields": [
                {
                  "name": null,
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "Upgrade",
              "fields": [
                {
                  "name": "id",
                  "type": 134,
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "included_at",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 694,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 308
        }
      },
      "docs": []
    }
  },
  {
    "id": 695,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 134
        }
      },
      "docs": []
    }
  },
  {
    "id": 696,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras",
        "ParaLifecycle"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Onboarding",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Parathread",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "Parachain",
              "fields": [],
              "index": 2,
              "docs": []
            },
            {
              "name": "UpgradingParathread",
              "fields": [],
              "index": 3,
              "docs": []
            },
            {
              "name": "DowngradingParachain",
              "fields": [],
              "index": 4,
              "docs": []
            },
            {
              "name": "OffboardingParathread",
              "fields": [],
              "index": 5,
              "docs": []
            },
            {
              "name": "OffboardingParachain",
              "fields": [],
              "index": 6,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 697,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          134,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 698,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras",
        "ParaPastCodeMeta"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "upgrade_times",
              "type": 699,
              "typeName": "Vec<ReplacementTimes<N>>",
              "docs": []
            },
            {
              "name": "last_pruned",
              "type": 270,
              "typeName": "Option<N>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 699,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 700
        }
      },
      "docs": []
    }
  },
  {
    "id": 700,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras",
        "ReplacementTimes"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "expected_at",
              "type": 4,
              "typeName": "N",
              "docs": []
            },
            {
              "name": "activated_at",
              "type": 4,
              "typeName": "N",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 701,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 697
        }
      },
      "docs": []
    }
  },
  {
    "id": 702,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "UpgradeGoAhead"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Abort",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "GoAhead",
              "fields": [],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 703,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "UpgradeRestriction"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Present",
              "fields": [],
              "index": 0,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 704,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras",
        "ParaGenesisArgs"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "genesis_head",
              "type": 316,
              "typeName": "HeadData",
              "docs": []
            },
            {
              "name": "validation_code",
              "type": 315,
              "typeName": "ValidationCode",
              "docs": []
            },
            {
              "name": "para_kind",
              "type": 44,
              "typeName": "ParaKind",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 705,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "paras",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotRegistered",
              "fields": [],
              "index": 0,
              "docs": [
                "Para is not registered in our system."
              ]
            },
            {
              "name": "CannotOnboard",
              "fields": [],
              "index": 1,
              "docs": [
                "Para cannot be onboarded because it is already tracked by our system."
              ]
            },
            {
              "name": "CannotOffboard",
              "fields": [],
              "index": 2,
              "docs": [
                "Para cannot be offboarded at this time."
              ]
            },
            {
              "name": "CannotUpgrade",
              "fields": [],
              "index": 3,
              "docs": [
                "Para cannot be upgraded to a lease holding parachain."
              ]
            },
            {
              "name": "CannotDowngrade",
              "fields": [],
              "index": 4,
              "docs": [
                "Para cannot be downgraded to an on-demand parachain."
              ]
            },
            {
              "name": "PvfCheckStatementStale",
              "fields": [],
              "index": 5,
              "docs": [
                "The statement for PVF pre-checking is stale."
              ]
            },
            {
              "name": "PvfCheckStatementFuture",
              "fields": [],
              "index": 6,
              "docs": [
                "The statement for PVF pre-checking is for a future session."
              ]
            },
            {
              "name": "PvfCheckValidatorIndexOutOfBounds",
              "fields": [],
              "index": 7,
              "docs": [
                "Claimed validator index is out of bounds."
              ]
            },
            {
              "name": "PvfCheckInvalidSignature",
              "fields": [],
              "index": 8,
              "docs": [
                "The signature for the PVF pre-checking is invalid."
              ]
            },
            {
              "name": "PvfCheckDoubleVote",
              "fields": [],
              "index": 9,
              "docs": [
                "The given validator already has cast a vote."
              ]
            },
            {
              "name": "PvfCheckSubjectInvalid",
              "fields": [],
              "index": 10,
              "docs": [
                "The given PVF does not exist at the moment of process a vote."
              ]
            },
            {
              "name": "CannotUpgradeCode",
              "fields": [],
              "index": 11,
              "docs": [
                "Parachain cannot currently schedule a code upgrade."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 706,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 707
        }
      },
      "docs": []
    }
  },
  {
    "id": 707,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "initializer",
        "BufferedSessionChange"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "validators",
              "type": 668,
              "typeName": "Vec<ValidatorId>",
              "docs": []
            },
            {
              "name": "queued",
              "type": 668,
              "typeName": "Vec<ValidatorId>",
              "docs": []
            },
            {
              "name": "session_index",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 708,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 709
        }
      },
      "docs": []
    }
  },
  {
    "id": 709,
    "type": {
      "path": [
        "polkadot_core_primitives",
        "InboundDownwardMessage"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "sent_at",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "msg",
              "type": 13,
              "typeName": "DownwardMessage",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 710,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "hrmp",
        "HrmpOpenChannelRequest"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "confirmed",
              "type": 44,
              "typeName": "bool",
              "docs": []
            },
            {
              "name": "_age",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "sender_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "max_message_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_capacity",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_total_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 711,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 331
        }
      },
      "docs": []
    }
  },
  {
    "id": 712,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "hrmp",
        "HrmpChannel"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "max_capacity",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_total_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "max_message_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "msg_count",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "total_size",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "mqc_head",
              "type": 145,
              "typeName": "Option<Hash>",
              "docs": []
            },
            {
              "name": "sender_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "recipient_deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 713,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 714
        }
      },
      "docs": []
    }
  },
  {
    "id": 714,
    "type": {
      "path": [
        "polkadot_core_primitives",
        "InboundHrmpMessage"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "sent_at",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "data",
              "type": 13,
              "typeName": "sp_std::vec::Vec<u8>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 715,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 716
        }
      },
      "docs": []
    }
  },
  {
    "id": 716,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          695
        ]
      },
      "docs": []
    }
  },
  {
    "id": 717,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "hrmp",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "OpenHrmpChannelToSelf",
              "fields": [],
              "index": 0,
              "docs": [
                "The sender tried to open a channel to themselves."
              ]
            },
            {
              "name": "OpenHrmpChannelInvalidRecipient",
              "fields": [],
              "index": 1,
              "docs": [
                "The recipient is not a valid para."
              ]
            },
            {
              "name": "OpenHrmpChannelZeroCapacity",
              "fields": [],
              "index": 2,
              "docs": [
                "The requested capacity is zero."
              ]
            },
            {
              "name": "OpenHrmpChannelCapacityExceedsLimit",
              "fields": [],
              "index": 3,
              "docs": [
                "The requested capacity exceeds the global limit."
              ]
            },
            {
              "name": "OpenHrmpChannelZeroMessageSize",
              "fields": [],
              "index": 4,
              "docs": [
                "The requested maximum message size is 0."
              ]
            },
            {
              "name": "OpenHrmpChannelMessageSizeExceedsLimit",
              "fields": [],
              "index": 5,
              "docs": [
                "The open request requested the message size that exceeds the global limit."
              ]
            },
            {
              "name": "OpenHrmpChannelAlreadyExists",
              "fields": [],
              "index": 6,
              "docs": [
                "The channel already exists"
              ]
            },
            {
              "name": "OpenHrmpChannelAlreadyRequested",
              "fields": [],
              "index": 7,
              "docs": [
                "There is already a request to open the same channel."
              ]
            },
            {
              "name": "OpenHrmpChannelLimitExceeded",
              "fields": [],
              "index": 8,
              "docs": [
                "The sender already has the maximum number of allowed outbound channels."
              ]
            },
            {
              "name": "AcceptHrmpChannelDoesntExist",
              "fields": [],
              "index": 9,
              "docs": [
                "The channel from the sender to the origin doesn't exist."
              ]
            },
            {
              "name": "AcceptHrmpChannelAlreadyConfirmed",
              "fields": [],
              "index": 10,
              "docs": [
                "The channel is already confirmed."
              ]
            },
            {
              "name": "AcceptHrmpChannelLimitExceeded",
              "fields": [],
              "index": 11,
              "docs": [
                "The recipient already has the maximum number of allowed inbound channels."
              ]
            },
            {
              "name": "CloseHrmpChannelUnauthorized",
              "fields": [],
              "index": 12,
              "docs": [
                "The origin tries to close a channel where it is neither the sender nor the recipient."
              ]
            },
            {
              "name": "CloseHrmpChannelDoesntExist",
              "fields": [],
              "index": 13,
              "docs": [
                "The channel to be closed doesn't exist."
              ]
            },
            {
              "name": "CloseHrmpChannelAlreadyUnderway",
              "fields": [],
              "index": 14,
              "docs": [
                "The channel close request is already requested."
              ]
            },
            {
              "name": "CancelHrmpOpenChannelUnauthorized",
              "fields": [],
              "index": 15,
              "docs": [
                "Canceling is requested by neither the sender nor recipient of the open channel request."
              ]
            },
            {
              "name": "OpenHrmpChannelDoesntExist",
              "fields": [],
              "index": 16,
              "docs": [
                "The open request doesn't exist."
              ]
            },
            {
              "name": "OpenHrmpChannelAlreadyConfirmed",
              "fields": [],
              "index": 17,
              "docs": [
                "Cannot cancel an HRMP open channel request because it is already confirmed."
              ]
            },
            {
              "name": "WrongWitness",
              "fields": [],
              "index": 18,
              "docs": [
                "The provided witness data is wrong."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 718,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 105
        }
      },
      "docs": []
    }
  },
  {
    "id": 719,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "SessionInfo"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "active_validator_indices",
              "type": 667,
              "typeName": "Vec<ValidatorIndex>",
              "docs": []
            },
            {
              "name": "random_seed",
              "type": 1,
              "typeName": "[u8; 32]",
              "docs": []
            },
            {
              "name": "dispute_period",
              "type": 4,
              "typeName": "SessionIndex",
              "docs": []
            },
            {
              "name": "validators",
              "type": 720,
              "typeName": "IndexedVec<ValidatorIndex, ValidatorId>",
              "docs": []
            },
            {
              "name": "discovery_keys",
              "type": 721,
              "typeName": "Vec<AuthorityDiscoveryId>",
              "docs": []
            },
            {
              "name": "assignment_keys",
              "type": 718,
              "typeName": "Vec<AssignmentId>",
              "docs": []
            },
            {
              "name": "validator_groups",
              "type": 722,
              "typeName": "IndexedVec<GroupIndex, Vec<ValidatorIndex>>",
              "docs": []
            },
            {
              "name": "n_cores",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "zeroth_delay_tranche_width",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "relay_vrf_modulo_samples",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "n_delay_tranches",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "no_show_slots",
              "type": 4,
              "typeName": "u32",
              "docs": []
            },
            {
              "name": "needed_approvals",
              "type": 4,
              "typeName": "u32",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 720,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "IndexedVec"
      ],
      "params": [
        {
          "name": "K",
          "type": 300
        },
        {
          "name": "V",
          "type": 104
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 668,
              "typeName": "Vec<V>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 721,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 106
        }
      },
      "docs": []
    }
  },
  {
    "id": 722,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "IndexedVec"
      ],
      "params": [
        {
          "name": "K",
          "type": 440
        },
        {
          "name": "V",
          "type": 667
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 681,
              "typeName": "Vec<V>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 723,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          321
        ]
      },
      "docs": []
    }
  },
  {
    "id": 724,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "DisputeState"
      ],
      "params": [
        {
          "name": "N",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "validators_for",
              "type": 298,
              "typeName": "BitVec<u8, bitvec::order::Lsb0>",
              "docs": []
            },
            {
              "name": "validators_against",
              "type": 298,
              "typeName": "BitVec<u8, bitvec::order::Lsb0>",
              "docs": []
            },
            {
              "name": "start",
              "type": 4,
              "typeName": "N",
              "docs": []
            },
            {
              "name": "concluded_at",
              "type": 270,
              "typeName": "Option<N>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 725,
    "type": {
      "path": [
        "BTreeSet"
      ],
      "params": [
        {
          "name": "T",
          "type": 300
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 667,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 726,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "disputes",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "DuplicateDisputeStatementSets",
              "fields": [],
              "index": 0,
              "docs": [
                "Duplicate dispute statement sets provided."
              ]
            },
            {
              "name": "AncientDisputeStatement",
              "fields": [],
              "index": 1,
              "docs": [
                "Ancient dispute statement provided."
              ]
            },
            {
              "name": "ValidatorIndexOutOfBounds",
              "fields": [],
              "index": 2,
              "docs": [
                "Validator index on statement is out of bounds for session."
              ]
            },
            {
              "name": "InvalidSignature",
              "fields": [],
              "index": 3,
              "docs": [
                "Invalid signature on statement."
              ]
            },
            {
              "name": "DuplicateStatement",
              "fields": [],
              "index": 4,
              "docs": [
                "Validator vote submitted more than once to dispute."
              ]
            },
            {
              "name": "SingleSidedDispute",
              "fields": [],
              "index": 5,
              "docs": [
                "A dispute where there are only votes on one side."
              ]
            },
            {
              "name": "MaliciousBacker",
              "fields": [],
              "index": 6,
              "docs": [
                "A dispute vote from a malicious backer."
              ]
            },
            {
              "name": "MissingBackingVotes",
              "fields": [],
              "index": 7,
              "docs": [
                "No backing votes were provides along dispute statements."
              ]
            },
            {
              "name": "UnconfirmedDispute",
              "fields": [],
              "index": 8,
              "docs": [
                "Unconfirmed dispute statement sets provided."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 727,
    "type": {
      "path": [
        "polkadot_primitives",
        "v5",
        "slashing",
        "PendingSlashes"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "keys",
              "type": 728,
              "typeName": "BTreeMap<ValidatorIndex, ValidatorId>",
              "docs": []
            },
            {
              "name": "kind",
              "type": 336,
              "typeName": "SlashingOffenceKind",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 728,
    "type": {
      "path": [
        "BTreeMap"
      ],
      "params": [
        {
          "name": "K",
          "type": 300
        },
        {
          "name": "V",
          "type": 104
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 729,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 729,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 730
        }
      },
      "docs": []
    }
  },
  {
    "id": 730,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          300,
          104
        ]
      },
      "docs": []
    }
  },
  {
    "id": 731,
    "type": {
      "path": [
        "polkadot_runtime_parachains",
        "disputes",
        "slashing",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "InvalidKeyOwnershipProof",
              "fields": [],
              "index": 0,
              "docs": [
                "The key ownership proof is invalid."
              ]
            },
            {
              "name": "InvalidSessionIndex",
              "fields": [],
              "index": 1,
              "docs": [
                "The session index is too old or invalid."
              ]
            },
            {
              "name": "InvalidCandidateHash",
              "fields": [],
              "index": 2,
              "docs": [
                "The candidate hash is invalid."
              ]
            },
            {
              "name": "InvalidValidatorIndex",
              "fields": [],
              "index": 3,
              "docs": [
                "There is no pending slash for the given validator index and time",
                "slot."
              ]
            },
            {
              "name": "ValidatorIndexIdMismatch",
              "fields": [],
              "index": 4,
              "docs": [
                "The validator index does not match the validator id."
              ]
            },
            {
              "name": "DuplicateSlashingReport",
              "fields": [],
              "index": 5,
              "docs": [
                "The given slashing report is valid but already previously reported."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 732,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "paras_registrar",
        "ParaInfo"
      ],
      "params": [
        {
          "name": "Account",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "manager",
              "type": 0,
              "typeName": "Account",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "locked",
              "type": 44,
              "typeName": "bool",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 733,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "paras_registrar",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotRegistered",
              "fields": [],
              "index": 0,
              "docs": [
                "The ID is not registered."
              ]
            },
            {
              "name": "AlreadyRegistered",
              "fields": [],
              "index": 1,
              "docs": [
                "The ID is already registered."
              ]
            },
            {
              "name": "NotOwner",
              "fields": [],
              "index": 2,
              "docs": [
                "The caller is not the owner of this Id."
              ]
            },
            {
              "name": "CodeTooLarge",
              "fields": [],
              "index": 3,
              "docs": [
                "Invalid para code size."
              ]
            },
            {
              "name": "HeadDataTooLarge",
              "fields": [],
              "index": 4,
              "docs": [
                "Invalid para head data size."
              ]
            },
            {
              "name": "NotParachain",
              "fields": [],
              "index": 5,
              "docs": [
                "Para is not a Parachain."
              ]
            },
            {
              "name": "NotParathread",
              "fields": [],
              "index": 6,
              "docs": [
                "Para is not a Parathread (on-demand parachain)."
              ]
            },
            {
              "name": "CannotDeregister",
              "fields": [],
              "index": 7,
              "docs": [
                "Cannot deregister para"
              ]
            },
            {
              "name": "CannotDowngrade",
              "fields": [],
              "index": 8,
              "docs": [
                "Cannot schedule downgrade of lease holding parachain to on-demand parachain"
              ]
            },
            {
              "name": "CannotUpgrade",
              "fields": [],
              "index": 9,
              "docs": [
                "Cannot schedule upgrade of on-demand parachain to lease holding parachain"
              ]
            },
            {
              "name": "ParaLocked",
              "fields": [],
              "index": 10,
              "docs": [
                "Para is locked from manipulation by the manager. Must use parachain or relay chain",
                "governance."
              ]
            },
            {
              "name": "NotReserved",
              "fields": [],
              "index": 11,
              "docs": [
                "The ID given for registration has not been reserved."
              ]
            },
            {
              "name": "EmptyCode",
              "fields": [],
              "index": 12,
              "docs": [
                "Registering parachain with empty code is not allowed."
              ]
            },
            {
              "name": "CannotSwap",
              "fields": [],
              "index": 13,
              "docs": [
                "Cannot perform a parachain slot / lifecycle swap. Check that the state of both paras",
                "are correct for the swap to work."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 734,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 476
        }
      },
      "docs": []
    }
  },
  {
    "id": 735,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "slots",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "ParaNotOnboarding",
              "fields": [],
              "index": 0,
              "docs": [
                "The parachain ID is not onboarding."
              ]
            },
            {
              "name": "LeaseError",
              "fields": [],
              "index": 1,
              "docs": [
                "There was an error with the lease."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 736,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          134
        ]
      },
      "docs": []
    }
  },
  {
    "id": 737,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "array": {
          "len": 36,
          "type": 738
        }
      },
      "docs": []
    }
  },
  {
    "id": 738,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 739
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 739,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 739,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          0,
          134,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 740,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "auctions",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "AuctionInProgress",
              "fields": [],
              "index": 0,
              "docs": [
                "This auction is already in progress."
              ]
            },
            {
              "name": "LeasePeriodInPast",
              "fields": [],
              "index": 1,
              "docs": [
                "The lease period is in the past."
              ]
            },
            {
              "name": "ParaNotRegistered",
              "fields": [],
              "index": 2,
              "docs": [
                "Para is not registered"
              ]
            },
            {
              "name": "NotCurrentAuction",
              "fields": [],
              "index": 3,
              "docs": [
                "Not a current auction."
              ]
            },
            {
              "name": "NotAuction",
              "fields": [],
              "index": 4,
              "docs": [
                "Not an auction."
              ]
            },
            {
              "name": "AuctionEnded",
              "fields": [],
              "index": 5,
              "docs": [
                "Auction has already ended."
              ]
            },
            {
              "name": "AlreadyLeasedOut",
              "fields": [],
              "index": 6,
              "docs": [
                "The para is already leased out for part of this range."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 741,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "crowdloan",
        "FundInfo"
      ],
      "params": [
        {
          "name": "AccountId",
          "type": 0
        },
        {
          "name": "Balance",
          "type": 6
        },
        {
          "name": "BlockNumber",
          "type": 4
        },
        {
          "name": "LeasePeriod",
          "type": 4
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "depositor",
              "type": 0,
              "typeName": "AccountId",
              "docs": []
            },
            {
              "name": "verifier",
              "type": 342,
              "typeName": "Option<MultiSigner>",
              "docs": []
            },
            {
              "name": "deposit",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "raised",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "end",
              "type": 4,
              "typeName": "BlockNumber",
              "docs": []
            },
            {
              "name": "cap",
              "type": 6,
              "typeName": "Balance",
              "docs": []
            },
            {
              "name": "last_contribution",
              "type": 742,
              "typeName": "LastContribution<BlockNumber>",
              "docs": []
            },
            {
              "name": "first_period",
              "type": 4,
              "typeName": "LeasePeriod",
              "docs": []
            },
            {
              "name": "last_period",
              "type": 4,
              "typeName": "LeasePeriod",
              "docs": []
            },
            {
              "name": "fund_index",
              "type": 4,
              "typeName": "FundIndex",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 742,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "crowdloan",
        "LastContribution"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Never",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "PreEnding",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "u32",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Ending",
              "fields": [
                {
                  "name": null,
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 743,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "crowdloan",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "FirstPeriodInPast",
              "fields": [],
              "index": 0,
              "docs": [
                "The current lease period is more than the first lease period."
              ]
            },
            {
              "name": "FirstPeriodTooFarInFuture",
              "fields": [],
              "index": 1,
              "docs": [
                "The first lease period needs to at least be less than 3 `max_value`."
              ]
            },
            {
              "name": "LastPeriodBeforeFirstPeriod",
              "fields": [],
              "index": 2,
              "docs": [
                "Last lease period must be greater than first lease period."
              ]
            },
            {
              "name": "LastPeriodTooFarInFuture",
              "fields": [],
              "index": 3,
              "docs": [
                "The last lease period cannot be more than 3 periods after the first period."
              ]
            },
            {
              "name": "CannotEndInPast",
              "fields": [],
              "index": 4,
              "docs": [
                "The campaign ends before the current block number. The end must be in the future."
              ]
            },
            {
              "name": "EndTooFarInFuture",
              "fields": [],
              "index": 5,
              "docs": [
                "The end date for this crowdloan is not sensible."
              ]
            },
            {
              "name": "Overflow",
              "fields": [],
              "index": 6,
              "docs": [
                "There was an overflow."
              ]
            },
            {
              "name": "ContributionTooSmall",
              "fields": [],
              "index": 7,
              "docs": [
                "The contribution was below the minimum, `MinContribution`."
              ]
            },
            {
              "name": "InvalidParaId",
              "fields": [],
              "index": 8,
              "docs": [
                "Invalid fund index."
              ]
            },
            {
              "name": "CapExceeded",
              "fields": [],
              "index": 9,
              "docs": [
                "Contributions exceed maximum amount."
              ]
            },
            {
              "name": "ContributionPeriodOver",
              "fields": [],
              "index": 10,
              "docs": [
                "The contribution period has already ended."
              ]
            },
            {
              "name": "InvalidOrigin",
              "fields": [],
              "index": 11,
              "docs": [
                "The origin of this call is invalid."
              ]
            },
            {
              "name": "NotParachain",
              "fields": [],
              "index": 12,
              "docs": [
                "This crowdloan does not correspond to a parachain."
              ]
            },
            {
              "name": "LeaseActive",
              "fields": [],
              "index": 13,
              "docs": [
                "This parachain lease is still active and retirement cannot yet begin."
              ]
            },
            {
              "name": "BidOrLeaseActive",
              "fields": [],
              "index": 14,
              "docs": [
                "This parachain's bid or lease is still active and withdraw cannot yet begin."
              ]
            },
            {
              "name": "FundNotEnded",
              "fields": [],
              "index": 15,
              "docs": [
                "The crowdloan has not yet ended."
              ]
            },
            {
              "name": "NoContributions",
              "fields": [],
              "index": 16,
              "docs": [
                "There are no contributions stored in this crowdloan."
              ]
            },
            {
              "name": "NotReadyToDissolve",
              "fields": [],
              "index": 17,
              "docs": [
                "The crowdloan is not ready to dissolve. Potentially still has a slot or in retirement",
                "period."
              ]
            },
            {
              "name": "InvalidSignature",
              "fields": [],
              "index": 18,
              "docs": [
                "Invalid signature."
              ]
            },
            {
              "name": "MemoTooLarge",
              "fields": [],
              "index": 19,
              "docs": [
                "The provided memo is too large."
              ]
            },
            {
              "name": "AlreadyInNewRaise",
              "fields": [],
              "index": 20,
              "docs": [
                "The fund is already in `NewRaise`"
              ]
            },
            {
              "name": "VrfDelayInProgress",
              "fields": [],
              "index": 21,
              "docs": [
                "No contributions allowed during the VRF delay"
              ]
            },
            {
              "name": "NoLeasePeriod",
              "fields": [],
              "index": 22,
              "docs": [
                "A lease period has not started yet, due to an offset in the starting block."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 744,
    "type": {
      "path": [
        "pallet_xcm",
        "pallet",
        "QueryStatus"
      ],
      "params": [
        {
          "name": "BlockNumber",
          "type": 4
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Pending",
              "fields": [
                {
                  "name": "responder",
                  "type": 350,
                  "typeName": "VersionedMultiLocation",
                  "docs": []
                },
                {
                  "name": "maybe_match_querier",
                  "type": 745,
                  "typeName": "Option<VersionedMultiLocation>",
                  "docs": []
                },
                {
                  "name": "maybe_notify",
                  "type": 746,
                  "typeName": "Option<(u8, u8)>",
                  "docs": []
                },
                {
                  "name": "timeout",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 0,
              "docs": []
            },
            {
              "name": "VersionNotifier",
              "fields": [
                {
                  "name": "origin",
                  "type": 350,
                  "typeName": "VersionedMultiLocation",
                  "docs": []
                },
                {
                  "name": "is_active",
                  "type": 44,
                  "typeName": "bool",
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Ready",
              "fields": [
                {
                  "name": "response",
                  "type": 748,
                  "typeName": "VersionedResponse",
                  "docs": []
                },
                {
                  "name": "at",
                  "type": 4,
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 745,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 350
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 350,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 746,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 747
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 747,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 747,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          2,
          2
        ]
      },
      "docs": []
    }
  },
  {
    "id": 748,
    "type": {
      "path": [
        "xcm",
        "VersionedResponse"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V2",
              "fields": [
                {
                  "name": null,
                  "type": 368,
                  "typeName": "v2::Response",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "V3",
              "fields": [
                {
                  "name": null,
                  "type": 387,
                  "typeName": "v3::Response",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 749,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          350
        ]
      },
      "docs": []
    }
  },
  {
    "id": 750,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          11,
          9,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 751,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 752
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 753,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 752,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          350,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 753,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 752
        }
      },
      "docs": []
    }
  },
  {
    "id": 754,
    "type": {
      "path": [
        "pallet_xcm",
        "pallet",
        "VersionMigrationStage"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "MigrateSupportedVersion",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "MigrateVersionNotifiers",
              "fields": [],
              "index": 1,
              "docs": []
            },
            {
              "name": "NotifyCurrentTargets",
              "fields": [
                {
                  "name": null,
                  "type": 755,
                  "typeName": "Option<Vec<u8>>",
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "MigrateAndNotifyOldTargets",
              "fields": [],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 755,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 13
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 13,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 756,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          4,
          0,
          757
        ]
      },
      "docs": []
    }
  },
  {
    "id": 757,
    "type": {
      "path": [
        "xcm",
        "VersionedAssetId"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "V3",
              "fields": [
                {
                  "name": null,
                  "type": 384,
                  "typeName": "v3::AssetId",
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 758,
    "type": {
      "path": [
        "pallet_xcm",
        "pallet",
        "RemoteLockedFungibleRecord"
      ],
      "params": [
        {
          "name": "ConsumerIdentifier",
          "type": 34
        },
        {
          "name": "MaxConsumers",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "amount",
              "type": 6,
              "typeName": "u128",
              "docs": []
            },
            {
              "name": "owner",
              "type": 350,
              "typeName": "VersionedMultiLocation",
              "docs": []
            },
            {
              "name": "locker",
              "type": 350,
              "typeName": "VersionedMultiLocation",
              "docs": []
            },
            {
              "name": "consumers",
              "type": 759,
              "typeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 759,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 760
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 761,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 760,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          34,
          6
        ]
      },
      "docs": []
    }
  },
  {
    "id": 761,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 760
        }
      },
      "docs": []
    }
  },
  {
    "id": 762,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 763
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 764,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 763,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          6,
          350
        ]
      },
      "docs": []
    }
  },
  {
    "id": 764,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "sequence": {
          "type": 763
        }
      },
      "docs": []
    }
  },
  {
    "id": 765,
    "type": {
      "path": [
        "pallet_xcm",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Unreachable",
              "fields": [],
              "index": 0,
              "docs": [
                "The desired destination was unreachable, generally because there is a no way of routing",
                "to it."
              ]
            },
            {
              "name": "SendFailure",
              "fields": [],
              "index": 1,
              "docs": [
                "There was some other issue (i.e. not to do with routing) in sending the message.",
                "Perhaps a lack of space for buffering the message."
              ]
            },
            {
              "name": "Filtered",
              "fields": [],
              "index": 2,
              "docs": [
                "The message execution fails the filter."
              ]
            },
            {
              "name": "UnweighableMessage",
              "fields": [],
              "index": 3,
              "docs": [
                "The message's weight could not be determined."
              ]
            },
            {
              "name": "DestinationNotInvertible",
              "fields": [],
              "index": 4,
              "docs": [
                "The destination `MultiLocation` provided cannot be inverted."
              ]
            },
            {
              "name": "Empty",
              "fields": [],
              "index": 5,
              "docs": [
                "The assets to be sent are empty."
              ]
            },
            {
              "name": "CannotReanchor",
              "fields": [],
              "index": 6,
              "docs": [
                "Could not re-anchor the assets to declare the fees for the destination chain."
              ]
            },
            {
              "name": "TooManyAssets",
              "fields": [],
              "index": 7,
              "docs": [
                "Too many assets have been attempted for transfer."
              ]
            },
            {
              "name": "InvalidOrigin",
              "fields": [],
              "index": 8,
              "docs": [
                "Origin is invalid for sending."
              ]
            },
            {
              "name": "BadVersion",
              "fields": [],
              "index": 9,
              "docs": [
                "The version of the `Versioned` value used is not able to be interpreted."
              ]
            },
            {
              "name": "BadLocation",
              "fields": [],
              "index": 10,
              "docs": [
                "The given location could not be used (e.g. because it cannot be expressed in the",
                "desired version of XCM)."
              ]
            },
            {
              "name": "NoSubscription",
              "fields": [],
              "index": 11,
              "docs": [
                "The referenced subscription could not be found."
              ]
            },
            {
              "name": "AlreadySubscribed",
              "fields": [],
              "index": 12,
              "docs": [
                "The location is invalid since it already has a subscription from us."
              ]
            },
            {
              "name": "InvalidAsset",
              "fields": [],
              "index": 13,
              "docs": [
                "Invalid asset for the operation."
              ]
            },
            {
              "name": "LowBalance",
              "fields": [],
              "index": 14,
              "docs": [
                "The owner does not own (all) of the asset that they wish to do the operation on."
              ]
            },
            {
              "name": "TooManyLocks",
              "fields": [],
              "index": 15,
              "docs": [
                "The asset owner has too many locks on the asset."
              ]
            },
            {
              "name": "AccountNotSovereign",
              "fields": [],
              "index": 16,
              "docs": [
                "The given account is not an identifiable sovereign account for any location."
              ]
            },
            {
              "name": "FeesNotMet",
              "fields": [],
              "index": 17,
              "docs": [
                "The operation required fees to be paid which the initiator could not meet."
              ]
            },
            {
              "name": "LockNotFound",
              "fields": [],
              "index": 18,
              "docs": [
                "A remote lock with the corresponding data could not be found."
              ]
            },
            {
              "name": "InUse",
              "fields": [],
              "index": 19,
              "docs": [
                "The unlock operation cannot succeed because there are still consumers of the lock."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 766,
    "type": {
      "path": [
        "pallet_message_queue",
        "BookState"
      ],
      "params": [
        {
          "name": "MessageOrigin",
          "type": 413
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "begin",
              "type": 4,
              "typeName": "PageIndex",
              "docs": []
            },
            {
              "name": "end",
              "type": 4,
              "typeName": "PageIndex",
              "docs": []
            },
            {
              "name": "count",
              "type": 4,
              "typeName": "PageIndex",
              "docs": []
            },
            {
              "name": "ready_neighbours",
              "type": 767,
              "typeName": "Option<Neighbours<MessageOrigin>>",
              "docs": []
            },
            {
              "name": "message_count",
              "type": 11,
              "typeName": "u64",
              "docs": []
            },
            {
              "name": "size",
              "type": 11,
              "typeName": "u64",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 767,
    "type": {
      "path": [
        "Option"
      ],
      "params": [
        {
          "name": "T",
          "type": 768
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Some",
              "fields": [
                {
                  "name": null,
                  "type": 768,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 768,
    "type": {
      "path": [
        "pallet_message_queue",
        "Neighbours"
      ],
      "params": [
        {
          "name": "MessageOrigin",
          "type": 413
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "prev",
              "type": 413,
              "typeName": "MessageOrigin",
              "docs": []
            },
            {
              "name": "next",
              "type": 413,
              "typeName": "MessageOrigin",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 769,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          413,
          4
        ]
      },
      "docs": []
    }
  },
  {
    "id": 770,
    "type": {
      "path": [
        "pallet_message_queue",
        "Page"
      ],
      "params": [
        {
          "name": "Size",
          "type": 4
        },
        {
          "name": "HeapSize",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": "remaining",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "remaining_size",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "first_index",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "first",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "last",
              "type": 4,
              "typeName": "Size",
              "docs": []
            },
            {
              "name": "heap",
              "type": 771,
              "typeName": "BoundedVec<u8, IntoU32<HeapSize, Size>>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 771,
    "type": {
      "path": [
        "bounded_collections",
        "bounded_vec",
        "BoundedVec"
      ],
      "params": [
        {
          "name": "T",
          "type": 2
        },
        {
          "name": "S",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": "Vec<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 772,
    "type": {
      "path": [
        "pallet_message_queue",
        "pallet",
        "Error"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "NotReapable",
              "fields": [],
              "index": 0,
              "docs": [
                "Page is not reapable because it has items remaining to be processed and is not old",
                "enough."
              ]
            },
            {
              "name": "NoPage",
              "fields": [],
              "index": 1,
              "docs": [
                "Page to be reaped does not exist."
              ]
            },
            {
              "name": "NoMessage",
              "fields": [],
              "index": 2,
              "docs": [
                "The referenced message could not be found."
              ]
            },
            {
              "name": "AlreadyProcessed",
              "fields": [],
              "index": 3,
              "docs": [
                "The message was already processed and cannot be processed again."
              ]
            },
            {
              "name": "Queued",
              "fields": [],
              "index": 4,
              "docs": [
                "The message is queued for future execution."
              ]
            },
            {
              "name": "InsufficientWeight",
              "fields": [],
              "index": 5,
              "docs": [
                "There is temporarily not enough weight to continue servicing messages."
              ]
            },
            {
              "name": "TemporarilyUnprocessable",
              "fields": [],
              "index": 6,
              "docs": [
                "This message is temporarily unprocessable.",
                "",
                "Such errors are expected, but not guaranteed, to resolve themselves eventually through",
                "retrying."
              ]
            },
            {
              "name": "QueuePaused",
              "fields": [],
              "index": 7,
              "docs": [
                "The queue is paused and no message can be executed from it.",
                "",
                "This can change at any time and may resolve in the future by re-trying."
              ]
            }
          ]
        }
      },
      "docs": [
        "The `Error` enum of this pallet."
      ]
    }
  },
  {
    "id": 773,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "unchecked_extrinsic",
        "UncheckedExtrinsic"
      ],
      "params": [
        {
          "name": "Address",
          "type": 88
        },
        {
          "name": "Call",
          "type": 68
        },
        {
          "name": "Signature",
          "type": 347
        },
        {
          "name": "Extra",
          "type": 774
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 13,
              "typeName": null,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 774,
    "type": {
      "path": [],
      "params": [],
      "def": {
        "tuple": [
          775,
          776,
          777,
          778,
          779,
          781,
          782,
          783,
          784
        ]
      },
      "docs": []
    }
  },
  {
    "id": 775,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_non_zero_sender",
        "CheckNonZeroSender"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 776,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_spec_version",
        "CheckSpecVersion"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 777,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_tx_version",
        "CheckTxVersion"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 778,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_genesis",
        "CheckGenesis"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 779,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_mortality",
        "CheckMortality"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 780,
              "typeName": "Era",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 780,
    "type": {
      "path": [
        "sp_runtime",
        "generic",
        "era",
        "Era"
      ],
      "params": [],
      "def": {
        "variant": {
          "variants": [
            {
              "name": "Immortal",
              "fields": [],
              "index": 0,
              "docs": []
            },
            {
              "name": "Mortal1",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 1,
              "docs": []
            },
            {
              "name": "Mortal2",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 2,
              "docs": []
            },
            {
              "name": "Mortal3",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 3,
              "docs": []
            },
            {
              "name": "Mortal4",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 4,
              "docs": []
            },
            {
              "name": "Mortal5",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 5,
              "docs": []
            },
            {
              "name": "Mortal6",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 6,
              "docs": []
            },
            {
              "name": "Mortal7",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 7,
              "docs": []
            },
            {
              "name": "Mortal8",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 8,
              "docs": []
            },
            {
              "name": "Mortal9",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 9,
              "docs": []
            },
            {
              "name": "Mortal10",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 10,
              "docs": []
            },
            {
              "name": "Mortal11",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 11,
              "docs": []
            },
            {
              "name": "Mortal12",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 12,
              "docs": []
            },
            {
              "name": "Mortal13",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 13,
              "docs": []
            },
            {
              "name": "Mortal14",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 14,
              "docs": []
            },
            {
              "name": "Mortal15",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 15,
              "docs": []
            },
            {
              "name": "Mortal16",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 16,
              "docs": []
            },
            {
              "name": "Mortal17",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 17,
              "docs": []
            },
            {
              "name": "Mortal18",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 18,
              "docs": []
            },
            {
              "name": "Mortal19",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 19,
              "docs": []
            },
            {
              "name": "Mortal20",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 20,
              "docs": []
            },
            {
              "name": "Mortal21",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 21,
              "docs": []
            },
            {
              "name": "Mortal22",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 22,
              "docs": []
            },
            {
              "name": "Mortal23",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 23,
              "docs": []
            },
            {
              "name": "Mortal24",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 24,
              "docs": []
            },
            {
              "name": "Mortal25",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 25,
              "docs": []
            },
            {
              "name": "Mortal26",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 26,
              "docs": []
            },
            {
              "name": "Mortal27",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 27,
              "docs": []
            },
            {
              "name": "Mortal28",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 28,
              "docs": []
            },
            {
              "name": "Mortal29",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 29,
              "docs": []
            },
            {
              "name": "Mortal30",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 30,
              "docs": []
            },
            {
              "name": "Mortal31",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 31,
              "docs": []
            },
            {
              "name": "Mortal32",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 32,
              "docs": []
            },
            {
              "name": "Mortal33",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 33,
              "docs": []
            },
            {
              "name": "Mortal34",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 34,
              "docs": []
            },
            {
              "name": "Mortal35",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 35,
              "docs": []
            },
            {
              "name": "Mortal36",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 36,
              "docs": []
            },
            {
              "name": "Mortal37",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 37,
              "docs": []
            },
            {
              "name": "Mortal38",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 38,
              "docs": []
            },
            {
              "name": "Mortal39",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 39,
              "docs": []
            },
            {
              "name": "Mortal40",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 40,
              "docs": []
            },
            {
              "name": "Mortal41",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 41,
              "docs": []
            },
            {
              "name": "Mortal42",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 42,
              "docs": []
            },
            {
              "name": "Mortal43",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 43,
              "docs": []
            },
            {
              "name": "Mortal44",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 44,
              "docs": []
            },
            {
              "name": "Mortal45",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 45,
              "docs": []
            },
            {
              "name": "Mortal46",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 46,
              "docs": []
            },
            {
              "name": "Mortal47",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 47,
              "docs": []
            },
            {
              "name": "Mortal48",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 48,
              "docs": []
            },
            {
              "name": "Mortal49",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 49,
              "docs": []
            },
            {
              "name": "Mortal50",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 50,
              "docs": []
            },
            {
              "name": "Mortal51",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 51,
              "docs": []
            },
            {
              "name": "Mortal52",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 52,
              "docs": []
            },
            {
              "name": "Mortal53",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 53,
              "docs": []
            },
            {
              "name": "Mortal54",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 54,
              "docs": []
            },
            {
              "name": "Mortal55",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 55,
              "docs": []
            },
            {
              "name": "Mortal56",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 56,
              "docs": []
            },
            {
              "name": "Mortal57",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 57,
              "docs": []
            },
            {
              "name": "Mortal58",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 58,
              "docs": []
            },
            {
              "name": "Mortal59",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 59,
              "docs": []
            },
            {
              "name": "Mortal60",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 60,
              "docs": []
            },
            {
              "name": "Mortal61",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 61,
              "docs": []
            },
            {
              "name": "Mortal62",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 62,
              "docs": []
            },
            {
              "name": "Mortal63",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 63,
              "docs": []
            },
            {
              "name": "Mortal64",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 64,
              "docs": []
            },
            {
              "name": "Mortal65",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 65,
              "docs": []
            },
            {
              "name": "Mortal66",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 66,
              "docs": []
            },
            {
              "name": "Mortal67",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 67,
              "docs": []
            },
            {
              "name": "Mortal68",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 68,
              "docs": []
            },
            {
              "name": "Mortal69",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 69,
              "docs": []
            },
            {
              "name": "Mortal70",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 70,
              "docs": []
            },
            {
              "name": "Mortal71",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 71,
              "docs": []
            },
            {
              "name": "Mortal72",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 72,
              "docs": []
            },
            {
              "name": "Mortal73",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 73,
              "docs": []
            },
            {
              "name": "Mortal74",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 74,
              "docs": []
            },
            {
              "name": "Mortal75",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 75,
              "docs": []
            },
            {
              "name": "Mortal76",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 76,
              "docs": []
            },
            {
              "name": "Mortal77",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 77,
              "docs": []
            },
            {
              "name": "Mortal78",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 78,
              "docs": []
            },
            {
              "name": "Mortal79",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 79,
              "docs": []
            },
            {
              "name": "Mortal80",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 80,
              "docs": []
            },
            {
              "name": "Mortal81",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 81,
              "docs": []
            },
            {
              "name": "Mortal82",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 82,
              "docs": []
            },
            {
              "name": "Mortal83",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 83,
              "docs": []
            },
            {
              "name": "Mortal84",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 84,
              "docs": []
            },
            {
              "name": "Mortal85",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 85,
              "docs": []
            },
            {
              "name": "Mortal86",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 86,
              "docs": []
            },
            {
              "name": "Mortal87",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 87,
              "docs": []
            },
            {
              "name": "Mortal88",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 88,
              "docs": []
            },
            {
              "name": "Mortal89",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 89,
              "docs": []
            },
            {
              "name": "Mortal90",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 90,
              "docs": []
            },
            {
              "name": "Mortal91",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 91,
              "docs": []
            },
            {
              "name": "Mortal92",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 92,
              "docs": []
            },
            {
              "name": "Mortal93",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 93,
              "docs": []
            },
            {
              "name": "Mortal94",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 94,
              "docs": []
            },
            {
              "name": "Mortal95",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 95,
              "docs": []
            },
            {
              "name": "Mortal96",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 96,
              "docs": []
            },
            {
              "name": "Mortal97",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 97,
              "docs": []
            },
            {
              "name": "Mortal98",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 98,
              "docs": []
            },
            {
              "name": "Mortal99",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 99,
              "docs": []
            },
            {
              "name": "Mortal100",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 100,
              "docs": []
            },
            {
              "name": "Mortal101",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 101,
              "docs": []
            },
            {
              "name": "Mortal102",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 102,
              "docs": []
            },
            {
              "name": "Mortal103",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 103,
              "docs": []
            },
            {
              "name": "Mortal104",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 104,
              "docs": []
            },
            {
              "name": "Mortal105",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 105,
              "docs": []
            },
            {
              "name": "Mortal106",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 106,
              "docs": []
            },
            {
              "name": "Mortal107",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 107,
              "docs": []
            },
            {
              "name": "Mortal108",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 108,
              "docs": []
            },
            {
              "name": "Mortal109",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 109,
              "docs": []
            },
            {
              "name": "Mortal110",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 110,
              "docs": []
            },
            {
              "name": "Mortal111",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 111,
              "docs": []
            },
            {
              "name": "Mortal112",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 112,
              "docs": []
            },
            {
              "name": "Mortal113",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 113,
              "docs": []
            },
            {
              "name": "Mortal114",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 114,
              "docs": []
            },
            {
              "name": "Mortal115",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 115,
              "docs": []
            },
            {
              "name": "Mortal116",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 116,
              "docs": []
            },
            {
              "name": "Mortal117",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 117,
              "docs": []
            },
            {
              "name": "Mortal118",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 118,
              "docs": []
            },
            {
              "name": "Mortal119",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 119,
              "docs": []
            },
            {
              "name": "Mortal120",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 120,
              "docs": []
            },
            {
              "name": "Mortal121",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 121,
              "docs": []
            },
            {
              "name": "Mortal122",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 122,
              "docs": []
            },
            {
              "name": "Mortal123",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 123,
              "docs": []
            },
            {
              "name": "Mortal124",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 124,
              "docs": []
            },
            {
              "name": "Mortal125",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 125,
              "docs": []
            },
            {
              "name": "Mortal126",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 126,
              "docs": []
            },
            {
              "name": "Mortal127",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 127,
              "docs": []
            },
            {
              "name": "Mortal128",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 128,
              "docs": []
            },
            {
              "name": "Mortal129",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 129,
              "docs": []
            },
            {
              "name": "Mortal130",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 130,
              "docs": []
            },
            {
              "name": "Mortal131",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 131,
              "docs": []
            },
            {
              "name": "Mortal132",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 132,
              "docs": []
            },
            {
              "name": "Mortal133",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 133,
              "docs": []
            },
            {
              "name": "Mortal134",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 134,
              "docs": []
            },
            {
              "name": "Mortal135",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 135,
              "docs": []
            },
            {
              "name": "Mortal136",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 136,
              "docs": []
            },
            {
              "name": "Mortal137",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 137,
              "docs": []
            },
            {
              "name": "Mortal138",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 138,
              "docs": []
            },
            {
              "name": "Mortal139",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 139,
              "docs": []
            },
            {
              "name": "Mortal140",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 140,
              "docs": []
            },
            {
              "name": "Mortal141",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 141,
              "docs": []
            },
            {
              "name": "Mortal142",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 142,
              "docs": []
            },
            {
              "name": "Mortal143",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 143,
              "docs": []
            },
            {
              "name": "Mortal144",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 144,
              "docs": []
            },
            {
              "name": "Mortal145",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 145,
              "docs": []
            },
            {
              "name": "Mortal146",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 146,
              "docs": []
            },
            {
              "name": "Mortal147",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 147,
              "docs": []
            },
            {
              "name": "Mortal148",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 148,
              "docs": []
            },
            {
              "name": "Mortal149",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 149,
              "docs": []
            },
            {
              "name": "Mortal150",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 150,
              "docs": []
            },
            {
              "name": "Mortal151",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 151,
              "docs": []
            },
            {
              "name": "Mortal152",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 152,
              "docs": []
            },
            {
              "name": "Mortal153",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 153,
              "docs": []
            },
            {
              "name": "Mortal154",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 154,
              "docs": []
            },
            {
              "name": "Mortal155",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 155,
              "docs": []
            },
            {
              "name": "Mortal156",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 156,
              "docs": []
            },
            {
              "name": "Mortal157",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 157,
              "docs": []
            },
            {
              "name": "Mortal158",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 158,
              "docs": []
            },
            {
              "name": "Mortal159",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 159,
              "docs": []
            },
            {
              "name": "Mortal160",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 160,
              "docs": []
            },
            {
              "name": "Mortal161",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 161,
              "docs": []
            },
            {
              "name": "Mortal162",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 162,
              "docs": []
            },
            {
              "name": "Mortal163",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 163,
              "docs": []
            },
            {
              "name": "Mortal164",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 164,
              "docs": []
            },
            {
              "name": "Mortal165",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 165,
              "docs": []
            },
            {
              "name": "Mortal166",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 166,
              "docs": []
            },
            {
              "name": "Mortal167",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 167,
              "docs": []
            },
            {
              "name": "Mortal168",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 168,
              "docs": []
            },
            {
              "name": "Mortal169",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 169,
              "docs": []
            },
            {
              "name": "Mortal170",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 170,
              "docs": []
            },
            {
              "name": "Mortal171",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 171,
              "docs": []
            },
            {
              "name": "Mortal172",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 172,
              "docs": []
            },
            {
              "name": "Mortal173",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 173,
              "docs": []
            },
            {
              "name": "Mortal174",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 174,
              "docs": []
            },
            {
              "name": "Mortal175",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 175,
              "docs": []
            },
            {
              "name": "Mortal176",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 176,
              "docs": []
            },
            {
              "name": "Mortal177",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 177,
              "docs": []
            },
            {
              "name": "Mortal178",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 178,
              "docs": []
            },
            {
              "name": "Mortal179",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 179,
              "docs": []
            },
            {
              "name": "Mortal180",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 180,
              "docs": []
            },
            {
              "name": "Mortal181",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 181,
              "docs": []
            },
            {
              "name": "Mortal182",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 182,
              "docs": []
            },
            {
              "name": "Mortal183",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 183,
              "docs": []
            },
            {
              "name": "Mortal184",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 184,
              "docs": []
            },
            {
              "name": "Mortal185",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 185,
              "docs": []
            },
            {
              "name": "Mortal186",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 186,
              "docs": []
            },
            {
              "name": "Mortal187",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 187,
              "docs": []
            },
            {
              "name": "Mortal188",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 188,
              "docs": []
            },
            {
              "name": "Mortal189",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 189,
              "docs": []
            },
            {
              "name": "Mortal190",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 190,
              "docs": []
            },
            {
              "name": "Mortal191",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 191,
              "docs": []
            },
            {
              "name": "Mortal192",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 192,
              "docs": []
            },
            {
              "name": "Mortal193",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 193,
              "docs": []
            },
            {
              "name": "Mortal194",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 194,
              "docs": []
            },
            {
              "name": "Mortal195",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 195,
              "docs": []
            },
            {
              "name": "Mortal196",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 196,
              "docs": []
            },
            {
              "name": "Mortal197",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 197,
              "docs": []
            },
            {
              "name": "Mortal198",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 198,
              "docs": []
            },
            {
              "name": "Mortal199",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 199,
              "docs": []
            },
            {
              "name": "Mortal200",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 200,
              "docs": []
            },
            {
              "name": "Mortal201",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 201,
              "docs": []
            },
            {
              "name": "Mortal202",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 202,
              "docs": []
            },
            {
              "name": "Mortal203",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 203,
              "docs": []
            },
            {
              "name": "Mortal204",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 204,
              "docs": []
            },
            {
              "name": "Mortal205",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 205,
              "docs": []
            },
            {
              "name": "Mortal206",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 206,
              "docs": []
            },
            {
              "name": "Mortal207",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 207,
              "docs": []
            },
            {
              "name": "Mortal208",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 208,
              "docs": []
            },
            {
              "name": "Mortal209",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 209,
              "docs": []
            },
            {
              "name": "Mortal210",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 210,
              "docs": []
            },
            {
              "name": "Mortal211",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 211,
              "docs": []
            },
            {
              "name": "Mortal212",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 212,
              "docs": []
            },
            {
              "name": "Mortal213",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 213,
              "docs": []
            },
            {
              "name": "Mortal214",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 214,
              "docs": []
            },
            {
              "name": "Mortal215",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 215,
              "docs": []
            },
            {
              "name": "Mortal216",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 216,
              "docs": []
            },
            {
              "name": "Mortal217",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 217,
              "docs": []
            },
            {
              "name": "Mortal218",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 218,
              "docs": []
            },
            {
              "name": "Mortal219",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 219,
              "docs": []
            },
            {
              "name": "Mortal220",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 220,
              "docs": []
            },
            {
              "name": "Mortal221",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 221,
              "docs": []
            },
            {
              "name": "Mortal222",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 222,
              "docs": []
            },
            {
              "name": "Mortal223",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 223,
              "docs": []
            },
            {
              "name": "Mortal224",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 224,
              "docs": []
            },
            {
              "name": "Mortal225",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 225,
              "docs": []
            },
            {
              "name": "Mortal226",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 226,
              "docs": []
            },
            {
              "name": "Mortal227",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 227,
              "docs": []
            },
            {
              "name": "Mortal228",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 228,
              "docs": []
            },
            {
              "name": "Mortal229",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 229,
              "docs": []
            },
            {
              "name": "Mortal230",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 230,
              "docs": []
            },
            {
              "name": "Mortal231",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 231,
              "docs": []
            },
            {
              "name": "Mortal232",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 232,
              "docs": []
            },
            {
              "name": "Mortal233",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 233,
              "docs": []
            },
            {
              "name": "Mortal234",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 234,
              "docs": []
            },
            {
              "name": "Mortal235",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 235,
              "docs": []
            },
            {
              "name": "Mortal236",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 236,
              "docs": []
            },
            {
              "name": "Mortal237",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 237,
              "docs": []
            },
            {
              "name": "Mortal238",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 238,
              "docs": []
            },
            {
              "name": "Mortal239",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 239,
              "docs": []
            },
            {
              "name": "Mortal240",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 240,
              "docs": []
            },
            {
              "name": "Mortal241",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 241,
              "docs": []
            },
            {
              "name": "Mortal242",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 242,
              "docs": []
            },
            {
              "name": "Mortal243",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 243,
              "docs": []
            },
            {
              "name": "Mortal244",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 244,
              "docs": []
            },
            {
              "name": "Mortal245",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 245,
              "docs": []
            },
            {
              "name": "Mortal246",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 246,
              "docs": []
            },
            {
              "name": "Mortal247",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 247,
              "docs": []
            },
            {
              "name": "Mortal248",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 248,
              "docs": []
            },
            {
              "name": "Mortal249",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 249,
              "docs": []
            },
            {
              "name": "Mortal250",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 250,
              "docs": []
            },
            {
              "name": "Mortal251",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 251,
              "docs": []
            },
            {
              "name": "Mortal252",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 252,
              "docs": []
            },
            {
              "name": "Mortal253",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 253,
              "docs": []
            },
            {
              "name": "Mortal254",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 254,
              "docs": []
            },
            {
              "name": "Mortal255",
              "fields": [
                {
                  "name": null,
                  "type": 2,
                  "typeName": null,
                  "docs": []
                }
              ],
              "index": 255,
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 781,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_nonce",
        "CheckNonce"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 79,
              "typeName": "T::Nonce",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 782,
    "type": {
      "path": [
        "frame_system",
        "extensions",
        "check_weight",
        "CheckWeight"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 783,
    "type": {
      "path": [
        "pallet_transaction_payment",
        "ChargeTransactionPayment"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": [
            {
              "name": null,
              "type": 60,
              "typeName": "BalanceOf<T>",
              "docs": []
            }
          ]
        }
      },
      "docs": []
    }
  },
  {
    "id": 784,
    "type": {
      "path": [
        "polkadot_runtime_common",
        "claims",
        "PrevalidateAttests"
      ],
      "params": [
        {
          "name": "T",
          "type": null
        }
      ],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  },
  {
    "id": 785,
    "type": {
      "path": [
        "polkadot_runtime",
        "Runtime"
      ],
      "params": [],
      "def": {
        "composite": {
          "fields": []
        }
      },
      "docs": []
    }
  }
]